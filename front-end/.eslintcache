[{"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\index.js":"1","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js":"2","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js":"3","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Admin.js":"4","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Auth.js":"5","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\routes.js":"6","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AdminNavbar.js":"7","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AuthNavbar.js":"8","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AdminFooter.js":"9","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Sidebar\\Sidebar.js":"10","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AuthFooter.js":"11","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmEmail.js":"12","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmPassword.js":"13","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPassword.js":"14","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\EditProfile.js":"15","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\UsersTable.js":"16","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js":"17","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\network\\ApiAxios.js":"18","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\Index.js":"19","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Tables.js":"20","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Maps.js":"21","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Register.js":"22","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Profile.js":"23","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Icons.js":"24","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Login.js":"25","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\NouveauClient.js":"26","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Clients.js":"27","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\config.js":"28","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\Header.js":"29","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\EditHeader.js":"30","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\UserHeader.js":"31","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\variables\\charts.js":"32","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Corbeille.js":"33","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\index.js":"34","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js":"35","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js":"36","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\layouts\\Admin.js":"37","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\layouts\\Auth.js":"38","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\routes.js":"39","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Footers\\AuthFooter.js":"40","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Navbars\\AdminNavbar.js":"41","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Navbars\\AuthNavbar.js":"42","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Footers\\AdminFooter.js":"43","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Sidebar\\Sidebar.js":"44","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ConfirmPassword.js":"45","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ConfirmEmail.js":"46","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js":"47","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ResetPassword.js":"48","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\EditProfile.js":"49","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\UsersTable.js":"50","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\network\\ApiAxios.js":"51","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Maps.js":"52","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Register.js":"53","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\Index.js":"54","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Tables.js":"55","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Profile.js":"56","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Login.js":"57","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Icons.js":"58","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Clients.js":"59","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Corbeille.js":"60","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\NouveauClient.js":"61","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\config.js":"62","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Headers\\EditHeader.js":"63","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Headers\\Header.js":"64","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Headers\\UserHeader.js":"65","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\variables\\charts.js":"66","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ClientStatusPage.js":"67","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Agenda.js":"68","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\variables\\general.js":"69","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Factures.js":"70","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\StatusContext.js":"71","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\NouvelleFacture.js":"72"},{"size":831,"mtime":1721215721062,"results":"73","hashOfConfig":"74"},{"size":378,"mtime":1720336952008,"results":"75","hashOfConfig":"74"},{"size":378,"mtime":1720336956029,"results":"76","hashOfConfig":"74"},{"size":1909,"mtime":1720441440318,"results":"77","hashOfConfig":"74"},{"size":2488,"mtime":1720336934490,"results":"78","hashOfConfig":"74"},{"size":3518,"mtime":1721643009010,"results":"79","hashOfConfig":"74"},{"size":6282,"mtime":1720510609728,"results":"80","hashOfConfig":"74"},{"size":3197,"mtime":1721208569107,"results":"81","hashOfConfig":"74"},{"size":2016,"mtime":1721304258988,"results":"82","hashOfConfig":"74"},{"size":13345,"mtime":1721298830459,"results":"83","hashOfConfig":"74"},{"size":2865,"mtime":1721304215853,"results":"84","hashOfConfig":"74"},{"size":1449,"mtime":1719997006702,"results":"85","hashOfConfig":"74"},{"size":3740,"mtime":1719996623467,"results":"86","hashOfConfig":"74"},{"size":4433,"mtime":1720001798596,"results":"87","hashOfConfig":"74"},{"size":5702,"mtime":1720001739481,"results":"88","hashOfConfig":"74"},{"size":2062,"mtime":1719904204308,"results":"89","hashOfConfig":"74"},{"size":913,"mtime":1719997026840,"results":"90","hashOfConfig":"74"},{"size":1693,"mtime":1720510040073,"results":"91","hashOfConfig":"74"},{"size":11788,"mtime":1720001424857,"results":"92","hashOfConfig":"74"},{"size":70577,"mtime":1720001829960,"results":"93","hashOfConfig":"74"},{"size":2839,"mtime":1720001760891,"results":"94","hashOfConfig":"74"},{"size":10657,"mtime":1720506877882,"results":"95","hashOfConfig":"74"},{"size":18967,"mtime":1720336918294,"results":"96","hashOfConfig":"74"},{"size":121150,"mtime":1720001750032,"results":"97","hashOfConfig":"74"},{"size":7620,"mtime":1721651824003,"results":"98","hashOfConfig":"74"},{"size":14574,"mtime":1721644377455,"results":"99","hashOfConfig":"74"},{"size":17517,"mtime":1721644684188,"results":"100","hashOfConfig":"74"},{"size":147,"mtime":1719858732158,"results":"101","hashOfConfig":"74"},{"size":5921,"mtime":1721588337180,"results":"102","hashOfConfig":"74"},{"size":1843,"mtime":1720336908717,"results":"103","hashOfConfig":"74"},{"size":1826,"mtime":1720336897673,"results":"104","hashOfConfig":"74"},{"size":10033,"mtime":1720001699377,"results":"105","hashOfConfig":"74"},{"size":9871,"mtime":1721645870512,"results":"106","hashOfConfig":"74"},{"size":936,"mtime":1722423584662,"results":"107","hashOfConfig":"108"},{"size":378,"mtime":1721734140683,"results":"109","hashOfConfig":"108"},{"size":378,"mtime":1721734140729,"results":"110","hashOfConfig":"108"},{"size":1910,"mtime":1722251044227,"results":"111","hashOfConfig":"108"},{"size":2488,"mtime":1721734140886,"results":"112","hashOfConfig":"108"},{"size":4838,"mtime":1722852249783,"results":"113","hashOfConfig":"108"},{"size":2860,"mtime":1722165531088,"results":"114","hashOfConfig":"108"},{"size":6542,"mtime":1722193680772,"results":"115","hashOfConfig":"108"},{"size":3196,"mtime":1722318535485,"results":"116","hashOfConfig":"108"},{"size":2012,"mtime":1722165534307,"results":"117","hashOfConfig":"108"},{"size":13344,"mtime":1722240619658,"results":"118","hashOfConfig":"108"},{"size":3740,"mtime":1721734141679,"results":"119","hashOfConfig":"108"},{"size":1449,"mtime":1721734141631,"results":"120","hashOfConfig":"108"},{"size":913,"mtime":1721734142124,"results":"121","hashOfConfig":"108"},{"size":4430,"mtime":1722004255894,"results":"122","hashOfConfig":"108"},{"size":5702,"mtime":1721734141762,"results":"123","hashOfConfig":"108"},{"size":2062,"mtime":1721734142214,"results":"124","hashOfConfig":"108"},{"size":3409,"mtime":1721815076498,"results":"125","hashOfConfig":"108"},{"size":2839,"mtime":1721734141887,"results":"126","hashOfConfig":"108"},{"size":10654,"mtime":1722004224469,"results":"127","hashOfConfig":"108"},{"size":11793,"mtime":1722412218656,"results":"128","hashOfConfig":"108"},{"size":7452,"mtime":1722846824536,"results":"129","hashOfConfig":"108"},{"size":18967,"mtime":1721734141952,"results":"130","hashOfConfig":"108"},{"size":6863,"mtime":1722320423072,"results":"131","hashOfConfig":"108"},{"size":121150,"mtime":1721734141807,"results":"132","hashOfConfig":"108"},{"size":20145,"mtime":1722854877699,"results":"133","hashOfConfig":"108"},{"size":9636,"mtime":1723046420463,"results":"134","hashOfConfig":"108"},{"size":24411,"mtime":1723213322848,"results":"135","hashOfConfig":"108"},{"size":469,"mtime":1721936815022,"results":"136","hashOfConfig":"108"},{"size":1843,"mtime":1721734140501,"results":"137","hashOfConfig":"108"},{"size":10484,"mtime":1722845494442,"results":"138","hashOfConfig":"108"},{"size":1826,"mtime":1721734140574,"results":"139","hashOfConfig":"108"},{"size":10033,"mtime":1721734141446,"results":"140","hashOfConfig":"108"},{"size":4657,"mtime":1722846741286,"results":"141","hashOfConfig":"108"},{"size":16790,"mtime":1722349262768,"results":"142","hashOfConfig":"108"},{"size":523,"mtime":1721802058177,"results":"143","hashOfConfig":"108"},{"size":18414,"mtime":1722774143113,"results":"144","hashOfConfig":"108"},{"size":930,"mtime":1722423538330,"results":"145","hashOfConfig":"108"},{"size":15313,"mtime":1723110014916,"results":"146","hashOfConfig":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},"1rh0a52",{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"149"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"149"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"149"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"149"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},"y0ymcd",{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"221"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"221"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"221"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"221"},"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\index.js",[],["304","305"],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Admin.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Auth.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\routes.js",["306","307","308","309"],"import Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport ConfirmEmail from \"./views/examples/ConfirmEmail\";\nimport EditProfile from \"./views/examples/EditProfile\";\nimport UsersTable from \"./views/examples/UsersTable\";\nimport ResetPassword from \"./views/examples/ResetPassword\";\nimport ConfirmPassword from \"./views/examples/ConfirmPassword\";\nimport ResetPasswordSuccess from \"./views/examples/ResetPasswordSuccess\";\nimport Clients from \"views/examples/Clients\";\nimport NouveauClient from \"views/examples/NouveauClient\";\nimport Corbeille from \"views/examples/Corbeille\";\n\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/icons\",\n    name: \"Icons\",\n    icon: \"ni ni-planet text-blue\",\n    component: Icons,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Profil Utilisateur\",\n    icon: \"ni ni-circle-08 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/tables\",\n    name: \"Tables\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Tables,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/clients\",\n    name: \"Clients \",\n    icon: \"ni ni-single-02\",\n    component: Clients,\n    layout: \"/admin\",\n    api: false,\n  },     \n      {\n        path: \"/corbeille\",\n        name: \"Corbeille\",\n        icon: \"ni ni-folder-17 text-red\",\n        component: Corbeille,\n        layout: \"/admin\",\n        api: false,\n      },\n  {\n    path: \"/nouveauClient\",\n    name: \"Nouveau Client\",\n    icon: \"ni ni-fat-add\", // ou supprimez complètement l'icône\n    component: NouveauClient,\n    layout: \"/admin\",\n    api: false,\n    hidden: true // Ajouté pour cacher cette route dans le menu\n  },\n  {\n    path: \"/login\",\n    name: \"Connexion\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/register\",\n    name: \"Inscription\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/edit-profile\",\n    name: \"Modifier Profil\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/users\",\n    name: \"Utilisateurs\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: UsersTable,\n    layout: \"/admin\",\n    api: true\n  },\n  // {\n  //   path: \"/reset-password\",\n  //   name: \"Réinitialiser le mot de passe\",\n  //   icon: \"ni ni-folder-17 text-pink\",\n  //   component: ResetPassword,\n  //   layout: \"/auth\",\n  //   api: true\n  // },\n  // {\n  //   path: \"/confirm-password/:id\",\n  //   name: \"Confirmer le mot de passe\",\n  //   icon: \"ni ni-folder-17 text-pink\",\n  //   component: ConfirmPassword,\n  //   layout: \"/auth\",\n  //   api: true\n  // },\n  // {\n  //   path: \"/reset-success\",\n  //   name: \"Réinitialisation du mot de passe confirmée\",\n  //   icon: \"ni ni-folder-17 text-pink\",\n  //   component: ResetPasswordSuccess,\n  //   layout: \"/auth\",\n  //   api: false\n  // }\n];\nexport default routes;\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AdminFooter.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AuthFooter.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmEmail.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmPassword.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPassword.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\EditProfile.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\UsersTable.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\network\\ApiAxios.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\Index.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Tables.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Maps.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Register.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Profile.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Icons.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Login.js",["310","311"],"import React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {login} from \"../../network/ApiAxios\";\n\nconst Login = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const tryLogin = async () => {\n        const response = await login(email, password);\n        const {data} = response;\n        if (data.success) {\n            setError(\"\");\n            localStorage.setItem(\"token\", data.token);\n            console.log('Stored token:', localStorage.getItem('token'));\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\n            props.history.push(\"/\");\n        } else {\n            setPassword(\"\");\n            setError(data.msg);\n        }\n    }\n\n    const handleClick = () => {\n        alert('Cette fonctionnalité est en cours de développement.');\n    };\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardHeader className=\"bg-transparent pb-5\">\n                        <div className=\"text-muted text-center mt-2 mb-3\">\n                            <small>Se connecter avec</small>\n                        </div>\n                        <div className=\"btn-wrapper text-center\">\n                            {/* <Button\n                                className=\"btn-neutral btn-icon\"\n                                color=\"default\"\n                                href=\"#pablo\"\n                                onClick={handleClick}\n                            >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                        alt=\"...\"\n                        src={require(\"assets/img/icons/common/google.svg\").default}\n                    />\n                  </span>\n                                <span className=\"btn-inner--text\">Google</span>\n                            </Button> */}\n                            // Avant\n<Button\n    className=\"btn-neutral btn-icon\"\n    color=\"default\"\n    href=\"#pablo\"\n    onClick={handleClick}\n>\n    <span className=\"btn-inner--icon\">\n        <img\n            alt=\"...\"\n            src={require(\"assets/img/icons/common/google.svg\").default}\n        />\n    </span>\n    <span className=\"btn-inner--text\">Google</span>\n</Button>\n\n// Après\n<Button\n    className=\"btn-neutral btn-icon\"\n    color=\"default\"\n    onClick={() => window.location.href = '/auth/google'}\n>\n    <span className=\"btn-inner--icon\">\n        <img\n            alt=\"...\"\n            src={require(\"assets/img/icons/common/google.svg\").default}\n        />\n    </span>\n    <span className=\"btn-inner--text\">Google</span>\n</Button>\n\n                        </div>\n                    </CardHeader>\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>Ou inscrivez-vous avec vos identifiants</small>\n                        </div>\n                        <Form role=\"form\">\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                           onChange={e => setEmail(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Mot de Passe\" type=\"password\" autoComplete=\"password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            {/*<div className=\"custom-control custom-control-alternative custom-checkbox\">*/}\n                            {/*    <input*/}\n                            {/*        className=\"custom-control-input\"*/}\n                            {/*        id=\" customCheckLogin\"*/}\n                            {/*        type=\"checkbox\"*/}\n                            {/*    />*/}\n                            {/*    <label*/}\n                            {/*        className=\"custom-control-label\"*/}\n                            {/*        htmlFor=\" customCheckLogin\"*/}\n                            {/*    >*/}\n                            {/*        <span className=\"text-muted\">Remember me</span>*/}\n                            {/*    </label>*/}\n                            {/*</div>*/}\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={tryLogin}>\n                                    Sign in\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n                <Row className=\"mt-3\">\n                    <Col xs=\"6\">\n                        {/* <a\n                            className=\"text-light\"\n                            onClick={() => props.history.push('/auth/reset-password')}\n                        >\n                            <small>Mot de passe oublié?</small>\n                        </a> */}\n                        <Button className=\"text-light p-0\" color=\"link\" onClick={() => props.history.push('/auth/reset-password')}>\n                            <small>Forgot password?</small>\n                        </Button>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"6\">\n                        {/* <a\n                            className=\"text-light\"\n                            onClick={() => props.history.push('/auth/register')}\n                        >\n                            <small>Créer un nouveau compte</small>\n                        </a> */}\n                         <Button className=\"text-light p-0\" color=\"link\" onClick={() => props.history.push('/auth/register')}>\n                            <small>Create new account</small>\n                        </Button>\n                    </Col>\n                </Row>\n            </Col>\n        </>\n    );\n}\n\nexport default Login;\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\NouveauClient.js",["312"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n  Button, Card, CardBody, CardHeader, Form, FormGroup, Input, Label, Container, Row, Col, UncontrolledAlert,\r\n  Nav, NavItem, NavLink, TabContent, TabPane\r\n} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const year = date.getFullYear();\r\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n  const day = ('0' + date.getDate()).slice(-2);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst NouveauClient = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [client, setClient] = useState({\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    dateNaissance: \"\",\r\n    mutuelle: \"\",\r\n    numeroSecu: \"\",\r\n    email: \"\",\r\n    telephoneFixe: \"\",\r\n    telephonePortable: \"\",\r\n    adresse: \"\",\r\n    codePostal: \"\",\r\n    ville: \"\",\r\n    note: \"\",\r\n    audiogramme: \"\",\r\n    statut: \"\" \r\n  });\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [audiogrammeSuccessMessage, setAudiogrammeSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Si un client est passé dans l'état, utilisez ses valeurs pour initialiser le formulaire\r\n    if (location.state && location.state.client) {\r\n      const formattedClient = {\r\n        ...location.state.client,\r\n        dateNaissance: formatDate(location.state.client.dateNaissance)\r\n      };\r\n      setClient(formattedClient);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const toggleTab = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n\r\nuseEffect(() => {\r\n  isMounted.current = true;\r\n  return () => {\r\n    isMounted.current = false;  // Nettoyage en démontant le composant\r\n  };\r\n}, []);\r\n\r\n  const validateForm = () => {\r\n    let tempErrors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!client.nom.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"nom\"] = \"Le nom est requis.\";\r\n    }\r\n\r\n    if (!client.email.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"email\"] = \"L'email est requis.\";\r\n    }\r\n\r\n    setErrors(tempErrors);\r\n    return formIsValid;\r\n  };\r\n\r\n//   const saveClient = async (clientData) => {\r\n//     const url = clientData._id ? `http://localhost:5100/api/clients/${clientData._id}` : 'http://localhost:5100/api/clients/add';\r\n//     const method = clientData._id ? 'PUT' : 'POST';\r\n\r\n//     try {\r\n//         const response = await fetch(url, {\r\n//             method: method,\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Authorization': localStorage.getItem('token')\r\n//             },\r\n//             body: JSON.stringify(clientData)\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//           const data = await response.json();\r\n//           toast.error(`Erreur: ${data.message}`);\r\n//       } else {\r\n//           const data = await response.json();\r\n//           toast.success(\"Le client a été ajouté/modifié avec succès !\");\r\n//           setTimeout(() => {\r\n//               history.push('/admin/clients');\r\n//           }, 3000);\r\n//       }\r\n//   } catch (error) {\r\n//       console.error('Erreur lors de l\\'opération sur le client:', error);\r\n//       toast.error(`Erreur lors de l'opération sur le client: ${error.message}`);\r\n//   }\r\n// };\r\n\r\nconst saveClient = async (clientData) => {\r\n  const url = clientData._id ? `http://localhost:5100/api/clients/${clientData._id}` : 'http://localhost:5100/api/clients/add';\r\n  const method = clientData._id ? 'PUT' : 'POST';\r\n\r\n  console.log('Envoi des données du client:', clientData);  // Log des données envoyées\r\n\r\n  try {\r\n      const response = await fetch(url, {\r\n          method: method,\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': localStorage.getItem('token')\r\n          },\r\n          body: JSON.stringify(clientData)\r\n      });\r\n\r\n      console.log('Statut de la réponse:', response.status);  // Log du statut de réponse HTTP\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        console.log('Erreur lors de l\\'enregistrement:', data);  // Log de l'erreur\r\n        toast.error(`Erreur: ${data.message}`);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du serveur:', data);  // Log de la réponse\r\n      toast.success(\"Le client a été ajouté/modifié avec succès !\");\r\n      setTimeout(() => {\r\n          history.push('/admin/clients');\r\n      }, 3000);\r\n  } catch (error) {\r\n      console.error('Erreur lors de l\\'opération sur le client:', error);\r\n      toast.error(`Erreur lors de l'opération sur le client: ${error.message}`);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClient({ ...client, [name]: value });\r\n    // Clear errors\r\n    if (!!errors[name]) setErrors({ ...errors, [name]: null });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      saveClient(client);\r\n    }\r\n  };\r\n  const handleSubmitAudiogramme = async (e) => {\r\n    e.preventDefault();\r\n    const audiogrammeData = {\r\n      ...client,\r\n      audiogramme: client.audiogramme\r\n    };\r\n  \r\n    const url = client._id ? `http://localhost:5100/api/clients/${client._id}` : 'http://localhost:5100/api/clients/add';\r\n    const method = client._id ? 'PUT' : 'POST';\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': localStorage.getItem('token')\r\n        },\r\n        body: JSON.stringify(audiogrammeData)\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`HTTP status ${response.status}: ${errorText}`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log('Opération réussie:', data);\r\n      setAudiogrammeSuccessMessage(\"Le bilan auditif a été enregistré avec succès.\");\r\n      setTimeout(() => {\r\n        setAudiogrammeSuccessMessage(\"\");\r\n        history.push('/admin/clients'); // Redirection après l'affichage du message de succès\r\n      }, 3000); // Affichage du message pendant 3 secondes\r\n  \r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'enregistrement du bilan auditif:\", error);\r\n      setErrors({ form: \"Erreur lors de l'opération sur le bilan auditif.\" });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    // <div style={{ paddingTop: '50px', backgroundColor: 'linear-gradient(87deg, #11cdef 0, #1171ef 100%) !important' }}>\r\n       <div style={{ paddingTop: '50px', background: 'linear-gradient(87deg, #11cdef 0, #1171ef 100%)' }}>\r\n    <Container className=\"mt-5\">\r\n      <Card>\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <CardHeader className=\"bg-white text-white\">\r\n            <h4 className=\"mb-0\">{client._id ? \"Modifier Client\" : \"Ajouter Nouveau Client\"}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '1' })}\r\n                  onClick={() => { toggleTab('1'); }}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  Informations Générales\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '2' })}\r\n                  onClick={() => { toggleTab('2'); }}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  Bilan Auditif\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              {/* Votre formulaire existant ici */}\r\n              {successMessage && (\r\n                <UncontrolledAlert color=\"success\" className=\"fixed-alert\" style={{ position: 'fixed', top: 0, left: 0, right: 0, zIndex: 1050 }} fade={false}>\r\n                  <span className=\"alert-inner--icon\">\r\n                    <i className=\"ni ni-like-2\" />\r\n                  </span>\r\n                  <span className=\"alert-inner--text\">\r\n                    <strong>Succès!</strong> {successMessage}\r\n                  </span>\r\n                </UncontrolledAlert>\r\n              )}\r\n              <Form onSubmit={handleSubmit}>\r\n              <Row form style={{ paddingTop: '50px' }}>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"nom\">Nom</Label>\r\n                    <Input type=\"text\" name=\"nom\" id=\"nom\" value={client.nom} onChange={handleInputChange} required />\r\n                    {errors.nom && <p style={{ color: 'red' }}>{errors.nom}</p>}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"prenom\">Prénom</Label>\r\n                    <Input type=\"text\" name=\"prenom\" id=\"prenom\" value={client.prenom} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                <FormGroup>\r\n                    <Label for=\"dateNaissance\">Date de Naissance</Label>\r\n                    <Input type=\"date\" name=\"dateNaissance\" id=\"dateNaissance\" value={client.dateNaissance || ''} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"mutuelle\">Mutuelle</Label>\r\n                    <Input type=\"text\" name=\"mutuelle\" id=\"mutuelle\" value={client.mutuelle} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"numeroSecu\">Numéro de Sécurité Sociale</Label>\r\n                    <Input type=\"text\" name=\"numeroSecu\" id=\"numeroSecu\" value={client.numeroSecu} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n              <Col md={4}>\r\n              <FormGroup>\r\n  <Label for=\"statut\">Statut</Label>\r\n  <Input type=\"select\" name=\"statut\" id=\"statut\" value={client.statut} onChange={handleInputChange}>\r\n    <option value=\"\">Sélectionner un statut</option>\r\n    <option value=\"Rdv fixé\">Rdv fixé</option>\r\n    <option value=\"Rdv Annulé\">Rdv Annulé</option>\r\n    <option value=\"Appareillé\">Appareillé</option>\r\n    <option value=\"Période d'essai\">Période d'essai</option>\r\n    <option value=\"Facturé\">Facturé</option>\r\n  </Input>\r\n</FormGroup>\r\n</Col>\r\n</Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephoneFixe\">Téléphone Fixe</Label>\r\n                    <Input type=\"text\" name=\"telephoneFixe\" id=\"telephoneFixe\" value={client.telephoneFixe} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephonePortable\">Téléphone Portable</Label>\r\n                    <Input type=\"text\" name=\"telephonePortable\" id=\"telephonePortable\" value={client.telephonePortable} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"adresse\">Adresse</Label>\r\n                <Input type=\"text\" name=\"adresse\" id=\"adresse\" value={client.adresse} onChange={handleInputChange} />\r\n              </FormGroup>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"codePostal\">Code Postal</Label>\r\n                    <Input type=\"text\" name=\"codePostal\" id=\"codePostal\" value={client.codePostal} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"ville\">Ville</Label>\r\n                    <Input type=\"text\" name=\"ville\" id=\"ville\" value={client.ville} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" id=\"email\" value={client.email} onChange={handleInputChange} required />\r\n                {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"note\">Note</Label>\r\n                <Input type=\"textarea\" name=\"note\" id=\"note\" value={client.note} onChange={handleInputChange} />\r\n              </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">Enregistrer</Button>\r\n                <Button type=\"button\" color=\"secondary\" onClick={() => history.push('/admin/clients')}>Annuler</Button>\r\n              </Form>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n  {audiogrammeSuccessMessage && (\r\n    <UncontrolledAlert color=\"success\" className=\"fixed-alert\" fade={false}>\r\n      <span className=\"alert-inner--icon\"><i className=\"ni ni-like-2\" /></span>\r\n      <span className=\"alert-inner--text\"><strong>Succès!</strong> {audiogrammeSuccessMessage}</span>\r\n    </UncontrolledAlert>\r\n  )}\r\n  <Form onSubmit={handleSubmitAudiogramme} style={{ paddingTop: '50px' }}>\r\n    <FormGroup>\r\n      <Label for=\"audiogramme\">Audiogramme</Label>\r\n      <Input type=\"text\" name=\"audiogramme\" id=\"audiogramme\" value={client.audiogramme} onChange={handleInputChange} />\r\n    </FormGroup>\r\n    {/* Ajoutez plus de champs selon vos besoins ici */}\r\n    <Button type=\"submit\" color=\"primary\">Enregistrer Bilan</Button>\r\n  </Form>\r\n</TabPane>\r\n\r\n          </TabContent>\r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </Container>\r\n    \r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\nexport default NouveauClient;\r\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Clients.js",["313","314"],"import { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n  Modal, ModalHeader, ModalBody, ModalFooter,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nconst formatDate = (isoString) => {\r\n  if (!isoString) return '';\r\n  const date = new Date(isoString);\r\n  return date.toLocaleDateString('fr-FR');  // ou 'en-US' selon le format local que vous préférez\r\n}\r\n\r\nconst Tables = () => {\r\n  const history = useHistory();\r\n  const [clients, setClients] = useState([]);\r\n  const [totalClients, setTotalClients] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [uploadError, setUploadError] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n    if (!modal) {\r\n      if (!isUploading && !uploadSuccess) {\r\n        setSelectedFile(null);\r\n        setUploadError(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnSelect = (row, isSelect) => {\r\n    console.log(`Select ${isSelect ? 'on' : 'off'} for row id ${row._id}`);\r\n    if (isSelect) {\r\n      setSelected(prevSelected => {\r\n        const newSelected = [...prevSelected, row._id];\r\n        console.log('New selected after add:', newSelected);\r\n        return newSelected;\r\n      });\r\n    } else {\r\n      setSelected(prevSelected => {\r\n        const newSelected = prevSelected.filter(x => x !== row._id);\r\n        console.log('New selected after remove:', newSelected);\r\n        return newSelected;\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n    console.log(`Select all ${isSelect ? 'on' : 'off'}`);\r\n    if (isSelect) {\r\n      const idsToSelect = rows.map(r => r._id);\r\n      console.log('Selecting all ids:', idsToSelect);\r\n      setSelected(idsToSelect);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n  \r\n  \r\n  const selectAllRenderer = ({ mode, checked, indeterminate }) => (\r\n    <input\r\n      type={mode}\r\n      checked={checked}\r\n      ref={input => {\r\n        if (input) input.indeterminate = indeterminate;\r\n      }}\r\n      // onChange={e => {\r\n      //   if (e.target.checked) {\r\n      //     const idsToSelect = clients.map(client => client._id);  // Assurez-vous que cette ligne utilise la bonne clé\r\n      //     setSelected(idsToSelect);\r\n      //   } else {\r\n      //     setSelected([]);\r\n      //   }\r\n      // }}\r\n      onChange={e => {\r\n        handleOnSelectAll(e.target.checked, clients);  // Appelez handleOnSelectAll avec le bon contexte\r\n      }}\r\n    />\r\n  );\r\n  \r\n  const handleDeleteSelected = async () => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer les clients sélectionnés ?\")) {\r\n      for (const clientId of selected) {\r\n        await fetch(`http://localhost:5100/api/clients/${clientId}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n          }\r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to delete client ${clientId}, status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (!data.success) {\r\n            throw new Error(data.message);\r\n          }\r\n          setTotalClients(prevTotal => prevTotal - 1);\r\n          toast.success(`Client supprimé avec succès!`);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n          toast.error(`Error deleting client ${clientId}: ${error.message}`);\r\n        });\r\n      }\r\n      // Mise à jour de l'état après la suppression de tous les clients sélectionnés\r\n      const newClients = clients.filter(client => !selected.includes(client._id));\r\n      setClients(newClients);\r\n      setSelected([]);\r\n    }\r\n  };\r\n  \r\n  \r\n  const deleteButton = selected.length > 0 ? (\r\n    <Button color=\"danger\" onClick={handleDeleteSelected} style={{ marginLeft: '10px' }}>\r\n      Supprimer la sélection\r\n    </Button>\r\n  ) : null;\r\n  \r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    selected: selected,\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n    selectionHeaderRenderer: selectAllRenderer,\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n  \r\n\r\n  const fetchClients = (setClients) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      console.error('Token not found in localStorage');\r\n      return;\r\n    }\r\n\r\n    const cleanToken = token.trim();\r\n    const formattedToken = cleanToken.replace('JWT ', '');\r\n\r\n    console.log(\"Formatted Token from localStorage:\", formattedToken);\r\n\r\n    fetch('http://localhost:5100/api/clients', {\r\n      headers: {\r\n         'Authorization': `Bearer ${formattedToken}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP status ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      console.log('Clients fetched:', data);\r\n      setClients(data);\r\n      setTotalClients(data.length);\r\n    })\r\n    .catch(err => {\r\n      console.error('Error fetching clients:', err.message);\r\n    });\r\n};\r\n\r\n  const handleAddClient = () => {\r\n    console.log('Redirection to /admin/nouveauClient');\r\n    history.push('/admin/nouveauClient');\r\n  };\r\n\r\n  const handleStatusChange = (clientId, newStatus) => {\r\n    // Mise à jour de l'état local\r\n    const updatedClients = clients.map(client =>\r\n      client._id === clientId ? { ...client, statut: newStatus } : client\r\n    );\r\n    setClients(updatedClients);\r\n  \r\n    // Envoie de la mise à jour au serveur\r\n    fetch(`http://localhost:5100/api/clients/${clientId}/status`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n      },\r\n      body: JSON.stringify({ statut: newStatus })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (!data.success) {\r\n        console.error('Failed to update status:', data.message);\r\n        toast.error(`Erreur lors de la mise à jour du statut: ${data.message}`);\r\n      } else {\r\n        toast.success('Statut mis à jour avec succès!');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error updating status:', error);\r\n      toast.error(`Erreur: ${error.message}`);\r\n    });\r\n  };\r\n  \r\n\r\n  const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nom\", text: \"Nom\", sort: true },  // Permet le tri sur la colonne \"Nom\"\r\n    { dataField: \"prenom\", text: \"Prénom\", sort: true },  // Permet le tri sur la colonne \"Prénom\"\r\n    { dataField: \"email\", text: \"Email\", sort: true },  // Permet le tri sur la colonne \"Email\"\r\n    { dataField: \"telephonePortable\", text: \"Téléphone Portable\", sort: true },  // Permet le tri sur la colonne \"Téléphone Portable\"\r\n    { dataField: \"ville\", text: \"Ville\", sort: true },  // Permet le tri sur la colonne \"Ville\"\r\n    {\r\n      dataField: \"dateNaissance\",\r\n      text: \"Date de Naissance\",\r\n      formatter: (cellContent, row) => formatDate(row.dateNaissance),\r\n      sort: true  // Permet le tri sur la colonne \"Date de Naissance\"\r\n    },\r\n    {\r\n      dataField: \"statut\",\r\n      text: \"Statut\",\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <select\r\n            defaultValue={row.statut}\r\n            onClick={(e) => e.stopPropagation()} \r\n            onChange={(e) => handleStatusChange(row._id, e.target.value)}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"Rdv fixé\">Rdv fixé</option>\r\n            <option value=\"Rdv Annulé\">Rdv Annulé</option>\r\n            <option value=\"Appareillé\">Appareillé</option>\r\n            <option value=\"Période d'essai\">Période d'essai</option>\r\n            <option value=\"Facturé\">Facturé</option>\r\n          </select>\r\n        );\r\n      },\r\n      editor: {\r\n        type: 'select',\r\n        options: [\r\n          { value: 'Rdv fixé', label: 'Rdv fixé' },\r\n          { value: 'Rdv Annulé', label: 'Rdv Annulé' },\r\n          { value: 'Appareillé', label: 'Appareillé' },\r\n          { value: \"Période d'essai\", label: \"Période d'essai\" },\r\n          { value: 'Facturé', label: 'Facturé' }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      text: 'Actions',\r\n      formatter: (cell, row) => (\r\n        <div>\r\n          <Button color=\"primary\" size=\"sm\" onClick={() => handleEditClient(row)}>\r\n            <i className=\"fas fa-pencil-alt\" />\r\n          </Button>\r\n          {' '}\r\n          <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteClient(row._id)}>\r\n            <i className=\"fas fa-trash\" />\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  \r\n\r\n  const handleEditClient = (client) => {\r\n    history.push({\r\n      pathname: '/admin/nouveauClient',\r\n      state: { client: client }\r\n    });\r\n  };\r\n\r\n\r\n  const handleDeleteClient = (clientId) => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce client ?\")) {\r\n      fetch(`http://localhost:5100/api/clients/${clientId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to delete client, status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.success) {\r\n          // Mettre à jour l'état immédiatement pour refléter la suppression\r\n          const newClients = clients.filter(client => client._id !== clientId);\r\n          \r\n          setSelected(selected.filter(id => id !== clientId)); // Nettoyer aussi les sélections\r\n          setTotalClients(prevTotal => prevTotal - 1);\r\n          toast.success(\"Client supprimé avec succès!\");\r\n          setClients(newClients);\r\n          console.log(\"Clients after deletion\", newClients);\r\n        } else {\r\n          throw new Error(data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n        toast.error(`Error: ${error.message}`);\r\n      });\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleFileUpload = () => {\r\n    if (!selectedFile) {\r\n      toast.warn(\"No file selected for upload.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    fetch('http://localhost:5100/api/clients/import', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n      },\r\n      body: formData\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to upload file');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setUploadSuccess(true);\r\n        console.log(\"Import success:\", data);\r\n        fetchClients(setClients);\r\n        setIsUploading(false);\r\n        \r\n        setSelectedFile(null);\r\n        toast.success(\"Fichier importé avec succès!\");\r\n        toggleModal(); // Ferme le modal après l'importation réussie\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Import error:\", err);\r\n        setIsUploading(false);\r\n        setUploadError(\"Error during import: \" + err.message);\r\n        toast.error(\"Error during import: \" + err.message);\r\n      });\r\n      setUploadSuccess(false);\r\n  };\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          {\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={e => onSizePerPageChange(e.target.value)}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          }{\" \"}\r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const { SearchBar } = Search;\r\n  useEffect(() => {\r\n    fetchClients(setClients);\r\n  }, []);\r\n  \r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      console.log(acceptedFiles);\r\n      setSelectedFile(acceptedFiles[0]);\r\n      setUploadSuccess(true);\r\n      setUploadError(\"\");\r\n      //toast.info(\"File selected for upload.\");\r\n    }\r\n  });\r\n\r\n  const sendEmailsToSelected = () => {\r\n    const selectedClients = clients.filter(client => selected.includes(client.id));\r\n    console.log(\"Sending emails to:\", selectedClients.map(c => c.email));\r\n    // Logique pour envoyer des emails\r\n  };\r\n\r\n  const handleSelectAllClick = () => {\r\n    if (selected.length < clients.length) {\r\n      setSelected(clients.map(x => x.id)); // Sélectionner tous les ID\r\n    } else {\r\n      setSelected([]); // Désélectionner tous\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Header totalClients={totalClients} />\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\r\n                <div>\r\n                  <h3 className=\"mb-0\" style={{ paddingBottom: '10px' }}>Clients (Total : {totalClients})</h3>\r\n                  {/* <Button color=\"info\" onClick={handleSelectAllClick}>\r\n  {selected.length === clients.length ? \"Désélectionner Tout\" : \"Sélectionner Tout\"}\r\n</Button> */}\r\n                </div>\r\n                <div>\r\n                  <Button color=\"primary\" onClick={handleAddClient} style={{ marginRight: '10px' }}>Ajouter Client</Button>\r\n                  <Button color=\"info\" onClick={toggleModal}>Importer Clients</Button>\r\n                  {/* <Button color=\"info\" onClick={sendEmailsToSelected}>Envoyer Mail</Button> */}\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\r\n  {props => (\r\n    <div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col-6\">\r\n        {deleteButton}\r\n          {/* Ici, vous pouvez remettre les boutons ou autres éléments comme avant */}\r\n        </div>\r\n        <div className=\"col-6 text-right\">\r\n          <SearchBar {...props.searchProps} className=\"form-control-sm\" placeholder=\"Rechercher\" style={{ border: '1px solid black', maxWidth: '250px' }} />\r\n        </div>\r\n      </div>\r\n      <div style={{ overflowX: 'auto' }}>\r\n        <BootstrapTable\r\n          {...props.baseProps}\r\n          keyField=\"_id\"\r\n          bootstrap4\r\n          pagination={pagination}\r\n          data={clients}\r\n          columns={columns}\r\n          selectRow={selectRow}\r\n          bordered={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  )}\r\n</ToolkitProvider>\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <Modal isOpen={modal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>Importer des fichiers</ModalHeader>\r\n        <ModalBody>\r\n          <div {...getRootProps({ className: 'dropzone' })} style={{ border: '2px dashed #007bff', padding: '20px', textAlign: 'center' }}>\r\n            <input {...getInputProps()} />\r\n            <i className=\"fas fa-file-upload fa-2x\"></i>\r\n            <p>Formats supportés : .csv, .xlsx</p>\r\n            {isDragActive ? (\r\n              <p>Relâchez le fichier ici...</p>\r\n            ) : (\r\n              <p>Glissez-déposez des fichiers ici, ou cliquez pour sélectionner des fichiers</p>\r\n            )}\r\n            {isUploading && <div>Chargement...</div>}\r\n            {uploadSuccess && <div className=\"alert alert-success\">Fichier importé avec succès!</div>}\r\n            {uploadError && <div className=\"alert alert-danger\">{uploadError}</div>}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleFileUpload} disabled={!selectedFile}>\r\n            OK\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={toggleModal}>Fermer</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\config.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\Header.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\EditHeader.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\UserHeader.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\variables\\charts.js",[],["315","316"],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Corbeille.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\index.js",[],["317","318"],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\layouts\\Admin.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\layouts\\Auth.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\routes.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Footers\\AuthFooter.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Footers\\AdminFooter.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ConfirmPassword.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ConfirmEmail.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ResetPassword.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\EditProfile.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\UsersTable.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\network\\ApiAxios.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Maps.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Register.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\Index.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Tables.js",["319","320"],"import React, { useState, useEffect } from \"react\";\n\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row\n} from \"reactstrap\";\n// core components\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"components/Headers/Header.js\";\nimport bootstrapImg from '../../assets/img/theme/bootstrap.jpg';\n//import angularImg from '../../assets/img/theme/angular.jpg';\n//import team1Img from '../../assets/img/theme/team-1-800x800.jpg'; // Et ainsi de suite pour les autres images\n\n\nconst Tables = () => {\n  const [statuses, setStatuses] = useState([]);\n  const history = useHistory();\n  \n\n  useEffect(() => {\n    const loadedStatuses = JSON.parse(localStorage.getItem('uniqueStatuses'));\n    setStatuses(loadedStatuses);\n  }, []);\n\n  const rows = statuses.map(status => ({\n    status: status,\n    budget: 'Définir une logique pour budget', // Vous pouvez ajouter une logique similaire pour le budget\n    completion: 'Définir une logique pour completion', // Et pour le pourcentage de complétion\n    projectImg: 'theme/bootstrap.jpg', // Définir si nécessaire\n    usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg'] // Définir si nécessaire\n  }));\n  \n  const handleRowClick = (status) => {\n    history.push(`/admin/statutClient/${status}`);\n  };\n  // const rows = [\n  //   { \n  //     status: 'Appareillé', \n  //     budget: '$2,500 USD', \n  //     completion: '60%', \n  //     projectImg: 'theme/bootstrap.jpg', // Assurez-vous que ce chemin est correct\n  //     usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg'] // Ceux-ci doivent également être définis\n  //   },\n  //   { \n  //     status: 'Période d\\'essai', \n  //     budget: '$1,800 USD', \n  //     completion: '100%', \n  //     projectImg: 'theme/angular.jpg', \n  //     usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg']\n  //   },\n  //   ,\n  //   { \n  //     status: 'Rdv fixé', \n  //     budget: '$1,800 USD', \n  //     completion: '100%', \n  //     projectImg: 'theme/angular.jpg', \n  //     usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg']\n  //   }\n  //   // Continuez à ajouter des lignes selon le même modèle\n  // ];\n  \n \n\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Clients par Statut</h3>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Budget</th>\n                    <th scope=\"col\">Completion</th>\n                    <th scope=\"col\">Users</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.map((row, index) => (\n                    <tr key={index} onClick={() => handleRowClick(row.status)} style={{ cursor: 'pointer' }}>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a className=\"avatar rounded-circle mr-3\">\n                            <img alt=\"...\" src={bootstrapImg} />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">{row.status}</span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>{row.budget}</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">{row.completion}</span>\n                          <Progress max=\"100\" value={row.completion.replace('%', '')} barClassName=\"bg-danger\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          {row.usersImg.map((img, idx) => (\n                            <a className=\"avatar avatar-sm\" key={idx}>\n                              <img alt=\"...\" className=\"rounded-circle\" src={bootstrapImg} />\n                            </a>\n                          ))}\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle className=\"btn-icon-only text-light\" href=\"#\" role=\"button\" size=\"sm\" color=\"\" onClick={(e) => e.preventDefault()}>\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Action</DropdownItem>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Another action</DropdownItem>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Something else here</DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                  <Pagination className=\"pagination justify-content-end mb-0\" listClassName=\"justify-content-end mb-0\">\n                    <PaginationItem className=\"disabled\">\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()} tabIndex=\"-1\">\n                        <i className=\"fas fa-angle-left\" />\n                        <span className=\"sr-only\">Previous</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem className=\"active\">\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>1</PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        2 <span className=\"sr-only\">(current)</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        3\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        <i className=\"fas fa-angle-right\" />\n                        <span className=\"sr-only\">Next</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardFooter>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\nexport default Tables;\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Profile.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Login.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Icons.js",[],["321","322"],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Clients.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Corbeille.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\NouveauClient.js",["323","324","325","326","327"],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\config.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Headers\\EditHeader.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Headers\\Header.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\components\\Headers\\UserHeader.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\variables\\charts.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\ClientStatusPage.js",["328"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Container, Row, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min\";\r\nimport axios from 'axios';\r\nconst formatDate = (isoString) => {\r\n  if (!isoString) return '';\r\n  const date = new Date(isoString);\r\n  return date.toLocaleDateString('fr-FR');  // ou 'en-US' selon le format local que vous préférez\r\n}\r\nconst ClientStatusPage = () => {\r\n  const { status } = useParams(); // Récupérer le statut de l'URL\r\n  const [clients, setClients] = useState([]); // État pour stocker les clients\r\n  \r\n  //const history = useHistory();\r\n  // const totalClients = clients.length; // Nombre total de clients affichés\r\n  const [totalClientsStatus, setTotalClients] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchClientsByStatus = async () => {\r\n      try {\r\n        const response = await axios.get(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/by-status/${status}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n          }\r\n        });\r\n        setClients(response.data);\r\n        setTotalClients(response.data.length);\r\n        console.log(\"Clients mis à jour avec le statut\", status, \":\", response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching clients:', err);\r\n      }\r\n    };\r\n\r\n    fetchClientsByStatus();\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('totalClientsStatus', totalClientsStatus);\r\n  }, [totalClientsStatus]);\r\n\r\n const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nom\", text: \"Nom\", sort: true },  // Permet le tri sur la colonne \"Nom\"\r\n    { dataField: \"prenom\", text: \"Prénom\", sort: true },  // Permet le tri sur la colonne \"Prénom\"\r\n    { dataField: \"email\", text: \"Email\", sort: true },  // Permet le tri sur la colonne \"Email\"\r\n    { dataField: \"telephonePortable\", text: \"Téléphone Portable\", sort: true },  // Permet le tri sur la colonne \"Téléphone Portable\"\r\n    { dataField: \"ville\", text: \"Ville\", sort: true },  // Permet le tri sur la colonne \"Ville\"\r\n    {\r\n      dataField: \"dateNaissance\",\r\n      text: \"Date de Naissance\",\r\n  formatter: (cellContent, row) => formatDate(row.dateNaissance),\r\n      sort: true  // Permet le tri sur la colonne \"Date de Naissance\"\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      text: 'Actions',\r\n      formatter: (cell, row) => (\r\n        <div>\r\n          {/* <Button color=\"primary\" size=\"sm\" onClick={() => handleEditClient(row)}>\r\n            <i className=\"fas fa-pencil-alt\" />\r\n          </Button> */}\r\n          {' '}\r\n          {/* <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteClient(row._id)}>\r\n            <i className=\"fas fa-trash\" />\r\n          </Button> */}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  const tablePagination = paginationFactory({\r\n    page: 1,\r\n    sizePerPage: 10,\r\n    lastPageText: '>>',\r\n    firstPageText: '<<',\r\n    nextPageText: '>',\r\n    prePageText: '<',\r\n    // showTotal: true,\r\n    alwaysShowAllBtns: true,\r\n    onPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    },\r\n    onSizePerPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header totalClientsStatus={totalClientsStatus}/>\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Clients avec le statut: {status} - (Total : {totalClientsStatus})</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\r\n                  {props => (\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      pagination={tablePagination}\r\n                      bordered={false}\r\n                    />\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientStatusPage;\r\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Agenda.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\variables\\general.js",[],["329","330"],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\Factures.js",["331","332","333","334"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  Modal, ModalHeader, ModalBody, ModalFooter,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nconst FacturesPDF = () => {\r\n  const history = useHistory();\r\n  const [factures, setFactures] = useState([]);\r\n  const [totalFactures, setTotalFactures] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selected, setSelected] = useState([]);\r\n  const [selectedFactureId, setSelectedFactureId] = useState(null);\r\n  const [hoveredFactureId, setHoveredFactureId] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [uploadError, setUploadError] = useState(\"\");\r\n\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n    if (!modal) {\r\n      if (!isUploading && !uploadSuccess) {\r\n        setSelectedFile(null);\r\n        setUploadError(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnSelect = (row, isSelect) => {\r\n    setTimeout(() => {\r\n      console.log(`Select ${isSelect ? 'on' : 'off'} for row id ${row._id}`);\r\n      if (isSelect) {\r\n        setSelected(prevSelected => {\r\n          const newSelected = [...prevSelected, row._id];\r\n          console.log('New selected after add:', newSelected);\r\n          return newSelected;\r\n        });\r\n      } else {\r\n        setSelected(prevSelected => {\r\n          const newSelected = prevSelected.filter(x => x !== row._id);\r\n          console.log('New selected after remove:', newSelected);\r\n          return newSelected;\r\n        });\r\n      }\r\n    }, 100);  // Délai de 100ms\r\n  };\r\n\r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n    console.log(`Select all ${isSelect ? 'on' : 'off'}`);\r\n    if (isSelect) {\r\n      const idsToSelect = rows.map(r => r._id);\r\n      console.log('Selecting all ids:', idsToSelect);\r\n      setSelected(idsToSelect);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n  \r\n  \r\n  const selectAllRenderer = ({ mode, checked, indeterminate }) => (\r\n    <input\r\n      type={mode}\r\n      checked={checked}\r\n      ref={input => {\r\n        if (input) input.indeterminate = indeterminate;\r\n      }}\r\n      // onChange={e => {\r\n      //   if (e.target.checked) {\r\n      //     const idsToSelect = factures.map(facture => facture._id);  // Assurez-vous que cette ligne utilise la bonne clé\r\n      //     setSelected(idsToSelect);\r\n      //   } else {\r\n      //     setSelected([]);\r\n      //   }\r\n      // }}\r\n      onChange={e => {\r\n        handleOnSelectAll(e.target.checked, factures);  // Appelez handleOnSelectAll avec le bon contexte\r\n      }}\r\n    />\r\n  );\r\n  \r\n  const handleDeleteSelected = async () => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer les factures sélectionnés ?\")) {\r\n      for (const factureId of selected) {\r\n        await fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/factures/${factureId}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n          }\r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to delete facture ${factureId}, status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (!data.success) {\r\n            throw new Error(data.message);\r\n          }\r\n          setTotalFactures(prevTotal => prevTotal - 1);\r\n          toast.success(`Facture supprimé avec succès!`);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n          toast.error(`Error deleting facture ${factureId}: ${error.message}`);\r\n        });\r\n      }\r\n      // Mise à jour de l'état après la suppression de tous les factures sélectionnés\r\n      const newFactures = factures.filter(facture => !selected.includes(facture._id));\r\n      setFactures(newFactures);\r\n      setSelected([]);\r\n    }\r\n  };\r\n  \r\n  \r\n  const deleteButton = selected.length > 0 ? (\r\n    <Button color=\"danger\" onClick={handleDeleteSelected} style={{ marginLeft: '10px' }}>\r\n      Supprimer la sélection\r\n    </Button>\r\n  ) : null;\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    clickToSelect: false, // Désactive la sélection automatique lors du clic sur la ligne\r\n    selected: selected,\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n    selectionHeaderRenderer: selectAllRenderer,\r\n    style: { backgroundColor: '#c8e6c9' },\r\n    hideSelectColumn: false, // Garde la colonne de case à cocher visible\r\n  };\r\n\r\n  const handleRowClick = (facture) => {\r\n    console.log(`Navigation to facture details for ID: ${facture._id}`);\r\n    setSelectedFactureId(facture._id);\r\n    history.push({\r\n      pathname: `/admin/nouvelleFacture`, // Assurez-vous que le chemin est correct\r\n      state: { facture: facture }\r\n    });\r\n  };\r\n\r\n  const fetchFactures = (setFactures) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      console.error('Token not found in localStorage');\r\n      return;\r\n    }\r\n\r\n    const cleanToken = token.trim();\r\n    const formattedToken = cleanToken.replace('JWT ', '');\r\n\r\n    console.log(\"Formatted Token from localStorage:\", formattedToken);\r\n\r\n    fetch('https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/factures', {\r\n      headers: {\r\n         'Authorization': `Bearer ${formattedToken}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP status ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      console.log('Factures fetched:', data);\r\n      setFactures(data);\r\n      setTotalFactures(data.length);\r\n    })\r\n    .catch(err => {\r\n      console.error('Error fetching factures:', err.message);\r\n    });\r\n};\r\n\r\n  useEffect(() => {\r\n    fetchFactures();\r\n  }, []);\r\n\r\n  const handleAddFacture = () => {\r\n    console.log('Redirection to /admin/nouvelleFacture');\r\n    history.push('/admin/nouvelleFacture');\r\n  };\r\n\r\n  const handleStatusChange = (factureId, newStatus) => {\r\n    // Mise à jour de l'état local\r\n    const updatedFactures = factures.map(facture =>\r\n      facture._id === factureId ? { ...facture, statut: newStatus } : facture\r\n    );\r\n    setFactures(updatedFactures);\r\n  \r\n    // Envoie de la mise à jour au serveur\r\n    fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/factures/${factureId}/status`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n      },\r\n      body: JSON.stringify({ statut: newStatus })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (!data.success) {\r\n        console.error('Failed to update status:', data.message);\r\n        toast.error(`Erreur lors de la mise à jour du statut: ${data.message}`);\r\n      } else {\r\n        toast.success('Statut mis à jour avec succès!');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error updating status:', error);\r\n      toast.error(`Erreur: ${error.message}`);\r\n    });\r\n  };\r\n  \r\n  const handleEditFacture = (e, facture) => {\r\n    e.stopPropagation(); // Empêche l'événement de se propager à d'autres éléments\r\n    history.push({\r\n      pathname: '/admin/nouvelleFacture',\r\n      state: { facture: facture }\r\n    });\r\n  };\r\n  \r\n  // const handleDeleteFacture = (e, factureId) => {\r\n  //   e.stopPropagation(); // Empêche l'événement de se propager à d'autres éléments\r\n  //   if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce facture ?\")) {\r\n  //     fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/factures/${factureId}`, {\r\n  //       method: 'DELETE',\r\n  //       headers: {\r\n  //         'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n  //       }\r\n  //     })\r\n  //     .then(response => {\r\n  //       if (!response.ok) {\r\n  //         throw new Error(`Failed to delete facture, status: ${response.status}`);\r\n  //       }\r\n  //       return response.json();\r\n  //     })\r\n  //     .then(data => {\r\n  //       if (data.success) {\r\n  //         const newFactures = factures.filter(facture => facture._id !== factureId);\r\n  //         setSelected(selected.filter(id => id !== factureId)); // Nettoyer aussi les sélections\r\n  //         setTotalFactures(prevTotal => prevTotal - 1);\r\n  //         toast.success(\"Facture supprimé avec succès!\");\r\n  //         setFactures(newFactures);\r\n  //       } else {\r\n  //         throw new Error(data.message);\r\n  //       }\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.error('Error:', error);\r\n  //       toast.error(`Error: ${error.message}`);\r\n  //     });\r\n  //   }\r\n  // };\r\n  \r\n  \r\n  const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    {\r\n      dataField: \"objet\",\r\n      text: \"Objet\",\r\n      sort: true,\r\n      classes: 'col-lg-2',\r\n      headerClasses: 'col-lg-2'\r\n    },\r\n    {\r\n      dataField: \"numeroFacture\",\r\n      text: \"Numero de Facture\",\r\n      sort: true,\r\n      classes: 'col-lg-2',\r\n      headerClasses: 'col-lg-2'\r\n    },\r\n    {\r\n      dataField: \"heureCreation\",\r\n      text: \"Heure de Création\",\r\n      sort: true,\r\n      classes: 'col-lg-2',\r\n      headerClasses: 'col-lg-2'\r\n    },\r\n    {\r\n      dataField: \"dateFacture\",\r\n      text: \"Date de la Facture\",\r\n      sort: true,\r\n      classes: 'col-lg-2',\r\n      headerClasses: 'col-lg-2',\r\n      formatter: (cellContent, row) => {\r\n        if (cellContent) {\r\n          const date = new Date(cellContent);\r\n          return date.toLocaleDateString(\"fr-FR\");\r\n        } else {\r\n          return 'Non spécifiée';\r\n        }\r\n      }\r\n    },\r\n    {\r\n      dataField: \"nomClient\",\r\n      text: \"Nom du Client\",\r\n      sort: true,\r\n      classes: 'col-lg-2',\r\n      headerClasses: 'col-lg-2'\r\n    },\r\n    {\r\n      dataField: \"totalGeneral\",\r\n      text: \"Total Général\",\r\n      sort: true,\r\n      classes: 'col-lg-2',\r\n      headerClasses: 'col-lg-2',\r\n      formatter: (cellContent) => typeof cellContent === 'number' ? `${cellContent.toFixed(2)} €` : 'Non spécifié' // Formate le total en euros\r\n    },\r\n    {\r\n      dataField: \"statut\",\r\n      text: \"Statut\",\r\n      classes: 'col-md-4 col-lg-3',\r\n      headerClasses: 'd-none d-lg-table-cell col-md-4 col-lg-3',\r\n      formatter: (cell, row) => (\r\n        <select\r\n          defaultValue={row.statut}\r\n          onClick={(e) => e.stopPropagation()}\r\n          onChange={(e) => handleStatusChange(row._id, e.target.value)}\r\n          className=\"form-control\"\r\n          style={{ minWidth: \"150px\" }}\r\n        >\r\n          <option value=\"Envoyée\">Envoyée</option>\r\n          <option value=\"Payée\">Payée</option>\r\n          <option value=\"Annulée\">Annulée</option>\r\n          <option value=\"Créée\">Créée</option>\r\n        </select>\r\n      )\r\n    }\r\n    // {\r\n    //   dataField: 'actions',\r\n    //   text: 'Actions',\r\n    //   classes: 'col-md-2 col-lg-2 text-center',\r\n    //   headerClasses: 'col-md-2 col-lg-2 text-center',\r\n    //   formatter: (cell, row) => (\r\n    //     <div>\r\n    //       <Button color=\"primary\" size=\"sm\" onClick={(e) => handleEditFacture(e, row)}>\r\n    //         <i className=\"fas fa-pencil-alt\"></i>\r\n    //       </Button>\r\n    //       <Button color=\"danger\" size=\"sm\" onClick={(e) => handleDeleteFacture(e, row._id)}>\r\n    //         <i className=\"fas fa-trash\"></i>\r\n    //       </Button>\r\n    //     </div>\r\n    //   )\r\n    // }\r\n  ];\r\n  \r\n  \r\n  // useEffect(() => {\r\n  //   const uniqueFacturesStatuses = [...new Set(factures.map(facture => facture.statut))];\r\n  //   localStorage.setItem('uniqueFacturesStatuses', JSON.stringify(uniqueFacturesStatuses));\r\n  // }, [factures]);\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem('totalFactures', totalFactures);\r\n  }, [totalFactures]);\r\n  \r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      toast.warn(\"Please select a file to upload.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(\"your-upload-url\", { // Replace \"your-upload-url\" with your actual upload URL\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setFactures([...factures, data]);\r\n        toast.success(\"Facture uploaded successfully!\");\r\n        toggleModal();\r\n      } else {\r\n        throw new Error(data.message || \"Could not upload file\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      toast.error(`Upload failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // const columns = [\r\n  //   { dataField: \"_id\", text: \"ID\", hidden: true },\r\n  //   { dataField: \"nomFacture\", text: \"Nom du Facture\", sort: true },\r\n  //   { dataField: \"date\", text: \"Date\", sort: true },\r\n  //   { dataField: \"montant\", text: \"Montant\", sort: true },\r\n  //   {\r\n  //     dataField: \"pdf\",\r\n  //     text: \"PDF\",\r\n  //     formatter: (cellContent, row) => (\r\n  //       <a href={row.pdf} target=\"_blank\" rel=\"noopener noreferrer\">\r\n  //         Voir PDF\r\n  //       </a>\r\n  //     )\r\n  //   }\r\n  // ];\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          {\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={e => onSizePerPageChange(e.target.value)}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          }{\" \"}\r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const { SearchBar } = Search;\r\n  useEffect(() => {\r\n    fetchFactures(setFactures);\r\n  }, [totalFactures]);\r\n\r\n  const rowEvents = {\r\n    onClick: (e, row, rowIndex) => {\r\n      if (e.target.tagName !== 'BUTTON' && e.target.tagName !== 'INPUT' && e.target.type !== 'checkbox') {\r\n        handleRowClick(row);\r\n      }\r\n    },\r\n    onMouseEnter: (e, row, rowIndex) => {\r\n      setHoveredFactureId(row._id); // Met à jour l'état pour la ligne survolée\r\n    },\r\n    onMouseLeave: (e, row, rowIndex) => {\r\n      setHoveredFactureId(null); // Réinitialise l'état lorsque la souris quitte la ligne\r\n    }\r\n  };\r\n  \r\n  \r\n  const rowStyle = (row, rowIndex) => {\r\n    if (row._id === selectedFactureId) {\r\n      return { backgroundColor: '#f8f9fe', cursor: 'pointer' }; // Style pour la ligne sélectionnée\r\n    } else if (row._id === hoveredFactureId) {\r\n      return { backgroundColor: '#e9ecef', cursor: 'pointer' }; // Style pour la ligne survolée\r\n    }\r\n    return {}; // Style par défaut\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header totalFactures={totalFactures} />\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\r\n                <h3 className=\"mb-0\">Factures PDF</h3>\r\n                {/* <Button color=\"primary\" onClick={handleAddFacture} style={{ marginRight: '10px' }}>Ajouter Facture</Button> */}\r\n                {/* <Button onClick={toggleModal} style={{ background: 'linear-gradient(87deg, #003D33 0%, #007D70 100%)',  color: 'white' }}>Importer Factures</Button> */}\r\n                <Button onClick={handleAddFacture} style={{ background: 'linear-gradient(87deg, #003D33 0%, #007D70 100%)',  color: 'white' }}>Ajouter Facture</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider keyField=\"id\" data={factures} columns={columns} search>\r\n                  {props => (\r\n                    <div>\r\n                      <div className=\"row mb-2\">\r\n                        <div className=\"col-6 text-left\">\r\n                        {deleteButton}\r\n                        </div>\r\n                        <div className=\"col-6 text-right\">\r\n                          <SearchBar {...props.searchProps} className=\"form-control-sm\" placeholder=\"Rechercher\" />\r\n                        </div>\r\n                      </div>\r\n                      <BootstrapTable\r\n  {...props.baseProps}\r\n  keyField=\"_id\"\r\n  bootstrap4\r\n  pagination={pagination}\r\n  data={factures}\r\n  columns={columns}\r\n  selectRow={selectRow}\r\n  rowEvents={rowEvents}\r\n  rowStyle={rowStyle}\r\n  bordered={false}\r\n/>\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <Modal isOpen={modal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>Importer des Factures</ModalHeader>\r\n        <ModalBody>\r\n          <input type=\"file\" onChange={handleFileChange} accept=\"application/pdf\" />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleFileUpload}>Importer</Button>\r\n          <Button color=\"secondary\" onClick={toggleModal}>Fermer</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FacturesPDF;\r\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\StatusContext.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\CRM-main\\front-end\\src\\views\\examples\\NouvelleFacture.js",["335","336","337"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaArrowLeft } from 'react-icons/fa'; \r\nimport {\r\n  Button, Card, CardBody, CardHeader, Form, FormGroup, Input, Label, Container, Row, Col, UncontrolledAlert,\r\n  Nav, NavItem, NavLink, TabContent, TabPane\r\n} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable'; // Importez autoTable si vous comptez l'utiliser\r\n\r\n\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const year = date.getFullYear();\r\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n  const day = ('0' + date.getDate()).slice(-2);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst NouvelleFacture = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [facture, setFacture] = useState({\r\n    objet: \"test\",\r\n    dateFacture: \"01/01/2020\",\r\n    heureCreation: \"13:04\",\r\n    nomClient: \"test\",\r\n    totalGeneral: \"500\",\r\n    statut: \"Créée\" \r\n  });\r\n  const [isEditable, setIsEditable] = useState(!location.state || !location.state.facture);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  //const [audiogrammeSuccessMessage, setAudiogrammeSuccessMessage] = useState(\"\");\r\n  const [clients, setClients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Si un facture est passé dans l'état, utilisez ses valeurs pour initialiser le formulaire\r\n    if (location.state && location.state.facture) {\r\n      const formattedFactures = {\r\n        ...location.state.facture,\r\n        dateFacture: formatDate(location.state.facture.dateFacture),\r\n        statut: location.state.facture.statut || \"Créée\"\r\n      };\r\n      setFacture(formattedFactures);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const toggleTab = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n\r\nuseEffect(() => {\r\n  isMounted.current = true;\r\n  return () => {\r\n    isMounted.current = false;  // Nettoyage en démontant le composant\r\n  };\r\n}, []);\r\n\r\n  const validateForm = () => {\r\n    let tempErrors = {};\r\n    let formIsValid = true;\r\n\r\n    // if (!facture.objet.trim()) {\r\n    //   formIsValid = false;\r\n    //   tempErrors[\"objet\"] = \"L'objet est requis.\";\r\n    // }\r\n\r\n    // if (!facture.email.trim()) {\r\n    //   formIsValid = false;\r\n    //   tempErrors[\"email\"] = \"L'email est requis.\";\r\n    // }\r\n\r\n    setErrors(tempErrors);\r\n    return formIsValid;\r\n  };\r\n\r\n\r\nconst saveFacture = async (factureData) => {\r\n  const url = factureData._id ? `https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/factures/${factureData._id}` : 'https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/factures/add';\r\n  const method = factureData._id ? 'PUT' : 'POST';\r\n\r\n  console.log('Envoi des données du facture:', factureData);  // Log des données envoyées\r\n\r\n  try {\r\n      const response = await fetch(url, {\r\n          method: method,\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': localStorage.getItem('token')\r\n          },\r\n          body: JSON.stringify(factureData)\r\n      });\r\n\r\n      console.log('Statut de la réponse:', response.status);  // Log du statut de réponse HTTP\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        console.log('Erreur lors de l\\'enregistrement:', data);  // Log de l'erreur\r\n        toast.error(`Erreur: ${data.message}`);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du serveur:', data);  // Log de la réponse\r\n      toast.success(\"Le facture a été ajoutée/modifiée avec succès !\");\r\n      setIsEditable(false);\r\n      // setTimeout(() => {\r\n      //     history.push('/admin/factures');\r\n      // }, 3000);\r\n  } catch (error) {\r\n      console.error('Erreur lors de l\\'opération sur le facture:', error);\r\n      toast.error(`Erreur lors de l'opération sur le facture: ${error.message}`);\r\n  }\r\n};\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFacture({ ...facture, [name]: value });\r\n    // Clear errors\r\n    if (!!errors[name]) setErrors({ ...errors, [name]: null });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      saveFacture(facture);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const generatePDF = () => {\r\n    const doc = new jsPDF();\r\n\r\n    // En-tête de la facture\r\n    doc.setFontSize(18);\r\n    doc.text(`${facture.objet}`, 105, 25, null, null, 'center');\r\n    doc.setFontSize(11);\r\n    doc.text(`Date: ${facture.dateFacture}`, 200, 30, null, null, 'right');\r\n\r\n    // Informations du client\r\n    doc.text(`Nom du Client: ${facture.nomClient}`, 20, 50);\r\n    doc.text(`Email: ${facture.email}`, 20, 65);\r\n    // Plus d'infos\r\n    // doc.text(`Objet: ${facture.objet}`, 20, 80);\r\n\r\n    // Vous pouvez ajouter ici un AutoTable si vous avez des listes d'éléments\r\n    autoTable(doc, {\r\n        head: [['Description', 'Quantité', 'Prix Unitaire', 'Total']],\r\n        body: [\r\n            // Supposons que vous avez un état qui contient ces informations\r\n            // Chaque ligne représenterait un item de la facture\r\n            ['Appareillage 1', '1', '550.00 €', '550.00 €'],\r\n            // ['Service 2', '2', '30.00 €', '60.00 €'],\r\n            // Ajoutez ici les lignes selon les données de votre application\r\n        ],\r\n        startY: 95\r\n    });\r\n\r\n    // Total général\r\n    doc.text(`Total Général: ${facture.totalGeneral} €`, 20, doc.lastAutoTable.finalY + 20);\r\n\r\n    // Statut de la facture\r\n    // doc.text(`Statut: ${facture.statut}`, 20, doc.lastAutoTable.finalY + 35);\r\n\r\n    // Sauvegarder le PDF\r\n    doc.save(`${facture.objet}.pdf`);\r\n\r\n};\r\n\r\n\r\n  return (\r\n      //  <div style={{ paddingTop: '50px', background: 'linear-gradient(87deg, #11cdef 0, #1171ef 100%)' }}>\r\n      <div id=\"facture-content\" style={{ paddingTop: '50px', background: 'linear-gradient(87deg, #003D33 0, #007D70 100%)' }}>\r\n    <Container className=\"mt-5\">\r\n      <Card>\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />          \r\n<CardHeader className=\"bg-white text-white\">\r\n  <Button color=\"link\" onClick={handleBack} style={{ marginRight: '20px', color: 'black' }}>\r\n    <FaArrowLeft />\r\n  </Button>\r\n  <h4 className=\"mb-0\">{facture._id ? \"Modifier Factures\" : \"Ajouter Nouvelle Facture\"}</h4>\r\n  <div style={{ float: 'right' }}>\r\n    {facture._id && (\r\n      <>\r\n      <Button color=\"info\" onClick={generatePDF}>Générer PDF</Button>\r\n        <Button color=\"info\" onClick={() => setIsEditable(true)} disabled={isEditable}>Modifier</Button>\r\n        <Button color=\"primary\" onClick={() => {\r\n          if (validateForm()) {\r\n            saveFacture(facture);\r\n          }\r\n        }} disabled={!isEditable} style={{ marginLeft: '10px' }}>Enregistrer Modifications</Button>\r\n      </>\r\n    )}\r\n  </div>\r\n</CardHeader>\r\n\r\n\r\n          <CardBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '1' })}\r\n                  onClick={() => { toggleTab('1'); }}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  Informations Générales\r\n                </NavLink>\r\n              </NavItem>\r\n              {/* <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '2' })}\r\n                  onClick={() => { toggleTab('2'); }}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  Bilan Auditif\r\n                </NavLink>\r\n              </NavItem> */}\r\n            </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              {/* Votre formulaire existant ici */}\r\n              {successMessage && (\r\n                <UncontrolledAlert color=\"success\" className=\"fixed-alert\" style={{ position: 'fixed', top: 0, left: 0, right: 0, zIndex: 1050 }} fade={false}>\r\n                  <span className=\"alert-inner--icon\">\r\n                    <i className=\"ni ni-like-2\" />\r\n                  </span>\r\n                  <span className=\"alert-inner--text\">\r\n                    <strong>Succès!</strong> {successMessage}\r\n                  </span>\r\n                </UncontrolledAlert>\r\n              )}\r\n              <Form onSubmit={handleSubmit}>\r\n              <Row form style={{ paddingTop: '50px' }}>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"objet\">Objet</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"objet\"\r\n                    id=\"objet\"\r\n                    value={facture.objet}\r\n                    onChange={handleInputChange}\r\n                    disabled={!isEditable}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n              <FormGroup>\r\n  <Label for=\"numeroFacture\">Numéro de la Facture</Label>\r\n  <Input\r\n    type=\"text\"\r\n    name=\"numeroFacture\"\r\n    id=\"numeroFacture\"\r\n    value={facture.numeroFacture}\r\n    readOnly // Rendre le champ en lecture seule\r\n  />\r\n</FormGroup>\r\n\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"nomClient\">Nom du Client</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"nomClient\"\r\n                    id=\"nomClient\"\r\n                    value={facture.nomClient}\r\n                    onChange={handleInputChange}\r\n                    disabled={!isEditable}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              </Row>\r\n              <Row form>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label for=\"dateFacture\">Date de la Facture</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"dateFacture\"\r\n                    id=\"dateFacture\"\r\n                    value={facture.dateFacture}\r\n                    onChange={handleInputChange}\r\n                    disabled={!isEditable}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label for=\"heureCreation\">Heure de Création</Label>\r\n                  <Input\r\n                    type=\"time\"\r\n                    name=\"heureCreation\"\r\n                    id=\"heureCreation\"\r\n                    value={facture.heureCreation}\r\n                    onChange={handleInputChange}\r\n                    disabled={!isEditable}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label for=\"totalGeneral\">Total Général</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"totalGeneral\"\r\n                    id=\"totalGeneral\"\r\n                    value={facture.totalGeneral}\r\n                    onChange={handleInputChange}\r\n                    disabled={!isEditable}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col md={12}>\r\n                <FormGroup>\r\n                  <Label for=\"statut\">Statut</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statut\"\r\n                    id=\"statut\"\r\n                    value={facture.statut}\r\n                    onChange={handleInputChange}\r\n                    disabled={!isEditable}\r\n                  >\r\n                    <option value=\"\">Sélectionner un statut</option>\r\n                    <option value=\"Envoyée\">Envoyée</option>\r\n                    <option value=\"Payée\">Payée</option>\r\n                    <option value=\"Annulée\">Annulée</option>\r\n                    <option value=\"Créée\">Créée</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephoneFixe\">Téléphone Fixe</Label>\r\n                    <Input type=\"text\" name=\"telephoneFixe\" id=\"telephoneFixe\" value={facture.telephoneFixe} onChange={handleInputChange} disabled={!isEditable}/>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephonePortable\">Téléphone Portable</Label>\r\n                    <Input type=\"text\" name=\"telephonePortable\" id=\"telephonePortable\" value={facture.telephonePortable} onChange={handleInputChange} disabled={!isEditable}/>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"adresse\">Adresse</Label>\r\n                <Input type=\"text\" name=\"adresse\" id=\"adresse\" value={facture.adresse} onChange={handleInputChange} disabled={!isEditable} />\r\n              </FormGroup>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"codePostal\">Code Postal</Label>\r\n                    <Input type=\"text\" name=\"codePostal\" id=\"codePostal\" value={facture.codePostal} onChange={handleInputChange} disabled={!isEditable} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"ville\">Ville</Label>\r\n                    <Input type=\"text\" name=\"ville\" id=\"ville\" value={facture.ville} onChange={handleInputChange} disabled={!isEditable} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" id=\"email\" value={facture.email} onChange={handleInputChange} required disabled={!isEditable} />\r\n                {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"note\">Note</Label>\r\n                <Input type=\"textarea\" name=\"note\" id=\"note\" value={facture.note} onChange={handleInputChange} disabled={!isEditable} style={{ minHeight: '100px', maxHeight: '300px' }}/>\r\n              </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\" disabled={!isEditable}>Enregistrer</Button>\r\n                <Button type=\"button\" color=\"secondary\" onClick={() => history.push('/admin/factures')}>Annuler</Button>\r\n              </Form>\r\n            </TabPane>\r\n\r\n          </TabContent>\r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </Container>\r\n    \r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\nexport default NouvelleFacture;\r\n",{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","severity":1,"message":"343","line":8,"column":8,"nodeType":"344","messageId":"345","endLine":8,"endColumn":20},{"ruleId":"342","severity":1,"message":"346","line":11,"column":8,"nodeType":"344","messageId":"345","endLine":11,"endColumn":21},{"ruleId":"342","severity":1,"message":"347","line":12,"column":8,"nodeType":"344","messageId":"345","endLine":12,"endColumn":23},{"ruleId":"342","severity":1,"message":"348","line":13,"column":8,"nodeType":"344","messageId":"345","endLine":13,"endColumn":28},{"ruleId":"349","severity":1,"message":"350","line":67,"column":42,"nodeType":"351","endLine":69,"endColumn":1},{"ruleId":"349","severity":1,"message":"350","line":82,"column":10,"nodeType":"351","endLine":85,"endColumn":1},{"ruleId":"342","severity":1,"message":"352","line":58,"column":26,"nodeType":"344","messageId":"345","endLine":58,"endColumn":43},{"ruleId":"342","severity":1,"message":"353","line":410,"column":9,"nodeType":"344","messageId":"345","endLine":410,"endColumn":29},{"ruleId":"342","severity":1,"message":"354","line":416,"column":9,"nodeType":"344","messageId":"345","endLine":416,"endColumn":29},{"ruleId":"338","replacedBy":"355"},{"ruleId":"340","replacedBy":"356"},{"ruleId":"338","replacedBy":"357"},{"ruleId":"340","replacedBy":"358"},{"ruleId":"359","severity":1,"message":"360","line":104,"column":27,"nodeType":"361","endLine":104,"endColumn":69},{"ruleId":"359","severity":1,"message":"360","line":122,"column":29,"nodeType":"361","endLine":122,"endColumn":71},{"ruleId":"338","replacedBy":"362"},{"ruleId":"340","replacedBy":"363"},{"ruleId":"342","severity":1,"message":"364","line":6,"column":8,"nodeType":"344","messageId":"345","endLine":6,"endColumn":13},{"ruleId":"342","severity":1,"message":"365","line":7,"column":8,"nodeType":"344","messageId":"345","endLine":7,"endColumn":17},{"ruleId":"342","severity":1,"message":"366","line":48,"column":10,"nodeType":"344","messageId":"345","endLine":48,"endColumn":17},{"ruleId":"342","severity":1,"message":"367","line":48,"column":19,"nodeType":"344","messageId":"345","endLine":48,"endColumn":29},{"ruleId":"342","severity":1,"message":"352","line":67,"column":26,"nodeType":"344","messageId":"345","endLine":67,"endColumn":43},{"ruleId":"342","severity":1,"message":"368","line":2,"column":21,"nodeType":"344","messageId":"345","endLine":2,"endColumn":31},{"ruleId":"338","replacedBy":"369"},{"ruleId":"340","replacedBy":"370"},{"ruleId":"342","severity":1,"message":"371","line":29,"column":23,"nodeType":"344","messageId":"345","endLine":29,"endColumn":37},{"ruleId":"342","severity":1,"message":"372","line":30,"column":25,"nodeType":"344","messageId":"345","endLine":30,"endColumn":41},{"ruleId":"342","severity":1,"message":"373","line":31,"column":10,"nodeType":"344","messageId":"345","endLine":31,"endColumn":21},{"ruleId":"342","severity":1,"message":"374","line":230,"column":9,"nodeType":"344","messageId":"345","endLine":230,"endColumn":26},{"ruleId":"342","severity":1,"message":"375","line":38,"column":10,"nodeType":"344","messageId":"345","endLine":38,"endColumn":17},{"ruleId":"342","severity":1,"message":"376","line":38,"column":19,"nodeType":"344","messageId":"345","endLine":38,"endColumn":29},{"ruleId":"342","severity":1,"message":"352","line":57,"column":26,"nodeType":"344","messageId":"345","endLine":57,"endColumn":43},"no-native-reassign",["377"],"no-negated-in-lhs",["378"],"no-unused-vars","'ConfirmEmail' is defined but never used.","Identifier","unusedVar","'ResetPassword' is defined but never used.","'ConfirmPassword' is defined but never used.","'ResetPasswordSuccess' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'setSuccessMessage' is assigned a value but never used.","'sendEmailsToSelected' is assigned a value but never used.","'handleSelectAllClick' is assigned a value but never used.",["377"],["378"],["377"],["378"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["377"],["378"],"'jsPDF' is defined but never used.","'autoTable' is defined but never used.","'facture' is assigned a value but never used.","'setFacture' is assigned a value but never used.","'useHistory' is defined but never used.",["377"],["378"],"'setIsUploading' is assigned a value but never used.","'setUploadSuccess' is assigned a value but never used.","'uploadError' is assigned a value but never used.","'handleEditFacture' is assigned a value but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]