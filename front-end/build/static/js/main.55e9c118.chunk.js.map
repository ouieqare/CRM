{"version":3,"sources":["assets/img/brand/white.png","assets/img/theme/sketch.jpg","assets/img/theme/team-1-800x800.jpg","assets/img/theme/profile-cover.jpg","assets/img/brand/logo.png","assets/img/icons/common/google.svg","config.js","network/ApiAxios.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","views/examples/ClientsContext.js","components/Headers/Header.js","views/Index.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Maps.js","views/examples/Register.js","views/examples/Login.js","assets/img/theme/bootstrap.jpg","views/examples/Tables.js","assets/img/theme/angular.jpg","views/examples/ConfirmEmail.js","views/examples/Icons.js","components/Headers/EditHeader.js","views/examples/EditProfile.js","views/examples/UsersTable.js","views/examples/ResetPassword.js","views/examples/ConfirmPassword.js","views/examples/ResetPasswordSuccess.js","views/examples/Clients.js","views/examples/NouveauClient.js","views/examples/Agenda.js","views/examples/Corbeille.js","views/examples/ClientStatusPage.js","variables/general.js","routes.js","views/examples/Factures.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","components/PrivateRoute/PrivateRoute.js","components/PrivateRoute/AuthRoutes.js","index.js","variables/charts.js"],"names":["config","WS_BASE_URL","DOMAIN_NAME","DEMO","instance","axios","create","baseURL","interceptors","request","use","a","token","localStorage","getItem","headers","Authorization","ContentType","getAll","post","register","name","email","password","console","log","confirmRegister","id","forgotPassword","confirmReset","login","logout","edit","userID","AdminNavbar","props","username","JSON","parse","logOut","response","data","success","removeItem","history","push","error","message","Navbar","className","expand","Container","fluid","to","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","default","DropdownMenu","right","DropdownItem","header","tag","Link","divider","href","onClick","Footer","Row","Col","xl","rel","target","NavItem","NavLink","React","Component","Sidebar","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","hidden","children","length","activeRoute","layout","path","e","preventDefault","icon","Collapse","isOpen","child","childKey","NavLinkRRD","createApiLinks","api","activeClassName","bind","routeName","this","location","pathname","indexOf","navbarBrandProps","logo","innerLink","outterLink","NavbarBrand","imgAlt","imgSrc","aria-labelledby","xs","aria-label","defaultProps","ClientsContext","createContext","ClientsProvider","useState","totalClients","setTotalClients","Provider","value","incrementClients","amount","prev","decrementClients","Header","useContext","style","background","lg","Card","CardBody","CardTitle","Index","toggleNavs","index","activeNav","chartExample1Data","window","Chart","parseOptions","chartOptions","CardHeader","pills","classnames","active","data-toggle","chartExample1","options","getDatasetAtEvent","chartExample2","Button","color","size","Table","responsive","scope","Progress","max","barClassName","UserHeader","useHistory","minHeight","backgroundImage","backgroundSize","backgroundPosition","md","Profile","user","htmlFor","defaultValue","disabled","rows","MapWrapper","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","scrollwheel","styles","featureType","elementType","stylers","visibility","saturation","lightness","position","Maps","googleMapURL","loadingElement","height","containerElement","mapElement","borderRadius","Register","setName","setEmail","setPassword","confirmPassword","setConfirmPassword","checkbox","setCheckbox","setError","showToast","setShowToast","toastMessage","setToastMessage","setUserID","registerUser","msg","aria-live","aria-atomic","width","bottom","zIndex","Toast","top","backgroundColor","padding","onClose","show","delay","autohide","Body","role","onChange","autoComplete","checked","Login","tryLogin","setItem","stringify","alert","Tables","statuses","setStatuses","useEffect","loadedStatuses","status","budget","completion","projectImg","usersImg","row","cursor","bootstrapImg","replace","img","idx","CardFooter","Pagination","listClassName","PaginationItem","PaginationLink","tabIndex","ConfirmEmail","useParams","valid","setValid","setTimeout","runAsync","EditHeader","EditProfile","isTestUser","setIsTestUser","editUser","_id","UsersTable","users","setUsers","ResetPassword","sendEmail","errors","ConfirmPassword","confirm","ResetPasswordSuccess","clients","setClients","modal","setModal","isUploading","setIsUploading","uploadSuccess","setUploadSuccess","uploadError","setUploadError","selectedFile","setSelectedFile","selected","setSelected","selectedClientId","setSelectedClientId","hoveredClientId","setHoveredClientId","toggleModal","handleOnSelectAll","isSelect","idsToSelect","r","handleDeleteSelected","clientId","fetch","method","trim","then","ok","Error","json","prevTotal","toast","catch","newClients","filter","client","includes","deleteButton","marginLeft","selectRow","mode","clickToSelect","onSelect","prevSelected","newSelected","x","onSelectAll","selectionHeaderRenderer","indeterminate","ref","input","hideSelectColumn","fetchClients","formattedToken","err","columns","dataField","text","sort","classes","headerClasses","formatter","cellContent","maxWidth","isoString","dateNaissance","Date","toLocaleDateString","cell","statut","stopPropagation","newStatus","updatedClients","body","handleStatusChange","minWidth","editor","label","handleEditClient","handleDeleteClient","uniqueStatuses","Set","pagination","paginationFactory","page","alwaysShowAllBtns","withFirstAndLast","sizePerPageRenderer","currSizePerPage","onSizePerPageChange","aria-controls","SearchBar","Search","useDropzone","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","rowEvents","rowIndex","tagName","onMouseEnter","onMouseLeave","rowStyle","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","paddingBottom","marginRight","keyField","search","searchProps","border","overflowX","baseProps","bootstrap4","bordered","Modal","toggle","ModalHeader","ModalBody","textAlign","ModalFooter","formData","FormData","append","warn","formatDate","dateString","date","year","getFullYear","month","getMonth","slice","day","getDate","calendar","NouveauClient","useLocation","nom","prenom","mutuelle","numeroSecu","telephoneFixe","telephonePortable","adresse","codePostal","ville","note","audiogramme","setClient","isEditable","setIsEditable","activeTab","setActiveTab","audiogrammeSuccessMessage","setAudiogrammeSuccessMessage","formattedClient","toggleTab","tab","setErrors","successMessage","isMounted","useRef","current","validateForm","tempErrors","formIsValid","saveClient","clientData","url","handleInputChange","handleSubmitAudiogramme","audiogrammeData","errorText","form","paddingTop","goBack","float","tabs","TabContent","TabPane","tabId","UncontrolledAlert","left","fade","onSubmit","Label","for","required","maxHeight","Corbeille","deleteClient","fetchDeletedClients","restoreClient","currentClients","cleanToken","noDataIndication","ClientStatusPage","get","fetchClientsByStatus","tablePagination","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","onPageChange","events","title","start","end","component","createCalendar","Calendar","refs","plugins","interaction","dayGridPlugin","defaultView","locale","frLocale","selectable","selectHelper","editable","select","info","modalAdd","startDate","startStr","endDate","endStr","radios","eventClick","event","modalChange","eventId","eventTitle","eventDescription","extendedProps","description","render","currentDate","view","changeView","newView","addNewEvent","newEvents","addEvent","undefined","changeEvent","remove","deleteEventSweetAlert","warning","display","marginTop","onConfirm","onCancel","deleteEvent","confirmBtnCssClass","cancelBtnBsStyle","confirmBtnText","cancelBtnText","showCancel","btnSize","confirmBtnBsStyle","next","data-calendar-view","ButtonGroup","Clients","factures","setFactures","totalFactures","handleFileUpload","pdf","files","accept","Admin","getRoutes","getBrandText","i","document","documentElement","scrollTop","scrollingElement","mainContent","from","AdminFooter","UncontrolledCollapse","toggler","Auth","classList","add","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","y","points","AuthFooter","PrivateRoute","rest","AuthRoutes","ReactDOM","AdminLayout","AuthLayout","getElementById","elements","Rectangle","prototype","draw","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","primary","secondary","danger","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","item","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","module","exports","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","legend","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent","maxBarThickness"],"mappings":"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","file":"static/js/main.55e9c118.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/white.ff43f0eb.png\";","export default __webpack_public_path__ + \"static/media/sketch.a6af780a.jpg\";","export default __webpack_public_path__ + \"static/media/team-1-800x800.fa5a7ac2.jpg\";","export default __webpack_public_path__ + \"static/media/profile-cover.97899245.jpg\";","export default __webpack_public_path__ + \"static/media/logo.e79bef8d.png\";","export default __webpack_public_path__ + \"static/media/google.eae9aa93.svg\";","// const config = {\n//     WS_BASE_URL: 'http://localhost:5100/api/',\n//     DOMAIN_NAME: 'http://localhost:3000',\n//     DEMO: true\n// }\n\n// export default config;\nconst config = {\n    WS_BASE_URL: 'https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/',  // Remplacez par l'URL de votre application Heroku\n    DOMAIN_NAME: 'https://ouieqare-crm-336f65ca3acc.herokuapp.com',  // Remplacez par l'URL de votre application Heroku\n    DEMO: true\n};\n\nexport default config;\n","// import axios from 'axios';\n// import config from \"../config\";\n\n// // const https = require('https');\n// //\n// // const agent = new https.Agent({\n// //     rejectUnauthorized: false,\n// // });\n\n// const instance = axios.create({\n//     baseURL: config.WS_BASE_URL,\n// });\n\n// instance.interceptors.request.use(async (config) => {\n//     const token = localStorage.getItem('token');\n//     config.headers.Authorization = (token ? token : '');\n//     config.headers.ContentType = 'application/json';\n//     return config;\n// });\n\n// export const getAll = async () => (\n//     await instance.post('users/all')\n// );\n\n// export const register = async (name, email, password) => {\n//     console.log(\"Attempting to register to:\", `${config.WS_BASE_URL}users/register`);\n//     return await instance.post('/users/register', { name, email, password });\n// };\n\n// export const confirmRegister = async id => (\n//     await instance.post(`users/confirm/${id}`)\n// );\n\n// export const forgotPassword = async email => (\n//     await instance.post('users/forgotpassword', {email})\n// );\n\n// export const confirmReset = async (id, password) => (\n//     await instance.post(`users/resetpass/${id}`, {password})\n// );\n\n// export const login = async (email, password) => {\n//     console.log(\"Attempting to login to:\", `${config.WS_BASE_URL}/users/login`);\n//     return await instance.post('/users/login', { email, password });\n// };\n\n// // export const logout = async token => (\n// //     await instance.post('users/logout', {token})\n// // );\n// export const logout = async token => {\n//     console.log(\"Sending logout request with token:\", token);\n//     return await instance.post('users/logout', {token});\n// };\n\n// export const edit = async (userID, name, email) => (\n//     await instance.post('/users/edit', {userID, name, email})\n// );\nimport axios from 'axios';\nimport config from \"../config\";\n\nconst instance = axios.create({\n    baseURL: config.WS_BASE_URL,\n});\n\ninstance.interceptors.request.use(async (config) => {\n    const token = localStorage.getItem('token');\n    config.headers.Authorization = (token ? token : '');\n    config.headers.ContentType = 'application/json';\n    return config;\n});\n\nexport const getAll = async () => (\n    await instance.post('users/all')\n);\n\nexport const register = async (name, email, password) => {\n    console.log(\"Attempting to register to:\", `${config.WS_BASE_URL}users/register`);\n    return await instance.post('/users/register', { name, email, password });\n};\n\nexport const confirmRegister = async id => (\n    await instance.post(`users/confirm/${id}`)\n);\n\nexport const forgotPassword = async email => (\n    await instance.post('users/forgotpassword', {email})\n);\n\nexport const confirmReset = async (id, password) => (\n    await instance.post(`users/resetpass/${id}`, {password})\n);\n\nexport const login = async (email, password) => {\n    console.log(\"Attempting to login to:\", `${config.WS_BASE_URL}/users/login`);\n    return await instance.post('/users/login', { email, password });\n};\n\n// export const logout = async token => (\n//     await instance.post('users/logout', {token})\n// );\nexport const logout = async token => {\n    console.log(\"Sending logout request with token:\", token);\n    return await instance.post('users/logout', {token});\n};\n\nexport const edit = async (userID, name, email) => (\n    await instance.post('/users/edit', {userID, name, email})\n);\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n// reactstrap components\nimport {\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Form,\n    FormGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n    InputGroup,\n    Navbar,\n    Nav,\n    Container,\n    Media\n} from \"reactstrap\";\nimport {logout} from \"../../network/ApiAxios\";\n\nconst AdminNavbar = props => {\n\n    let username = JSON.parse(localStorage.getItem(\"user\")).name;\n\n    // const logOut = async () => {\n    //     const token = localStorage.getItem(\"token\");\n    //     if (token) {\n    //         const response = await logout(token);\n    //         const { data } = response;\n    //         if (data.success) {\n    //             localStorage.removeItem(\"token\");\n    //             localStorage.removeItem(\"user\");\n    //             props.history.push(\"/auth/login\");\n    //         }else {\n    //             console.error(\"Échec de la déconnexion\");\n    //         }\n    //     }\n    // }\n\n    // const logOut = async (e) => {\n    //     e.preventDefault();\n    //     console.log(\"Logout clicked\");  // Ajoutez ceci pour tester si le clic fonctionne\n    //     const token = localStorage.getItem(\"token\");\n    //     if (token) {\n    //         const response = await logout(token);\n    //         const { data } = response;\n    //         if (data.success) {\n    //             localStorage.removeItem(\"token\");\n    //             localStorage.removeItem(\"user\");\n    //             props.history.push(\"/auth/login\");\n    //         } else {\n    //             console.error(\"Échec de la déconnexion\");\n    //         }\n    //     }\n    // }\n    const logOut = async () => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            if (token) {\n                const response = await logout(token);\n                const { data } = response;\n                if (data.success) {\n                    localStorage.removeItem(\"token\");\n                    localStorage.removeItem(\"user\");\n                    props.history.push(\"/auth/login\");\n                } else {\n                    console.error(\"Échec de la déconnexion:\", data.message);\n                }\n            }\n        } catch (error) {\n            console.error(\"Erreur lors de la déconnexion:\", error.response ? error.response.data : error);\n        }\n    }\n    \n    \n    \n\n    return (\n        <>\n            <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n                <Container fluid>\n                    <Link\n                        className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n                        to=\"/\"\n                    >\n                        {props.brandText}\n                    </Link>\n                    <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n                        <FormGroup className=\"mb-0\">\n                            <InputGroup className=\"input-group-alternative\">\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                        <i className=\"fas fa-search\"/>\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                                <Input placeholder=\"Search\" type=\"text\"/>\n                            </InputGroup>\n                        </FormGroup>\n                    </Form>\n                    <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n                        <UncontrolledDropdown nav>\n                            <DropdownToggle className=\"pr-0\" nav>\n                                <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                          alt=\"...\"\n                          src={require(\"assets/img/theme/sketch.jpg\").default}\n                      />\n                    </span>\n                                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                          {username}\n                      </span>\n                                    </Media>\n                                </Media>\n                            </DropdownToggle>\n                            <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                                    <h6 className=\"text-overflow m-0\">Bienvenue!</h6>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-single-02\"/>\n                                    <span>Mon profil</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-settings-gear-65\"/>\n                                    <span>Paramètres</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-calendar-grid-58\"/>\n                                    <span>Activité</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-support-16\"/>\n                                    <span>Support</span>\n                                </DropdownItem>\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                                    <i className=\"ni ni-badge\"/>\n                                    <span>Mon Abonnement</span>\n                                </DropdownItem>\n                                <DropdownItem divider/>\n                                <DropdownItem href=\"#!\" onClick={logOut}>\n                                    <i className=\"ni ni-user-run\"/>\n                                    <span>Deconnexion</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Container>\n            </Navbar>\n        </>\n    );\n};\n\nexport default AdminNavbar;\n","import React from \"react\";\n\n// reactstrap components\nimport { Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2024{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"https://www.ouieqare.com/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Vtalys\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"https://www.ouieqare.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Vtalys\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://www.ouieqare.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  About Us\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://www.ouieqare.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Blog\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://www.ouieqare.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  MIT License\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  // Button,\n  // Card,\n  // CardHeader,\n  // CardBody,\n  // CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  // FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  // Progress,\n  // Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// var ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.hidden) return null; // Continue à cacher les routes marquées comme cachées\n  \n      if (prop.children && prop.children.length > 0) {\n        return (\n          <NavItem key={key} className={this.activeRoute(prop.layout + prop.path)}>\n            <NavLink\n              href=\"#\"\n              onClick={e => {\n                e.preventDefault();\n                this.setState({ [prop.name]: !this.state[prop.name] });\n              }}\n            >\n              <i className={prop.icon} />\n              {prop.name} <i className=\"ni ni-bold-down\" />\n            </NavLink>\n            <Collapse isOpen={this.state[prop.name]}>\n              <Nav className=\"nav-sm flex-column\">\n                {prop.children.map((child, childKey) => (\n                  <NavItem key={`child-${childKey}`}>\n                    <NavLink\n                      to={child.layout + child.path}\n                      tag={NavLinkRRD}\n                      onClick={this.closeCollapse}\n                    >\n                      <span className=\"sidenav-normal\"> {child.name} </span>\n                    </NavLink>\n                  </NavItem>\n                ))}\n              </Nav>\n            </Collapse>\n          </NavItem>\n        );\n      }\n  \n      // Lien simple sans enfants\n      return (\n        <NavItem key={key} className={this.activeRoute(prop.layout + prop.path)}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  \n  \n\n  // createLinks = (routes) => {\n  //   return routes.map((prop, key) => {\n  //     if (prop.children && prop.children.length > 0) {\n  //       return (\n  //         <NavItem key={key}>\n            // <NavLink\n            //   href=\"#\"\n            //   onClick={(e) => {\n            //     e.preventDefault();\n            //     this.setState({ [prop.name]: !this.state[prop.name] });\n            //   }}\n            //   activeClassName=\"active\"\n            // >\n  //             <i className={prop.icon} />\n  //             {prop.name}\n  //             <i className=\"ni ni-bold-down float-right\" />\n  //           </NavLink>\n            // <Collapse isOpen={this.state[prop.name]}>\n            //   <Nav className=\"nav-sm flex-column\">\n            //     {prop.children.map((child, childKey) => (\n            //       <NavItem key={childKey}>\n            //         <NavLink\n            //           to={child.layout + child.path}\n            //           tag={NavLinkRRD}\n            //           onClick={this.closeCollapse}\n            //           activeClassName=\"active\"\n            //         >\n            //           <span className=\"sidenav-normal\"> {child.name} </span>\n            //         </NavLink>\n            //       </NavItem>\n            //     ))}\n            //   </Nav>\n            // </Collapse>\n  //         </NavItem>\n  //       );\n  //     } else {\n  //       return (\n  //         <NavItem key={key}>\n  //           <NavLink\n  //             to={prop.layout + prop.path}\n  //             tag={NavLinkRRD}\n  //             onClick={this.closeCollapse}\n  //             activeClassName=\"active\"\n  //           >\n  //             <i className={prop.icon} />\n  //             {prop.name}\n  //           </NavLink>\n  //         </NavItem>\n  //       );\n  //     }\n  //   });\n  // };\n  \n\n  createApiLinks = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === '/admin' && prop.api) {\n        return (\n          <NavItem key={key}>\n            <NavLink\n                to={prop.layout + prop.path}\n                tag={NavLinkRRD}\n                onClick={this.closeCollapse}\n                activeClassName=\"active\"\n            >\n              <i className={prop.icon}/>\n              {prop.name}\n            </NavLink>\n          </NavItem>\n        );\n      } else {\n        return null; // Same as above, return null or some other value when the condition is not met\n      }\n    });\n  };\n  \n\n  render() {\n    const {routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Bienvenue!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            <h6 className=\"navbar-heading text-muted\">API routes</h6>\n            {/* API links */}\n            <Nav navbar>{this.createApiLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}\n            {/* <h6 className=\"navbar-heading text-muted\">Documentation</h6> */}\n            {/* Navigation */}\n            {/* <Nav className=\"mb-md-3\" navbar>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/overview?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Getting started\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/colors?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-palette\" />\n                  Foundation\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/#/documentation/alerts?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-ui-04\" />\n                  Components\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <Nav className=\"mb-md-3\" navbar>\n              <NavItem className=\"active-pro active\">\n                <NavLink href=\"https://www.creative-tim.com/product/argon-dashboard-pro-react?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Upgrade to PRO\n                </NavLink>\n              </NavItem>\n            </Nav> */}\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;","import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst ClientsContext = createContext();\r\n\r\nexport const useClients = () => useContext(ClientsContext);\r\n\r\nexport const ClientsProvider = ({ children }) => {\r\n    const [totalClients, setTotalClients] = useState(0);\r\n  \r\n    // Vous pouvez également ajouter des fonctions pour manipuler totalClients de manière plus contrôlée ici\r\n    const incrementClients = (amount = 1) => {\r\n      setTotalClients(prev => prev + amount);\r\n    };\r\n  \r\n    const decrementClients = (amount = 1) => {\r\n      setTotalClients(prev => prev - amount);\r\n    };\r\n  \r\n    return (\r\n      <ClientsContext.Provider value={{ totalClients, setTotalClients, incrementClients, decrementClients }}>\r\n        {children}\r\n      </ClientsContext.Provider>\r\n    );\r\n  };\r\n  \r\n","import React from \"react\";\nimport { useClients } from '../../views/examples/ClientsContext';\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n  const { totalClients } = useClients();\n    \n    return (\n      <>\n        <div className=\"header pb-8 pt-5 pt-md-8\" style={{ background: 'linear-gradient(87deg, #003D33 0, #007D70 100%)'}}>\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              <Row>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Trafic\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            350,897\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fa fa-arrow-up\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Depuis le mois dernier</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Nouveaux clients\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                          {totalClients}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-danger mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Depuis la semaine dernière</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Ventes\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">924</span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                            <i className=\"fas fa-users\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-warning mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 1.10%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Depuis hier</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Performance\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            49,65%\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fas fa-arrow-up\" /> 12%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Depuis le mois dernier</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">Sales value</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Performance\n                      </h6>\n                      <h2 className=\"mb-0\">Total orders</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Page visits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Page name</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\">Unique users</th>\n                      <th scope=\"col\">Bounce rate</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">/argon/</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/index.html</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/charts.html</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/tables.html</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/profile.html</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Social traffic</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Referral</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Google</th>\n                      <td>4,807</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">80%</span>\n                          <div>\n                            <Progress max=\"100\" value=\"80\" />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Instagram</th>\n                      <td>3,678</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">75%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"75\"\n                              barClassName=\"bg-gradient-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">twitter</th>\n                      <td>2,645</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"30\"\n                              barClassName=\"bg-gradient-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","import React from \"react\";\n\n// reactstrap components\nimport {Button, Container, Row, Col} from \"reactstrap\";\nimport {useHistory} from \"react-router-dom\";\n\nconst UserHeader = () => {\n\n    const username = JSON.parse(localStorage.getItem(\"user\")).name;\n    const history = useHistory();\n\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\"/>\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        <Col lg=\"7\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">Hello {username}</h1>\n                            <p className=\"text-white mt-0 mb-5\">\n                            Ceci est votre page de profil. Vous pouvez voir les progrès que vous avez réalisés dans votre travail et gérer vos projets ou les tâches qui vous sont assignées.\n                            </p>\n                            <Button\n                                color=\"info\"\n                                onClick={() => history.push('/admin/edit-profile')}\n                            >\n                                Modifier Profil\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default UserHeader;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Profile = () => {\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const history = useHistory();\n\n    return (\n        <>\n            <UserHeader/>\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n                        <Card className=\"card-profile shadow\">\n                            <Row className=\"justify-content-center\">\n                                <Col className=\"order-lg-2\" lg=\"3\">\n                                    <div className=\"card-profile-image\">\n                                        <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                                            <img\n                                                alt=\"...\"\n                                                className=\"rounded-circle\"\n                                                src={require(\"assets/img/theme/sketch.jpg\").default}\n                                            />\n                                        </a>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <Button\n                                        className=\"mr-4\"\n                                        color=\"info\"\n                                        href=\"#pablo\"\n                                        onClick={e => e.preventDefault()}\n                                        size=\"sm\"\n                                    >\n                                        Connect\n                                    </Button>\n                                    <Button\n                                        className=\"float-right\"\n                                        color=\"default\"\n                                        href=\"#pablo\"\n                                        onClick={e => e.preventDefault()}\n                                        size=\"sm\"\n                                    >\n                                        Message\n                                    </Button>\n                                </div>\n                            </CardHeader>\n                            <CardBody className=\"pt-0 pt-md-4\">\n                                <Row>\n                                    <div className=\"col\">\n                                        <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                                            <div>\n                                                <span className=\"heading\">22</span>\n                                                <span className=\"description\">Friends</span>\n                                            </div>\n                                            <div>\n                                                <span className=\"heading\">10</span>\n                                                <span className=\"description\">Photos</span>\n                                            </div>\n                                            <div>\n                                                <span className=\"heading\">89</span>\n                                                <span className=\"description\">Comments</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Row>\n                                <div className=\"text-center\">\n                                    <h3>\n                                        {user.name}\n                                        <span className=\"font-weight-light\">, 27</span>\n                                    </h3>\n                                    <div className=\"h5 font-weight-300\">\n                                        <i className=\"ni location_pin mr-2\"/>\n                                        Bucharest, Romania\n                                    </div>\n                                    <div className=\"h5 mt-4\">\n                                        <i className=\"ni business_briefcase-24 mr-2\"/>\n                                        Solution Manager - Creative Tim Officer\n                                    </div>\n                                    <div>\n                                        <i className=\"ni education_hat mr-2\"/>\n                                        University of Computer Science\n                                    </div>\n                                    <hr className=\"my-4\"/>\n                                    <p>\n                                        Ryan — the name taken by Melbourne-raised, Brooklyn-based\n                                        Nick Murphy — writes, performs and records all of his own\n                                        music.\n                                    </p>\n                                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                                        Show more\n                                    </a>\n                                </div>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col className=\"order-xl-1\" xl=\"8\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">My account</h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={() => history.push('/admin/edit-profile')}\n                                            size=\"sm\"\n                                        >\n                                            Settings\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information (from database)\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Username\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        defaultValue={user.name}\n                                                        id=\"input-username\"\n                                                        placeholder=\"Username\"\n                                                        type=\"text\"\n                                                        disabled\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        defaultValue={user.email}\n                                                        type=\"email\"\n                                                        disabled\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        {/*<Row>*/}\n                                        {/*    <Col lg=\"6\">*/}\n                                        {/*        <FormGroup>*/}\n                                        {/*            <label*/}\n                                        {/*                className=\"form-control-label\"*/}\n                                        {/*                htmlFor=\"input-first-name\"*/}\n                                        {/*            >*/}\n                                        {/*                First name*/}\n                                        {/*            </label>*/}\n                                        {/*            <Input*/}\n                                        {/*                className=\"form-control-alternative\"*/}\n                                        {/*                defaultValue=\"Lucky\"*/}\n                                        {/*                id=\"input-first-name\"*/}\n                                        {/*                placeholder=\"First name\"*/}\n                                        {/*                type=\"text\"*/}\n                                        {/*            />*/}\n                                        {/*        </FormGroup>*/}\n                                        {/*    </Col>*/}\n                                        {/*    <Col lg=\"6\">*/}\n                                        {/*        <FormGroup>*/}\n                                        {/*            <label*/}\n                                        {/*                className=\"form-control-label\"*/}\n                                        {/*                htmlFor=\"input-last-name\"*/}\n                                        {/*            >*/}\n                                        {/*                Last name*/}\n                                        {/*            </label>*/}\n                                        {/*            <Input*/}\n                                        {/*                className=\"form-control-alternative\"*/}\n                                        {/*                defaultValue=\"Jesse\"*/}\n                                        {/*                id=\"input-last-name\"*/}\n                                        {/*                placeholder=\"Last name\"*/}\n                                        {/*                type=\"text\"*/}\n                                        {/*            />*/}\n                                        {/*        </FormGroup>*/}\n                                        {/*    </Col>*/}\n                                        {/*</Row>*/}\n                                    </div>\n                                    <hr className=\"my-4\"/>\n                                    {/* Address */}\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        Contact information (placeholder)\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col md=\"12\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-address\"\n                                                    >\n                                                        Address\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                                                        id=\"input-address\"\n                                                        placeholder=\"Home Address\"\n                                                        type=\"text\"\n                                                        disabled\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-city\"\n                                                    >\n                                                        City\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        defaultValue=\"New York\"\n                                                        id=\"input-city\"\n                                                        placeholder=\"City\"\n                                                        type=\"text\"\n                                                        disabled\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-country\"\n                                                    >\n                                                        Country\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        defaultValue=\"United States\"\n                                                        id=\"input-country\"\n                                                        placeholder=\"Country\"\n                                                        type=\"text\"\n                                                        disabled\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"4\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-country\"\n                                                    >\n                                                        Postal code\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-postal-code\"\n                                                        placeholder=\"Postal code\"\n                                                        type=\"number\"\n                                                        disabled\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <hr className=\"my-4\"/>\n                                    {/* Description */}\n                                    <h6 className=\"heading-small text-muted mb-4\">About me (placeholder)</h6>\n                                    <div className=\"pl-lg-4\">\n                                        <FormGroup>\n                                            <label>About Me</label>\n                                            <Input\n                                                className=\"form-control-alternative\"\n                                                placeholder=\"A few words about you ...\"\n                                                rows=\"4\"\n                                                defaultValue=\"A beautiful Dashboard for Bootstrap 4. It is Free and\n                          Open Source.\"\n                                                type=\"textarea\"\n                                                disabled\n                                            />\n                                        </FormGroup>\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default Profile;\n","import React from \"react\";\n// react plugin used to create google maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\n// reactstrap components\nimport { Card, Container, Row } from \"reactstrap\";\n\n// core components\nimport Header from \"components/Headers/Header.js\";\n// mapTypeId={google.maps.MapTypeId.ROADMAP}\nconst MapWrapper = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{ lat: 40.748817, lng: -73.985428 }}\n      defaultOptions={{\n        scrollwheel: false,\n        styles: [\n          {\n            featureType: \"administrative\",\n            elementType: \"labels.text.fill\",\n            stylers: [{ color: \"#444444\" }]\n          },\n          {\n            featureType: \"landscape\",\n            elementType: \"all\",\n            stylers: [{ color: \"#f2f2f2\" }]\n          },\n          {\n            featureType: \"poi\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"road\",\n            elementType: \"all\",\n            stylers: [{ saturation: -100 }, { lightness: 45 }]\n          },\n          {\n            featureType: \"road.highway\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"simplified\" }]\n          },\n          {\n            featureType: \"road.arterial\",\n            elementType: \"labels.icon\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"transit\",\n            elementType: \"all\",\n            stylers: [{ visibility: \"off\" }]\n          },\n          {\n            featureType: \"water\",\n            elementType: \"all\",\n            stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }]\n          }\n        ]\n      }}\n    >\n      <Marker position={{ lat: 40.748817, lng: -73.985428 }} />\n    </GoogleMap>\n  ))\n);\n\nclass Maps extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n","import React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport Toast from 'react-bootstrap/Toast'\nimport {register} from \"../../network/ApiAxios\";\nimport config from \"../../config\";\n\nconst Register = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [checkbox, setCheckbox] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const registerUser = async () => {\n        if (!(name && email && password && confirmPassword && checkbox)) {\n            setError(\"Assurez-vous de remplir tous les champs et d'accepter la politique de confidentialité.\");\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            setError(\"Les mots de passe ne correspondent pas.\");\n            return;\n        }\n        const response = await register(name, email, password);\n        const {data} = response;\n        if (!data.success) {\n            setError(data.msg);\n            return;\n        }\n        if (config.DEMO) {\n            setToastMessage(\"Ceci est une démonstration, donc nous ne vous enverrons pas d'email. Cliquez plutôt sur ce lien pour réinitialiser votre mot de passe:\")\n            setUserID(data.userID);\n        }\n        setError(\"\");\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setCheckbox(false);\n        setShowToast(true);\n    };\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 80,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={10000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{height: \"30px\", width: \"100px\"}} src={require(\"assets/img/brand/logo.png\").default}  alt=\"...\"/>\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-email/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-email/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardHeader className=\"bg-transparent pb-5\">\n                        <div className=\"text-muted text-center mt-2 mb-4\">\n                            <small>Sign up with</small>\n                        </div>\n                        <div className=\"text-center\">\n                            <Button\n                                className=\"btn-neutral btn-icon mr-4\"\n                                color=\"default\"\n                                href=\"#pablo\"\n                                onClick={e => e.preventDefault()}\n                            >\n                    {/* <span className=\"btn-inner--icon\">\n                        <img\n                            alt=\"...\"\n                            src={require(\"assets/img/icons/common/github.svg\").default}\n                        />\n                    </span>\n                                <span className=\"btn-inner--text\">Github</span>\n                            </Button>\n                            <Button\n                                className=\"btn-neutral btn-icon\"\n                                color=\"default\"\n                                href=\"#pablo\"\n                                onClick={e => e.preventDefault()}\n                            > */}\n                  <span className=\"btn-inner--icon\">\n                    <img\n                        alt=\"...\"\n                        src={require(\"assets/img/icons/common/google.svg\").default}\n                    />\n                  </span>\n                                <span className=\"btn-inner--text\">Google</span>\n                            </Button>\n                        </div>\n                    </CardHeader>\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>Ou inscrivez-vous avec vos identifiants</small>\n                        </div>\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-hat-3\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Noms\" type=\"text\" value={name}\n                                           onChange={e => setName(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative mb-3\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\" value={email}\n                                           onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Mot de Passe\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirmer Mot de Passe\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                           onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                            <div className=\"text-muted font-italic\">\n                                <small>\n                                    error:{\" \"}\n                                    <span className=\"text-red font-weight-700\">{error}</span>\n                                </small>\n                            </div> : null }\n                            <Row className=\"my-4\">\n                                <Col xs=\"12\">\n                                    <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                                        <input\n                                            className=\"custom-control-input\"\n                                            id=\"customCheckRegister\"\n                                            type=\"checkbox\"\n                                            checked={checkbox}\n                                            onChange={() => setCheckbox(!checkbox)}\n                                        />\n                                        <label\n                                            className=\"custom-control-label\"\n                                            htmlFor=\"customCheckRegister\"\n                                        >\n                        <span className=\"text-muted\">\n                        Je suis d'accord avec la{\" \"}\n                            <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                            Politique de confidentialité\n                          </a>\n                        </span>\n                                        </label>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <div className=\"text-center\">\n                                <Button onClick={registerUser} className=\"mt-4\" color=\"primary\" type=\"button\">\n                                Créer un compte\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n};\n\nexport default Register;\n","import React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n} from \"reactstrap\";\nimport {login} from \"../../network/ApiAxios\";\n\nconst Login = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const tryLogin = async () => {\n        const response = await login(email, password);\n        const {data} = response;\n        if (data.success) {\n            setError(\"\");\n            localStorage.setItem(\"token\", data.token);\n            console.log('Stored token:', localStorage.getItem('token'));\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\n            props.history.push(\"/\");\n        } else {\n            setPassword(\"\");\n            setError(data.msg);\n        }\n    }\n\n    const handleClick = () => {\n        alert('Cette fonctionnalité est en cours de développement.');\n    };\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n            <Card className=\"bg-secondary shadow border-0\">\n                    <CardHeader className=\"bg-transparent pb-5\">\n                        <div className=\"text-muted text-center mt-2 mb-3\">\n                            <small>Se connecter avec</small>\n                        </div>\n                        <div className=\"btn-wrapper text-center\">\n                             <Button\n                                className=\"btn-neutral btn-icon\"\n                                color=\"default\"\n                                href=\"#pablo\"\n                                onClick={handleClick}\n                            >\n                  <span className=\"btn-inner--icon\">\n                    <img\n                        alt=\"...\"\n                        src={require(\"assets/img/icons/common/google.svg\").default}\n                    />\n                  </span>\n                                <span className=\"btn-inner--text\">Google</span>\n                            </Button>\n\n                        </div>\n                    </CardHeader>\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center text-muted mb-4\">\n                            <small>Ou inscrivez-vous avec vos identifiants</small>\n                        </div>\n                        <Form role=\"form\">\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                           onChange={e => setEmail(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Mot de Passe\" type=\"password\" autoComplete=\"password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            {/*<div className=\"custom-control custom-control-alternative custom-checkbox\">*/}\n                            {/*    <input*/}\n                            {/*        className=\"custom-control-input\"*/}\n                            {/*        id=\" customCheckLogin\"*/}\n                            {/*        type=\"checkbox\"*/}\n                            {/*    />*/}\n                            {/*    <label*/}\n                            {/*        className=\"custom-control-label\"*/}\n                            {/*        htmlFor=\" customCheckLogin\"*/}\n                            {/*    >*/}\n                            {/*        <span className=\"text-muted\">Remember me</span>*/}\n                            {/*    </label>*/}\n                            {/*</div>*/}\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={tryLogin}>\n                                    Sign in\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n                <Row className=\"mt-3\">\n                    <Col xs=\"6\">\n                        {/* <a\n                            className=\"text-light\"\n                            onClick={() => props.history.push('/auth/reset-password')}\n                        >\n                            <small>Mot de passe oublié?</small>\n                        </a> */}\n                        <Button className=\"text-light p-0\" color=\"link\" onClick={() => props.history.push('/auth/reset-password')}>\n                            <small>Forgot password?</small>\n                        </Button>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"6\">\n                        {/* <a\n                            className=\"text-light\"\n                            onClick={() => props.history.push('/auth/register')}\n                        >\n                            <small>Créer un nouveau compte</small>\n                        </a> */}\n                         <Button className=\"text-light p-0\" color=\"link\" onClick={() => props.history.push('/auth/register')}>\n                            <small>Create new account</small>\n                        </Button>\n                    </Col>\n                </Row>\n            </Col>\n        </>\n    );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/bootstrap.bd712487.jpg\";","import React, { useState, useEffect } from \"react\";\n\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"components/Headers/Header.js\";\nimport bootstrapImg from '../../assets/img/theme/bootstrap.jpg';\nimport angularImg from '../../assets/img/theme/angular.jpg';\nimport team1Img from '../../assets/img/theme/team-1-800x800.jpg'; // Et ainsi de suite pour les autres images\n\n\nconst Tables = () => {\n  const [statuses, setStatuses] = useState([]);\n  const history = useHistory();\n  \n\n  useEffect(() => {\n    const loadedStatuses = JSON.parse(localStorage.getItem('uniqueStatuses'));\n    setStatuses(loadedStatuses);\n  }, []);\n\n  const rows = statuses.map(status => ({\n    status: status,\n    budget: 'Définir une logique pour budget', // Vous pouvez ajouter une logique similaire pour le budget\n    completion: 'Définir une logique pour completion', // Et pour le pourcentage de complétion\n    projectImg: 'theme/bootstrap.jpg', // Définir si nécessaire\n    usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg'] // Définir si nécessaire\n  }));\n  \n  const handleRowClick = (status) => {\n    history.push(`/admin/statutClient/${status}`);\n  };\n  // const rows = [\n  //   { \n  //     status: 'Appareillé', \n  //     budget: '$2,500 USD', \n  //     completion: '60%', \n  //     projectImg: 'theme/bootstrap.jpg', // Assurez-vous que ce chemin est correct\n  //     usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg'] // Ceux-ci doivent également être définis\n  //   },\n  //   { \n  //     status: 'Période d\\'essai', \n  //     budget: '$1,800 USD', \n  //     completion: '100%', \n  //     projectImg: 'theme/angular.jpg', \n  //     usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg']\n  //   },\n  //   ,\n  //   { \n  //     status: 'Rdv fixé', \n  //     budget: '$1,800 USD', \n  //     completion: '100%', \n  //     projectImg: 'theme/angular.jpg', \n  //     usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg']\n  //   }\n  //   // Continuez à ajouter des lignes selon le même modèle\n  // ];\n  \n \n\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Card tables</h3>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Budget</th>\n                    <th scope=\"col\">Completion</th>\n                    <th scope=\"col\">Users</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.map((row, index) => (\n                    <tr key={index} onClick={() => handleRowClick(row.status)} style={{ cursor: 'pointer' }}>\n                      <th scope=\"row\">\n                        <Media className=\"align-items-center\">\n                          <a className=\"avatar rounded-circle mr-3\">\n                            <img alt=\"...\" src={bootstrapImg} />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">{row.status}</span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>{row.budget}</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">{row.completion}</span>\n                          <Progress max=\"100\" value={row.completion.replace('%', '')} barClassName=\"bg-danger\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          {row.usersImg.map((img, idx) => (\n                            <a className=\"avatar avatar-sm\" key={idx}>\n                              <img alt=\"...\" className=\"rounded-circle\" src={bootstrapImg} />\n                            </a>\n                          ))}\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle className=\"btn-icon-only text-light\" href=\"#\" role=\"button\" size=\"sm\" color=\"\" onClick={(e) => e.preventDefault()}>\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Action</DropdownItem>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Another action</DropdownItem>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Something else here</DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                  <Pagination className=\"pagination justify-content-end mb-0\" listClassName=\"justify-content-end mb-0\">\n                    <PaginationItem className=\"disabled\">\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()} tabIndex=\"-1\">\n                        <i className=\"fas fa-angle-left\" />\n                        <span className=\"sr-only\">Previous</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem className=\"active\">\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>1</PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        2 <span className=\"sr-only\">(current)</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        3\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        <i className=\"fas fa-angle-right\" />\n                        <span className=\"sr-only\">Next</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardFooter>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\nexport default Tables;\n","export default __webpack_public_path__ + \"static/media/angular.b5045666.jpg\";","import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ConfirmEmail = props => {\n\n    const {id} = useParams();\n    const [valid, setValid] = useState(true);\n\n    useEffect(() => {\n        if (!id) {\n            setValid(false);\n        } else {\n            const runAsync = async () => {\n                const response = await confirmRegister(id);\n                const {data} = response;\n                console.log(data);\n                if (!data.success) {\n                    setValid(false);\n                } else {\n                    setTimeout(() => {\n                        props.history.push('/auth/login');\n                    }, 5000);\n                }\n            }\n            runAsync();\n        }\n    }, [id, props.history])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>{valid ? \"Email confirmé ! Vous serez redirigé vers la page de connexion....\" : \"Quelque chose s'est mal passé.!\"}</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ConfirmEmail;\n","import React from \"react\";\n// react component that copies the given text inside your clipboard\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Icons extends React.Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\" mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\" col\">\n              <Card className=\" shadow\">\n                <CardHeader className=\" bg-transparent\">\n                  <h3 className=\" mb-0\">Icons</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\" icon-examples\">\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"active-40\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"active-40\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          id=\"tooltip982655500\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-active-40\" />\n                            <span>active-40</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip982655500\"\n                      >\n                        {this.state.copiedText === \"active-40\"\n                          ? \"Copied\"\n                          : \"Copy To Clipboard\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"air-baloon\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"air-baloon\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"air-baloon\"\n                          id=\"tooltip47550434\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-air-baloon\" />\n                            <span>air-baloon</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip47550434\"\n                      >\n                        {this.state.copiedText === \"air-baloon\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"album-2\"}\n                        onCopy={() => this.setState({ copiedText: \"album-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"album-2\"\n                          id=\"tooltip945481346\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-album-2\" />\n                            <span>album-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945481346\"\n                      >\n                        {this.state.copiedText === \"album-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"align-center\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-center\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-center\"\n                          id=\"tooltip662352101\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-center\" />\n                            <span>align-center</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip662352101\"\n                      >\n                        {this.state.copiedText === \"align-center\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"left-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"align-left-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"align-left-2\"\n                          id=\"tooltip125499785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-align-left-2\" />\n                            <span>align-left-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip125499785\"\n                      >\n                        {this.state.copiedText === \"align-left-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ambulance\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ambulance\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ambulance\"\n                          id=\"tooltip382136785\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ambulance\" />\n                            <span>ambulance</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip382136785\"\n                      >\n                        {this.state.copiedText === \"ambulance\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"asdasdsafsdsad\"}\n                        onCopy={() => this.setState({ copiedText: \"app\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"app\"\n                          id=\"tooltip3354607\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-app\" />\n                            <span>app</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip3354607\"\n                      >\n                        {this.state.copiedText === \"app\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"archive-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"archive-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"archive-2\"\n                          id=\"tooltip949558633\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-archive-2\" />\n                            <span>archive-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip949558633\"\n                      >\n                        {this.state.copiedText === \"archive-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"atom\"}\n                        onCopy={() => this.setState({ copiedText: \"atom\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"atom\"\n                          id=\"tooltip742747005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-atom\" />\n                            <span>atom</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip742747005\"\n                      >\n                        {this.state.copiedText === \"atom\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"badge\"}\n                        onCopy={() => this.setState({ copiedText: \"badge\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"badge\"\n                          id=\"tooltip488565068\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-badge\" />\n                            <span>badge</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip488565068\"\n                      >\n                        {this.state.copiedText === \"badge\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bag-17\"}\n                        onCopy={() => this.setState({ copiedText: \"bag-17\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bag-17\"\n                          id=\"tooltip163626790\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bag-17\" />\n                            <span>bag-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip163626790\"\n                      >\n                        {this.state.copiedText === \"bag-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"basket\"}\n                        onCopy={() => this.setState({ copiedText: \"basket\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"basket\"\n                          id=\"tooltip387253692\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-basket\" />\n                            <span>basket</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip387253692\"\n                      >\n                        {this.state.copiedText === \"basket\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bell-55\"}\n                        onCopy={() => this.setState({ copiedText: \"bell-55\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bell-55\"\n                          id=\"tooltip126752761\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bell-55\" />\n                            <span>bell-55</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126752761\"\n                      >\n                        {this.state.copiedText === \"bell-55\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-down\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-down\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-down\"\n                          id=\"tooltip819281856\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-down\" />\n                            <span>bold-down</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip819281856\"\n                      >\n                        {this.state.copiedText === \"bold-down\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-left\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-left\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-left\"\n                          id=\"tooltip881699027\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-left\" />\n                            <span>bold-left</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881699027\"\n                      >\n                        {this.state.copiedText === \"bold-left\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-right\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bold-right\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-right\"\n                          id=\"tooltip208507461\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-right\" />\n                            <span>bold-right</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip208507461\"\n                      >\n                        {this.state.copiedText === \"bold-right\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold-up\"}\n                        onCopy={() => this.setState({ copiedText: \"bold-up\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold-up\"\n                          id=\"tooltip105289310\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold-up\" />\n                            <span>bold-up</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip105289310\"\n                      >\n                        {this.state.copiedText === \"bold-up\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bold\"}\n                        onCopy={() => this.setState({ copiedText: \"bold\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bold\"\n                          id=\"tooltip832362262\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bold\" />\n                            <span>bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip832362262\"\n                      >\n                        {this.state.copiedText === \"bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"book-bookmark\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"book-bookmark\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"book-bookmark\"\n                          id=\"tooltip606002875\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-book-bookmark\" />\n                            <span>book-bookmark</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip606002875\"\n                      >\n                        {this.state.copiedText === \"book-bookmark\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"books\"}\n                        onCopy={() => this.setState({ copiedText: \"books\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"books\"\n                          id=\"tooltip484529730\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-books\" />\n                            <span>books</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip484529730\"\n                      >\n                        {this.state.copiedText === \"books\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"box-2\"}\n                        onCopy={() => this.setState({ copiedText: \"box-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"box-2\"\n                          id=\"tooltip509205883\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-box-2\" />\n                            <span>box-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip509205883\"\n                      >\n                        {this.state.copiedText === \"box-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"briefcase-24\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"briefcase-24\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"briefcase-24\"\n                          id=\"tooltip147778056\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-briefcase-24\" />\n                            <span>briefcase-24</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip147778056\"\n                      >\n                        {this.state.copiedText === \"briefcase-24\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"building\"}\n                        onCopy={() => this.setState({ copiedText: \"building\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"building\"\n                          id=\"tooltip157423388\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-building\" />\n                            <span>building</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip157423388\"\n                      >\n                        {this.state.copiedText === \"building\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bulb-61\"}\n                        onCopy={() => this.setState({ copiedText: \"bulb-61\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bulb-61\"\n                          id=\"tooltip126210465\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bulb-61\" />\n                            <span>bulb-61</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip126210465\"\n                      >\n                        {this.state.copiedText === \"bulb-61\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"list-67\"}\n                        onCopy={() => this.setState({ copiedText: \"list-67\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bullet-list-67\"\n                          id=\"tooltip672244852\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bullet-list-67\" />\n                            <span>bullet-list-67</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672244852\"\n                      >\n                        {this.state.copiedText === \"list-67\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"bus-front-12\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"bus-front-12\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"bus-front-12\"\n                          id=\"tooltip17383590\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-bus-front-12\" />\n                            <span>bus-front-12</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip17383590\"\n                      >\n                        {this.state.copiedText === \"bus-front-12\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-pause\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-pause\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-pause\"\n                          id=\"tooltip721295259\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-pause\" />\n                            <span>button-pause</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721295259\"\n                      >\n                        {this.state.copiedText === \"button-pause\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-play\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-play\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-play\"\n                          id=\"tooltip397403700\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-play\" />\n                            <span>button-play</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip397403700\"\n                      >\n                        {this.state.copiedText === \"button-play\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"button-power\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"button-power\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"button-power\"\n                          id=\"tooltip286478188\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-button-power\" />\n                            <span>button-power</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip286478188\"\n                      >\n                        {this.state.copiedText === \"button-power\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"calendar-grid-58\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"calendar-grid-58\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"calendar-grid-58\"\n                          id=\"tooltip332635506\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-calendar-grid-58\" />\n                            <span>calendar-grid-58</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip332635506\"\n                      >\n                        {this.state.copiedText === \"calendar-grid-58\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"camera-compact\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"camera-compact\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"camera-compact\"\n                          id=\"tooltip872817724\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-camera-compact\" />\n                            <span>camera-compact</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip872817724\"\n                      >\n                        {this.state.copiedText === \"camera-compact\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"caps-small\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"caps-small\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"caps-small\"\n                          id=\"tooltip108271146\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-caps-small\" />\n                            <span>caps-small</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip108271146\"\n                      >\n                        {this.state.copiedText === \"caps-small\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cart\"}\n                        onCopy={() => this.setState({ copiedText: \"cart\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cart\"\n                          id=\"tooltip315375170\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cart\" />\n                            <span>cart</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip315375170\"\n                      >\n                        {this.state.copiedText === \"cart\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-bar-32\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-bar-32\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-bar-32\"\n                          id=\"tooltip906739900\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-bar-32\" />\n                            <span>chart-bar-32</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906739900\"\n                      >\n                        {this.state.copiedText === \"chart-bar-32\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chart-pie-35\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chart-pie-35\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chart-pie-35\"\n                          id=\"tooltip211198935\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chart-pie-35\" />\n                            <span>chart-pie-35</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip211198935\"\n                      >\n                        {this.state.copiedText === \"chart-pie-35\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"chat-round\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"chat-round\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"chat-round\"\n                          id=\"tooltip452799920\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-chat-round\" />\n                            <span>chat-round</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip452799920\"\n                      >\n                        {this.state.copiedText === \"chat-round\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"check-bold\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"check-bold\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"check-bold\"\n                          id=\"tooltip204269497\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-check-bold\" />\n                            <span>check-bold</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip204269497\"\n                      >\n                        {this.state.copiedText === \"check-bold\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip63796078\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip63796078\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-download-95\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-download-95\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-download-95\"\n                          id=\"tooltip171823822\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-download-95\" />\n                            <span>cloud-download-95</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip171823822\"\n                      >\n                        {this.state.copiedText === \"cloud-download-95\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"cloud-upload-96\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"cloud-upload-96\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"cloud-upload-96\"\n                          id=\"tooltip603641354\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-cloud-upload-96\" />\n                            <span>cloud-upload-96</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603641354\"\n                      >\n                        {this.state.copiedText === \"cloud-upload-96\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"compass-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"compass-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"compass-04\"\n                          id=\"tooltip138747611\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-compass-04\" />\n                            <span>compass-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip138747611\"\n                      >\n                        {this.state.copiedText === \"compass-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"controller\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"controller\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"controller\"\n                          id=\"tooltip477306514\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-controller\" />\n                            <span>controller</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip477306514\"\n                      >\n                        {this.state.copiedText === \"controller\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"credit-card\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"credit-card\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"credit-card\"\n                          id=\"tooltip672313572\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-credit-card\" />\n                            <span>credit-card</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip672313572\"\n                      >\n                        {this.state.copiedText === \"credit-card\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"curved-next\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"curved-next\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"curved-next\"\n                          id=\"tooltip228405488\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-curved-next\" />\n                            <span>curved-next</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip228405488\"\n                      >\n                        {this.state.copiedText === \"curved-next\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"delivery-fast\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"delivery-fast\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"delivery-fast\"\n                          id=\"tooltip405559\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-delivery-fast\" />\n                            <span>delivery-fast</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip405559\"\n                      >\n                        {this.state.copiedText === \"delivery-fast\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"diamond\"}\n                        onCopy={() => this.setState({ copiedText: \"diamond\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"diamond\"\n                          id=\"tooltip842334307\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-diamond\" />\n                            <span>diamond</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842334307\"\n                      >\n                        {this.state.copiedText === \"diamond\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"email-83\"}\n                        onCopy={() => this.setState({ copiedText: \"email-83\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"email-83\"\n                          id=\"tooltip695661232\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-email-83\" />\n                            <span>email-83</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip695661232\"\n                      >\n                        {this.state.copiedText === \"email-83\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-add\"}\n                        onCopy={() => this.setState({ copiedText: \"fat-add\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-add\"\n                          id=\"tooltip112280005\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-add\" />\n                            <span>fat-add</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip112280005\"\n                      >\n                        {this.state.copiedText === \"fat-add\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-delete\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-delete\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-delete\"\n                          id=\"tooltip361927124\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-delete\" />\n                            <span>fat-delete</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip361927124\"\n                      >\n                        {this.state.copiedText === \"fat-delete\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"fat-remove\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"fat-remove\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"fat-remove\"\n                          id=\"tooltip451275187\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-fat-remove\" />\n                            <span>fat-remove</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip451275187\"\n                      >\n                        {this.state.copiedText === \"fat-remove\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"favourite-28\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"favourite-28\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"favourite-28\"\n                          id=\"tooltip893689512\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-favourite-28\" />\n                            <span>favourite-28</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip893689512\"\n                      >\n                        {this.state.copiedText === \"favourite-28\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"folder-17\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"folder-17\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"folder-17\"\n                          id=\"tooltip988458715\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-folder-17\" />\n                            <span>folder-17</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip988458715\"\n                      >\n                        {this.state.copiedText === \"folder-17\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"glasses-2\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"glasses-2\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"glasses-2\"\n                          id=\"tooltip576477258\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-glasses-2\" />\n                            <span>glasses-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip576477258\"\n                      >\n                        {this.state.copiedText === \"glasses-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"hat-3\"}\n                        onCopy={() => this.setState({ copiedText: \"hat-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"hat-3\"\n                          id=\"tooltip977228923\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-hat-3\" />\n                            <span>hat-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip977228923\"\n                      >\n                        {this.state.copiedText === \"hat-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"headphones\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"headphones\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"headphones\"\n                          id=\"tooltip711983709\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-headphones\" />\n                            <span>headphones</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip711983709\"\n                      >\n                        {this.state.copiedText === \"headphones\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"html5\"}\n                        onCopy={() => this.setState({ copiedText: \"html5\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"html5\"\n                          id=\"tooltip346497134\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-html5\" />\n                            <span>html5</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip346497134\"\n                      >\n                        {this.state.copiedText === \"html5\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"istanbul\"}\n                        onCopy={() => this.setState({ copiedText: \"istanbul\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"istanbul\"\n                          id=\"tooltip344591402\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-istanbul\" />\n                            <span>istanbul</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip344591402\"\n                      >\n                        {this.state.copiedText === \"istanbul\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"circle-08\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"circle-08\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"circle-08\"\n                          id=\"tooltip815029398\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-circle-08\" />\n                            <span>circle-08</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip815029398\"\n                      >\n                        {this.state.copiedText === \"circle-08\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"key-25\"}\n                        onCopy={() => this.setState({ copiedText: \"key-25\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"key-25\"\n                          id=\"tooltip580511416\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-key-25\" />\n                            <span>key-25</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip580511416\"\n                      >\n                        {this.state.copiedText === \"key-25\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"laptop\"}\n                        onCopy={() => this.setState({ copiedText: \"laptop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"laptop\"\n                          id=\"tooltip455996160\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-laptop\" />\n                            <span>laptop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip455996160\"\n                      >\n                        {this.state.copiedText === \"laptop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"like-2\"}\n                        onCopy={() => this.setState({ copiedText: \"like-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"like-2\"\n                          id=\"tooltip928932853\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-like-2\" />\n                            <span>like-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip928932853\"\n                      >\n                        {this.state.copiedText === \"like-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"lock-circle-open\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"lock-circle-open\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"lock-circle-open\"\n                          id=\"tooltip634042199\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-lock-circle-open\" />\n                            <span>lock-circle-open</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634042199\"\n                      >\n                        {this.state.copiedText === \"lock-circle-open\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"map-big\"}\n                        onCopy={() => this.setState({ copiedText: \"map-big\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"map-big\"\n                          id=\"tooltip615611081\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-map-big\" />\n                            <span>map-big</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip615611081\"\n                      >\n                        {this.state.copiedText === \"map-big\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"mobile-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"mobile-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"mobile-button\"\n                          id=\"tooltip426682279\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-mobile-button\" />\n                            <span>mobile-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip426682279\"\n                      >\n                        {this.state.copiedText === \"mobile-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"money-coins\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"money-coins\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"money-coins\"\n                          id=\"tooltip198953665\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-money-coins\" />\n                            <span>money-coins</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip198953665\"\n                      >\n                        {this.state.copiedText === \"money-coins\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"note-03\"}\n                        onCopy={() => this.setState({ copiedText: \"note-03\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"note-03\"\n                          id=\"tooltip909975995\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-note-03\" />\n                            <span>note-03</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip909975995\"\n                      >\n                        {this.state.copiedText === \"note-03\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"notification-70\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"notification-70\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"notification-70\"\n                          id=\"tooltip942089221\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-notification-70\" />\n                            <span>notification-70</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip942089221\"\n                      >\n                        {this.state.copiedText === \"notification-70\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"palette\"}\n                        onCopy={() => this.setState({ copiedText: \"palette\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"palette\"\n                          id=\"tooltip721048582\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-palette\" />\n                            <span>palette</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip721048582\"\n                      >\n                        {this.state.copiedText === \"palette\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"paper-diploma\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"paper-diploma\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"paper-diploma\"\n                          id=\"tooltip875782946\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-paper-diploma\" />\n                            <span>paper-diploma</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip875782946\"\n                      >\n                        {this.state.copiedText === \"paper-diploma\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"pin-3\"}\n                        onCopy={() => this.setState({ copiedText: \"pin-3\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"pin-3\"\n                          id=\"tooltip945087492\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-pin-3\" />\n                            <span>pin-3</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip945087492\"\n                      >\n                        {this.state.copiedText === \"pin-3\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"planet\"}\n                        onCopy={() => this.setState({ copiedText: \"planet\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"planet\"\n                          id=\"tooltip482139663\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-planet\" />\n                            <span>planet</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip482139663\"\n                      >\n                        {this.state.copiedText === \"planet\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ruler-pencil\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"ruler-pencil\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ruler-pencil\"\n                          id=\"tooltip693938896\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ruler-pencil\" />\n                            <span>ruler-pencil</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip693938896\"\n                      >\n                        {this.state.copiedText === \"ruler-pencil\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"satisfied\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"satisfied\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"satisfied\"\n                          id=\"tooltip634575265\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-satisfied\" />\n                            <span>satisfied</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip634575265\"\n                      >\n                        {this.state.copiedText === \"satisfied\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"scissors\"}\n                        onCopy={() => this.setState({ copiedText: \"scissors\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"scissors\"\n                          id=\"tooltip688473648\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-scissors\" />\n                            <span>scissors</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip688473648\"\n                      >\n                        {this.state.copiedText === \"scissors\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"send\"}\n                        onCopy={() => this.setState({ copiedText: \"send\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"send\"\n                          id=\"tooltip161268791\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-send\" />\n                            <span>send</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip161268791\"\n                      >\n                        {this.state.copiedText === \"send\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings-gear-65\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"settings-gear-65\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings-gear-65\"\n                          id=\"tooltip487959296\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings-gear-65\" />\n                            <span>settings-gear-65</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487959296\"\n                      >\n                        {this.state.copiedText === \"settings-gear-65\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"settings\"}\n                        onCopy={() => this.setState({ copiedText: \"settings\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"settings\"\n                          id=\"tooltip156598208\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-settings\" />\n                            <span>settings</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip156598208\"\n                      >\n                        {this.state.copiedText === \"settings\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-02\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-02\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-02\"\n                          id=\"tooltip487356467\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-02\" />\n                            <span>single-02</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip487356467\"\n                      >\n                        {this.state.copiedText === \"single-02\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"single-copy-04\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"single-copy-04\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"single-copy-04\"\n                          id=\"tooltip340498904\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-single-copy-04\" />\n                            <span>single-copy-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip340498904\"\n                      >\n                        {this.state.copiedText === \"single-copy-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"sound-wave\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"sound-wave\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"sound-wave\"\n                          id=\"tooltip289156059\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-sound-wave\" />\n                            <span>sound-wave</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip289156059\"\n                      >\n                        {this.state.copiedText === \"sound-wave\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"spaceship\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"spaceship\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"spaceship\"\n                          id=\"tooltip603604642\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-spaceship\" />\n                            <span>spaceship</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip603604642\"\n                      >\n                        {this.state.copiedText === \"spaceship\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"square-pin\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"square-pin\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"square-pin\"\n                          id=\"tooltip153036405\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-square-pin\" />\n                            <span>square-pin</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip153036405\"\n                      >\n                        {this.state.copiedText === \"square-pin\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"support-16\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"support-16\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"support-16\"\n                          id=\"tooltip906422211\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-support-16\" />\n                            <span>support-16</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip906422211\"\n                      >\n                        {this.state.copiedText === \"support-16\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tablet-button\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"tablet-button\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tablet-button\"\n                          id=\"tooltip517579618\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tablet-button\" />\n                            <span>tablet-button</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip517579618\"\n                      >\n                        {this.state.copiedText === \"tablet-button\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tag\"}\n                        onCopy={() => this.setState({ copiedText: \"tag\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tag\"\n                          id=\"tooltip297195808\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tag\" />\n                            <span>tag</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip297195808\"\n                      >\n                        {this.state.copiedText === \"tag\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tie-bow\"}\n                        onCopy={() => this.setState({ copiedText: \"tie-bow\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tie-bow\"\n                          id=\"tooltip793084796\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tie-bow\" />\n                            <span>tie-bow</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip793084796\"\n                      >\n                        {this.state.copiedText === \"tie-bow\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"time-alarm\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"time-alarm\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"time-alarm\"\n                          id=\"tooltip258891035\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-time-alarm\" />\n                            <span>time-alarm</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip258891035\"\n                      >\n                        {this.state.copiedText === \"time-alarm\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"trophy\"}\n                        onCopy={() => this.setState({ copiedText: \"trophy\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"trophy\"\n                          id=\"tooltip881235890\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-trophy\" />\n                            <span>trophy</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip881235890\"\n                      >\n                        {this.state.copiedText === \"trophy\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"tv-2\"}\n                        onCopy={() => this.setState({ copiedText: \"tv-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"tv-2\"\n                          id=\"tooltip330279137\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-tv-2\" />\n                            <span>tv-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip330279137\"\n                      >\n                        {this.state.copiedText === \"tv-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"umbrella-13\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"umbrella-13\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"umbrella-13\"\n                          id=\"tooltip412313570\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-umbrella-13\" />\n                            <span>umbrella-13</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip412313570\"\n                      >\n                        {this.state.copiedText === \"umbrella-13\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"user-run\"}\n                        onCopy={() => this.setState({ copiedText: \"user-run\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"user-run\"\n                          id=\"tooltip176201858\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-user-run\" />\n                            <span>user-run</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip176201858\"\n                      >\n                        {this.state.copiedText === \"user-run\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"vector\"}\n                        onCopy={() => this.setState({ copiedText: \"vector\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"vector\"\n                          id=\"tooltip71164138\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-vector\" />\n                            <span>vector</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip71164138\"\n                      >\n                        {this.state.copiedText === \"vector\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"watch-time\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"watch-time\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"watch-time\"\n                          id=\"tooltip495578192\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-watch-time\" />\n                            <span>watch-time</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip495578192\"\n                      >\n                        {this.state.copiedText === \"watch-time\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world\"}\n                        onCopy={() => this.setState({ copiedText: \"world\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world\"\n                          id=\"tooltip604848245\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world\" />\n                            <span>world</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip604848245\"\n                      >\n                        {this.state.copiedText === \"world\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"zoom-split-in\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"zoom-split-in\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"zoom-split-in\"\n                          id=\"tooltip916423293\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-zoom-split-in\" />\n                            <span>zoom-split-in</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip916423293\"\n                      >\n                        {this.state.copiedText === \"zoom-split-in\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"collection\"}\n                        onCopy={() =>\n                          this.setState({ copiedText: \"collection\" })\n                        }\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"collection\"\n                          id=\"tooltip142934658\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-collection\" />\n                            <span>collection</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip142934658\"\n                      >\n                        {this.state.copiedText === \"collection\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"image\"}\n                        onCopy={() => this.setState({ copiedText: \"image\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"image\"\n                          id=\"tooltip842947283\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-image\" />\n                            <span>image</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip842947283\"\n                      >\n                        {this.state.copiedText === \"image\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"shop\"}\n                        onCopy={() => this.setState({ copiedText: \"shop\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"shop\"\n                          id=\"tooltip531866818\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-shop\" />\n                            <span>shop</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip531866818\"\n                      >\n                        {this.state.copiedText === \"shop\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ungroup\"}\n                        onCopy={() => this.setState({ copiedText: \"ungroup\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ungroup\"\n                          id=\"tooltip470734151\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ungroup\" />\n                            <span>ungroup</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip470734151\"\n                      >\n                        {this.state.copiedText === \"ungroup\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"world-2\"}\n                        onCopy={() => this.setState({ copiedText: \"world-2\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"world-2\"\n                          id=\"tooltip932383030\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-world-2\" />\n                            <span>world-2</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip932383030\"\n                      >\n                        {this.state.copiedText === \"world-2\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                    <Col lg=\"3\" md=\"6\">\n                      <CopyToClipboard\n                        text={\"ui-04\"}\n                        onCopy={() => this.setState({ copiedText: \"ui-04\" })}\n                      >\n                        <button\n                          className=\" btn-icon-clipboard\"\n                          data-clipboard-text=\"ui-04\"\n                          id=\"tooltip9332484\"\n                          type=\"button\"\n                        >\n                          <div>\n                            <i className=\" ni ni-ui-04\" />\n                            <span>ui-04</span>\n                          </div>\n                        </button>\n                      </CopyToClipboard>\n                      <UncontrolledTooltip\n                        delay={0}\n                        trigger=\"hover focus\"\n                        target=\"tooltip9332484\"\n                      >\n                        {this.state.copiedText === \"ui-04\"\n                          ? \"Copied\"\n                          : \"Copy To Clipbord\"}\n                      </UncontrolledTooltip>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Icons;\n","import React from \"react\";\n\n// reactstrap components\nimport {Button, Container, Row, Col} from \"reactstrap\";\nimport {useHistory} from \"react-router-dom\";\n\nconst EditHeader = () => {\n\n    const username = JSON.parse(localStorage.getItem(\"user\")).name;\n    const history = useHistory();\n\n    return (\n        <>\n            <div\n                className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n                style={{\n                    minHeight: \"600px\",\n                    backgroundImage:\n                        \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center top\"\n                }}\n            >\n                {/* Mask */}\n                <span className=\"mask bg-gradient-default opacity-8\"/>\n                {/* Header container */}\n                <Container className=\"d-flex align-items-center\" fluid>\n                    <Row>\n                        <Col lg=\"7\" md=\"10\">\n                            <h1 className=\"display-2 text-white\">Bonjour {username}</h1>\n                            {/*<p className=\"text-white mt-0 mb-5\">*/}\n                            {/*    This is your profile page. You can see the progress you've*/}\n                            {/*    made with your work and manage your projects or assigned tasks*/}\n                            {/*</p>*/}\n                            <Button\n                                color=\"info\"\n                                onClick={() => history.push('/admin/user-profile')}\n                            >\n                                Retour au profil\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    );\n}\n\nexport default EditHeader;\n","import React, {useEffect, useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\n// core components\n//import UserHeader from \"components/Headers/UserHeader.js\";\nimport EditHeader from \"../../components/Headers/EditHeader\";\nimport {edit} from \"../../network/ApiAxios\";\n\nconst EditProfile = props => {\n\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n\n    const [name, setName] = useState(user.name);\n    const [email, setEmail] = useState(user.email);\n    const [isTestUser, setIsTestUser] = useState(false);\n\n    useEffect(() => {\n        if (JSON.parse(localStorage.getItem(\"user\")).email === \"test@test.com\") {\n            setIsTestUser(true);\n        }\n    }, []);\n\n    const editUser = async () => {\n        const response = await edit(user._id, name, email);\n        const { data } = response;\n        if (data.success) {\n            user = {...user, name, email}\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            props.history.push(\"/admin/user-profile\");\n        }\n    }\n\n    return (\n        <>\n            <EditHeader/>\n            {/* Page content */}\n            <Container className=\"mt--7\" fluid>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">Mon compte</h3>\n                                        {isTestUser ? <h5>Vous n'êtes pas autorisé à modifier l'utilisateur de test. Créez un autre utilisateur pour tester cette fonctionnalité.</h5> : null}\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color=\"primary\"\n                                            href=\"#pablo\"\n                                            onClick={editUser}\n                                            size=\"sm\"\n                                            disabled={isTestUser}\n                                        >\n                                            Sauvegarder\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                    Informations utilisateur\n                                    </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-username\"\n                                                    >\n                                                        Utilisateur\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={name}\n                                                        id=\"input-username\"\n                                                        placeholder=\"Utilisateur\"\n                                                        onChange={e => setName(e.target.value)}\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Adresse e-mail\n                                                    </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        value={email}\n                                                        onChange={e => setEmail(e.target.value)}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n);\n}\n\nexport default EditProfile;\n","import React, {useEffect, useState} from 'react';\nimport Header from \"../../components/Headers/Header\";\nimport {\n    Card,\n    CardHeader,\n    Container,\n    Row,\n    Table,\n} from \"reactstrap\";\nimport {getAll} from \"../../network/ApiAxios\";\n\nconst UsersTable = () => {\n\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        const runAsync = async () => {\n            const response = await getAll();\n            const {data} = response;\n            console.log(data.users);\n            if (data.success) {\n                setUsers(data.users);\n            }\n        }\n        runAsync();\n    }, []);\n\n    return (\n        <>\n            <Header/>\n            <Container>\n                <Row>\n                    <div className=\"col\">\n                        <Card className=\"shadow\">\n                            <CardHeader className=\"border-0\">\n                                <h3 className=\"mb-0\">Utilisateurs</h3>\n                            </CardHeader>\n                            <Table className=\"align-items-center table-flush\" responsive>\n                                <thead className=\"thead-light\">\n                                <tr>\n                                    <th scope=\"col\">Noms</th>\n                                    <th scope=\"col\">E-mail</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {users.map(user => (\n                                    <tr key={user.email}>\n                                        <th scope=\"row\">\n                                            {user.name}\n                                        </th>\n                                        <td>{user.email}</td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </Table>\n                        </Card>\n                    </div>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default UsersTable;\n","import React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    // CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    // Row,\n    Col\n} from \"reactstrap\";\nimport {forgotPassword} from \"../../network/ApiAxios\";\nimport Toast from \"react-bootstrap/Toast\";\nimport config from \"../../config\";\n\nconst ResetPassword = props => {\n\n    const [email, setEmail] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [showToast, setShowToast] = useState(false);\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\n    const [userID, setUserID] = useState(null);\n\n    const sendEmail = async () => {\n        const response = await forgotPassword(email);\n        const {data} = response;\n        if (data.success) {\n            console.log(data);\n            if (config.DEMO) {\n                setToastMessage(\"Ceci est une démonstration, donc nous ne vous enverrons pas d'email. Cliquez plutôt sur ce lien pour réinitialiser votre mot de passe:\")\n                setUserID(data.userID);\n            }\n            setShowToast(true);\n        } else {\n            setError(data.errors[0].msg);\n        }\n    }\n\n    return (\n        <>\n            <div\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                style={{\n                    position: 'fixed',\n                    minHeight: '100px',\n                    width: \"35%\",\n                    right: 10,\n                    bottom: 100,\n                    zIndex: 50\n                }}\n            >\n                <Toast style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: \"white\",\n                    padding: 10,\n                    borderRadius: 10\n                }} onClose={() => setShowToast(false)} show={showToast} delay={5000} autohide={!config.DEMO}>\n                    <Toast.Header>\n                        <img style={{height: \"30px\", width: \"100px\"}} src={require(\"assets/img/brand/logo.png\").default}  alt=\"...\"/>\n                    </Toast.Header>\n                    <Toast.Body>\n                        {toastMessage}\n                        {config.DEMO ?\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-password/' + userID}>\n                                {config.DOMAIN_NAME + '/auth/confirm-password/' + userID}\n                            </a> : null}\n                    </Toast.Body>\n                </Toast>\n            </div>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup className=\"mb-3\">\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-email-83\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\n                                           onChange={e => setEmail(e.target.value)}/>\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={sendEmail}>\n                                Réinitialiser le mot de passe\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ResetPassword;\n","import React, {useState} from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    //CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    //Row,\n    Col\n} from \"reactstrap\";\nimport {confirmReset} from \"../../network/ApiAxios\";\n//import Toast from \"react-bootstrap/Toast\";\nimport {useParams} from \"react-router-dom\";\n\nconst ConfirmPassword = props => {\n\n    const {id} = useParams();\n\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const confirm = async () => {\n        if (password !== confirmPassword) {\n            setError(\"Les mots de passe doivent correspondre.\");\n            return;\n        }\n        const response = await confirmReset(id, password);\n        const {data} = response;\n        if (data.success) {\n            props.history.push(\"/auth/reset-success\");\n        } else {\n            setError(data.msg);\n        }\n    }\n\n    return (\n        <>\n            <Col lg=\"5\" md=\"7\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <Form role=\"form\">\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Mot de passe\" type=\"password\" autoComplete=\"new-password\" value={password}\n                                           onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>\n                                            <i className=\"ni ni-lock-circle-open\"/>\n                                        </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input placeholder=\"Confirme le mot de passe\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\n                                           onChange={e => setConfirmPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormGroup>\n                            {error ?\n                                <div className=\"text-muted font-italic\">\n                                    <small>\n                                        error:{\" \"}\n                                        <span className=\"text-red font-weight-700\">{error}</span>\n                                    </small>\n                                </div> : null }\n                            <div className=\"text-center\">\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\n                                Réinitialiser le mot de passe\n                                </Button>\n                            </div>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    );\n}\n\nexport default ConfirmPassword;\n","import React, {useEffect} from 'react';\n//import { useParams } from 'react-router-dom';\n//import {confirmRegister} from \"../../network/ApiAxios\";\nimport {Card, CardBody, Col} from \"reactstrap\";\n\nconst ResetPasswordSuccess = props => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            props.history.push(\"/auth/login\");\n        }, 5000);\n    }, [props.history])\n\n    return (\n        <>\n            <Col lg=\"6\" md=\"8\">\n                <Card className=\"bg-secondary shadow border-0\">\n                    <CardBody className=\"px-lg-5 py-lg-5\">\n                        <div className=\"text-center mb-4\">\n                            <h1>Réinitialisation du mot de passe confirmée ! Vous serez redirigé vers la page de connexion....</h1>\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </>\n    )\n};\n\nexport default ResetPasswordSuccess;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  Modal, ModalHeader, ModalBody, ModalFooter,\n  Button,\n  CardBody,\n  Card,\n  CardHeader,\n  Container,\n  Row,\n} from \"reactstrap\";\nimport { useDropzone } from 'react-dropzone';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport Header from \"components/Headers/Header.js\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nconst formatDate = (isoString) => {\n  if (!isoString) return '';\n  const date = new Date(isoString);\n  return date.toLocaleDateString('fr-FR');  // ou 'en-US' selon le format local que vous préférez\n}\n\nconst Tables = () => {\n  const history = useHistory();\n  const [clients, setClients] = useState([]);\n  const [totalClients, setTotalClients] = useState(0);\n  const [modal, setModal] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [uploadError, setUploadError] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selected, setSelected] = useState([]);\n  const [selectedClientId, setSelectedClientId] = useState(null);\n  const [hoveredClientId, setHoveredClientId] = useState(null);\n\n  const toggleModal = () => {\n    setModal(!modal);\n    if (!modal) {\n      if (!isUploading && !uploadSuccess) {\n        setSelectedFile(null);\n        setUploadError(\"\");\n      }\n    }\n  };\n\n  // const handleOnSelect = (row, isSelect) => {\n  //   console.log(`Select ${isSelect ? 'on' : 'off'} for row id ${row._id}`);\n  //   if (isSelect) {\n  //     setSelected(prevSelected => {\n  //       const newSelected = [...prevSelected, row._id];\n  //       console.log('New selected after add:', newSelected);\n  //       return newSelected;\n  //     });\n  //   } else {\n  //     setSelected(prevSelected => {\n  //       const newSelected = prevSelected.filter(x => x !== row._id);\n  //       console.log('New selected after remove:', newSelected);\n  //       return newSelected;\n  //     });\n  //   }\n  // };\n  const handleOnSelect = (row, isSelect) => {\n    setTimeout(() => {\n      console.log(`Select ${isSelect ? 'on' : 'off'} for row id ${row._id}`);\n      if (isSelect) {\n        setSelected(prevSelected => {\n          const newSelected = [...prevSelected, row._id];\n          console.log('New selected after add:', newSelected);\n          return newSelected;\n        });\n      } else {\n        setSelected(prevSelected => {\n          const newSelected = prevSelected.filter(x => x !== row._id);\n          console.log('New selected after remove:', newSelected);\n          return newSelected;\n        });\n      }\n    }, 100);  // Délai de 100ms\n  };\n  \n  \n  const handleOnSelectAll = (isSelect, rows) => {\n    console.log(`Select all ${isSelect ? 'on' : 'off'}`);\n    if (isSelect) {\n      const idsToSelect = rows.map(r => r._id);\n      console.log('Selecting all ids:', idsToSelect);\n      setSelected(idsToSelect);\n    } else {\n      setSelected([]);\n    }\n  };\n  \n  \n  const selectAllRenderer = ({ mode, checked, indeterminate }) => (\n    <input\n      type={mode}\n      checked={checked}\n      ref={input => {\n        if (input) input.indeterminate = indeterminate;\n      }}\n      // onChange={e => {\n      //   if (e.target.checked) {\n      //     const idsToSelect = clients.map(client => client._id);  // Assurez-vous que cette ligne utilise la bonne clé\n      //     setSelected(idsToSelect);\n      //   } else {\n      //     setSelected([]);\n      //   }\n      // }}\n      onChange={e => {\n        handleOnSelectAll(e.target.checked, clients);  // Appelez handleOnSelectAll avec le bon contexte\n      }}\n    />\n  );\n  \n  const handleDeleteSelected = async () => {\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer les clients sélectionnés ?\")) {\n      for (const clientId of selected) {\n        await fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/${clientId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\n          }\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`Failed to delete client ${clientId}, status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          if (!data.success) {\n            throw new Error(data.message);\n          }\n          setTotalClients(prevTotal => prevTotal - 1);\n          toast.success(`Client supprimé avec succès!`);\n        })\n        .catch(error => {\n          console.error('Error:', error);\n          toast.error(`Error deleting client ${clientId}: ${error.message}`);\n        });\n      }\n      // Mise à jour de l'état après la suppression de tous les clients sélectionnés\n      const newClients = clients.filter(client => !selected.includes(client._id));\n      setClients(newClients);\n      setSelected([]);\n    }\n  };\n  \n  \n  const deleteButton = selected.length > 0 ? (\n    <Button color=\"danger\" onClick={handleDeleteSelected} style={{ marginLeft: '10px' }}>\n      Supprimer la sélection\n    </Button>\n  ) : null;\n  \n  // const selectRow = {\n  //   mode: 'checkbox',\n  //   clickToSelect: true,\n  //   selected: selected,\n  //   onSelect: handleOnSelect,\n  //   onSelectAll: handleOnSelectAll,\n  //   selectionHeaderRenderer: selectAllRenderer,\n  //   style: { backgroundColor: '#c8e6c9' }\n  // };\n  const selectRow = {\n    mode: 'checkbox',\n    clickToSelect: false, // Désactive la sélection automatique lors du clic sur la ligne\n    selected: selected,\n    onSelect: handleOnSelect,\n    onSelectAll: handleOnSelectAll,\n    selectionHeaderRenderer: selectAllRenderer,\n    style: { backgroundColor: '#c8e6c9' },\n    hideSelectColumn: false, // Garde la colonne de case à cocher visible\n  };\n  \n  const handleRowClick = (client) => {\n    console.log(`Navigation to client details for ID: ${client._id}`);\n    setSelectedClientId(client._id);\n    history.push({\n      pathname: `/admin/nouveauClient`, // Assurez-vous que le chemin est correct\n      state: { client: client }\n    });\n  };\n  \n  const fetchClients = (setClients) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token not found in localStorage');\n      return;\n    }\n\n    const cleanToken = token.trim();\n    const formattedToken = cleanToken.replace('JWT ', '');\n\n    console.log(\"Formatted Token from localStorage:\", formattedToken);\n\n    fetch('https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients', {\n      headers: {\n         'Authorization': `Bearer ${formattedToken}`\n      }\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP status ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log('Clients fetched:', data);\n      setClients(data);\n      setTotalClients(data.length);\n    })\n    .catch(err => {\n      console.error('Error fetching clients:', err.message);\n    });\n};\n\n  const handleAddClient = () => {\n    console.log('Redirection to /admin/nouveauClient');\n    history.push('/admin/nouveauClient');\n  };\n\n  const handleStatusChange = (clientId, newStatus) => {\n    // Mise à jour de l'état local\n    const updatedClients = clients.map(client =>\n      client._id === clientId ? { ...client, statut: newStatus } : client\n    );\n    setClients(updatedClients);\n  \n    // Envoie de la mise à jour au serveur\n    fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/${clientId}/status`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\n      },\n      body: JSON.stringify({ statut: newStatus })\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (!data.success) {\n        console.error('Failed to update status:', data.message);\n        toast.error(`Erreur lors de la mise à jour du statut: ${data.message}`);\n      } else {\n        toast.success('Statut mis à jour avec succès!');\n      }\n    })\n    .catch(error => {\n      console.error('Error updating status:', error);\n      toast.error(`Erreur: ${error.message}`);\n    });\n  };\n  \n  const handleEditClient = (e, client) => {\n    e.stopPropagation(); // Empêche l'événement de se propager à d'autres éléments\n    history.push({\n      pathname: '/admin/nouveauClient',\n      state: { client: client }\n    });\n  };\n  \n  const handleDeleteClient = (e, clientId) => {\n    e.stopPropagation(); // Empêche l'événement de se propager à d'autres éléments\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce client ?\")) {\n      fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/${clientId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\n        }\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`Failed to delete client, status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data.success) {\n          const newClients = clients.filter(client => client._id !== clientId);\n          setSelected(selected.filter(id => id !== clientId)); // Nettoyer aussi les sélections\n          setTotalClients(prevTotal => prevTotal - 1);\n          toast.success(\"Client supprimé avec succès!\");\n          setClients(newClients);\n        } else {\n          throw new Error(data.message);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        toast.error(`Error: ${error.message}`);\n      });\n    }\n  };\n  \n  \n  const columns = [\n    { dataField: \"_id\", text: \"ID\", hidden: true },\n    {\n      dataField: \"nom\",\n      text: \"Nom\",\n      sort: true,\n      classes: 'col-lg-2',\n      headerClasses: 'col-lg-2'\n    },\n    {\n      dataField: \"prenom\",\n      text: \"Prénom\",\n      sort: true,\n      classes: 'col-lg-2',\n      headerClasses: 'col-lg-2'\n    },\n  {\n    dataField: \"email\",\n    text: \"Email\",\n    sort: true,\n    classes: 'col-md-3 col-lg-3 text-truncate', // Utilisation de text-truncate pour ajouter ellipsis\n    headerClasses: 'col-md-3 col-lg-3',\n    formatter: (cellContent, row) => {\n      return (\n        <div className=\"text-truncate\" style={{ maxWidth: '200px' }}>\n          {cellContent}\n        </div>\n      );\n    }\n  }, // Colonne Email\n  {\n    dataField: \"telephonePortable\",\n    text: \"Tel\",\n    sort: true,\n    classes: 'd-none d-md-table-cell col-md-2 col-lg-2',\n    headerClasses: 'd-none d-md-table-cell col-md-2 col-lg-2'\n  },// Colonne Tel\n  {\n    dataField: \"ville\",\n    text: \"Ville\",\n    sort: true,\n    classes: 'd-none d-lg-table-cell col-lg-2',\n    headerClasses: 'd-none d-lg-table-cell col-lg-2'\n  },\n  {\n    dataField: \"dateNaissance\",\n    text: \"Date de Naissance\",\n    formatter: (cellContent, row) => formatDate(row.dateNaissance),\n    sort: true,\n    classes: 'd-none d-lg-table-cell col-lg-2', // Cache cette colonne sur les écrans plus petits que 'lg'\n    headerClasses: 'd-none d-lg-table-cell col-lg-2'\n  },\n  {\n    dataField: \"statut\",\n    text: \"Statut\",\n    classes: 'd-none d-lg-table-cell col-md-4 col-lg-3', // Cache cette colonne sur les écrans plus petits que 'lg'\n    headerClasses: 'd-none d-lg-table-cell col-md-4 col-lg-3', // Ajusté pour correspondre aux classes de données\n    formatter: (cell, row) => {\n      return (\n        <select\n          defaultValue={row.statut}\n          onClick={(e) => e.stopPropagation()}\n          onChange={(e) => handleStatusChange(row._id, e.target.value)}\n          className=\"form-control\"\n          style={{ minWidth: \"150px\" }} // Assure que le sélecteur est suffisamment large\n        >\n          <option value=\"none\"></option>\n          <option value=\"Rdv fixé\">Rdv fixé</option>\n          <option value=\"Rdv Annulé\">Rdv Annulé</option>\n          <option value=\"Appareillé\">Appareillé</option>\n          <option value=\"Période d'essai\">Période d'essai</option>\n          <option value=\"Facturé\">Facturé</option>\n        </select>\n      );\n    },\n    editor: {\n      type: 'select',\n      options: [\n        { value: 'Rdv fixé', label: 'Rdv fixé' },\n        { value: 'Rdv Annulé', label: 'Rdv Annulé' },\n        { value: 'Appareillé', label: 'Appareillé' },\n        { value: \"Période d'essai\", label: \"Période d'essai\" },\n        { value: 'Facturé', label: 'Facturé' }\n      ]\n    }\n  },\n  \n  {\n    dataField: 'actions',\n    text: 'Actions',\n    classes: 'col-md-2 col-lg-2 text-center',\n    headerClasses: 'col-md-2 col-lg-2 text-center',\n    formatter: (cell, row) => (\n      <div>\n        <Button color=\"primary\" size=\"sm\" onClick={(e) => handleEditClient(e, row)}>\n          <i className=\"fas fa-pencil-alt\"></i>\n        </Button>\n        <Button color=\"danger\" size=\"sm\" onClick={(e) => handleDeleteClient(e, row._id)}>\n          <i className=\"fas fa-trash\"></i>\n        </Button>\n      </div>\n    )\n  }\n  ];\n  \n  useEffect(() => {\n    const uniqueStatuses = [...new Set(clients.map(client => client.statut))];\n    localStorage.setItem('uniqueStatuses', JSON.stringify(uniqueStatuses));\n  }, [clients]);\n  \n\n  const handleFileUpload = () => {\n    if (!selectedFile) {\n      toast.warn(\"No file selected for upload.\");\n      return;\n    }\n\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    fetch('https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/import', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\n      },\n      body: formData\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to upload file');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setUploadSuccess(true);\n        console.log(\"Import success:\", data);\n        fetchClients(setClients);\n        setIsUploading(false);\n        \n        setSelectedFile(null);\n        toast.success(\"Fichier importé avec succès!\");\n        toggleModal(); // Ferme le modal après l'importation réussie\n      })\n      .catch(err => {\n        console.error(\"Import error:\", err);\n        setIsUploading(false);\n        setUploadError(\"Error during import: \" + err.message);\n        toast.error(\"Error during import: \" + err.message);\n      });\n      setUploadSuccess(false);\n  };\n\n  const pagination = paginationFactory({\n    page: 1,\n    alwaysShowAllBtns: true,\n    withFirstAndLast: false,\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\n        <label>\n          {\" \"}\n          {\n            <select\n              name=\"datatable-basic_length\"\n              aria-controls=\"datatable-basic\"\n              className=\"form-control form-control-sm\"\n              onChange={e => onSizePerPageChange(e.target.value)}\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n              <option value=\"100\">100</option>\n            </select>\n          }{\" \"}\n        </label>\n      </div>\n    )\n  });\n\n  const { SearchBar } = Search;\n  useEffect(() => {\n    fetchClients(setClients);\n  }, [totalClients]);\n  \n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: acceptedFiles => {\n      console.log(acceptedFiles);\n      setSelectedFile(acceptedFiles[0]);\n      setUploadSuccess(true);\n      setUploadError(\"\");\n      //toast.info(\"File selected for upload.\");\n    }\n  });\n\n  const sendEmailsToSelected = () => {\n    const selectedClients = clients.filter(client => selected.includes(client.id));\n    console.log(\"Sending emails to:\", selectedClients.map(c => c.email));\n    // Logique pour envoyer des emails\n  };\n\n  const handleSelectAllClick = () => {\n    if (selected.length < clients.length) {\n      setSelected(clients.map(x => x.id)); // Sélectionner tous les ID\n    } else {\n      setSelected([]); // Désélectionner tous\n    }\n  };\n  const rowEvents = {\n    onClick: (e, row, rowIndex) => {\n      if (e.target.tagName !== 'BUTTON' && e.target.tagName !== 'INPUT' && e.target.type !== 'checkbox') {\n        handleRowClick(row);\n      }\n    },\n    onMouseEnter: (e, row, rowIndex) => {\n      setHoveredClientId(row._id); // Met à jour l'état pour la ligne survolée\n    },\n    onMouseLeave: (e, row, rowIndex) => {\n      setHoveredClientId(null); // Réinitialise l'état lorsque la souris quitte la ligne\n    }\n  };\n  \n  \n  const rowStyle = (row, rowIndex) => {\n    if (row._id === selectedClientId) {\n      return { backgroundColor: '#f8f9fe', cursor: 'pointer' }; // Style pour la ligne sélectionnée\n    } else if (row._id === hoveredClientId) {\n      return { backgroundColor: '#e9ecef', cursor: 'pointer' }; // Style pour la ligne survolée\n    }\n    return {}; // Style par défaut\n  };\n\n\n  return (\n    <>\n      <Header totalClients={totalClients} />\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\n                <div>\n                  <h3 className=\"mb-0\" style={{ paddingBottom: '10px' }}>Clients (Total : {totalClients})</h3>\n                  {/* <Button color=\"info\" onClick={handleSelectAllClick}>\n  {selected.length === clients.length ? \"Désélectionner Tout\" : \"Sélectionner Tout\"}\n</Button> */}\n                </div>\n                <div>\n                  <Button color=\"primary\" onClick={handleAddClient} style={{ marginRight: '10px' }}>Ajouter Client</Button>\n                  <Button color=\"info\" onClick={toggleModal}>Importer Clients</Button>\n                  {/* <Button color=\"info\" onClick={sendEmailsToSelected}>Envoyer Mail</Button> */}\n                </div>\n              </CardHeader>\n              <CardBody>\n              <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\n  {props => (\n    <div>\n      <div className=\"row mb-2\">\n        <div className=\"col-6\">\n        {deleteButton}\n          {/* Ici, vous pouvez remettre les boutons ou autres éléments comme avant */}\n        </div>\n        <div className=\"col-6 text-right\">\n          <SearchBar {...props.searchProps} className=\"form-control-sm\" placeholder=\"Rechercher\" style={{ border: '1px solid black', maxWidth: '250px' }} />\n        </div>\n      </div>\n      <div style={{ overflowX: 'auto' }}>\n      <BootstrapTable\n  {...props.baseProps}\n  keyField=\"_id\"\n  bootstrap4\n  pagination={pagination}\n  data={clients}\n  columns={columns}\n  selectRow={selectRow}\n  rowEvents={rowEvents}\n  rowStyle={rowStyle}\n  bordered={false}\n/>\n\n      </div>\n    </div>\n  )}\n</ToolkitProvider>\n\n              </CardBody>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n      <Modal isOpen={modal} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Importer des fichiers</ModalHeader>\n        <ModalBody>\n          <div {...getRootProps({ className: 'dropzone' })} style={{ border: '2px dashed #007bff', padding: '20px', textAlign: 'center' }}>\n            <input {...getInputProps()} />\n            <i className=\"fas fa-file-upload fa-2x\"></i>\n            <p>Formats supportés : .csv, .xlsx</p>\n            {isDragActive ? (\n              <p>Relâchez le fichier ici...</p>\n            ) : (\n              <p>Glissez-déposez des fichiers ici, ou cliquez pour sélectionner des fichiers</p>\n            )}\n            {isUploading && <div>Chargement...</div>}\n            {uploadSuccess && <div className=\"alert alert-success\">Fichier importé avec succès!</div>}\n            {uploadError && <div className=\"alert alert-danger\">{uploadError}</div>}\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleFileUpload} disabled={!selectedFile}>\n            OK\n          </Button>\n          <Button color=\"secondary\" onClick={toggleModal}>Fermer</Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default Tables;","import React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FaArrowLeft } from 'react-icons/fa'; \n\nimport {\n  Button, Card, CardBody, CardHeader, Form, FormGroup, Input, Label, Container, Row, Col, UncontrolledAlert,\n  Nav, NavItem, NavLink, TabContent, TabPane\n} from \"reactstrap\";\nimport classnames from 'classnames';\n\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\n  const day = ('0' + date.getDate()).slice(-2);\n  return `${year}-${month}-${day}`;\n}\n\nconst NouveauClient = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [client, setClient] = useState({\n    nom: \"\",\n    prenom: \"\",\n    dateNaissance: \"\",\n    mutuelle: \"\",\n    numeroSecu: \"\",\n    email: \"\",\n    telephoneFixe: \"\",\n    telephonePortable: \"\",\n    adresse: \"\",\n    codePostal: \"\",\n    ville: \"\",\n    note: \"\",\n    audiogramme: \"\",\n    statut: \"\" \n  });\n  const [isEditable, setIsEditable] = useState(!location.state || !location.state.client);\n  const [activeTab, setActiveTab] = useState('1');\n  const [audiogrammeSuccessMessage, setAudiogrammeSuccessMessage] = useState(\"\");\n\n  useEffect(() => {\n    // Si un client est passé dans l'état, utilisez ses valeurs pour initialiser le formulaire\n    if (location.state && location.state.client) {\n      const formattedClient = {\n        ...location.state.client,\n        dateNaissance: formatDate(location.state.client.dateNaissance)\n      };\n      setClient(formattedClient);\n    }\n  }, [location.state]);\n\n  const toggleTab = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  };\n\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const isMounted = useRef(false);\n\nuseEffect(() => {\n  isMounted.current = true;\n  return () => {\n    isMounted.current = false;  // Nettoyage en démontant le composant\n  };\n}, []);\n\n  const validateForm = () => {\n    let tempErrors = {};\n    let formIsValid = true;\n\n    if (!client.nom.trim()) {\n      formIsValid = false;\n      tempErrors[\"nom\"] = \"Le nom est requis.\";\n    }\n\n    if (!client.email.trim()) {\n      formIsValid = false;\n      tempErrors[\"email\"] = \"L'email est requis.\";\n    }\n\n    setErrors(tempErrors);\n    return formIsValid;\n  };\n\n\nconst saveClient = async (clientData) => {\n  const url = clientData._id ? `https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/${clientData._id}` : 'https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/add';\n  const method = clientData._id ? 'PUT' : 'POST';\n\n  console.log('Envoi des données du client:', clientData);  // Log des données envoyées\n\n  try {\n      const response = await fetch(url, {\n          method: method,\n          headers: {\n              'Content-Type': 'application/json',\n              'Authorization': localStorage.getItem('token')\n          },\n          body: JSON.stringify(clientData)\n      });\n\n      console.log('Statut de la réponse:', response.status);  // Log du statut de réponse HTTP\n\n      if (!response.ok) {\n        const data = await response.json();\n        console.log('Erreur lors de l\\'enregistrement:', data);  // Log de l'erreur\n        toast.error(`Erreur: ${data.message}`);\n        return;\n      }\n\n      const data = await response.json();\n      console.log('Réponse du serveur:', data);  // Log de la réponse\n      toast.success(\"Le client a été ajouté/modifié avec succès !\");\n      setIsEditable(false);\n      // setTimeout(() => {\n      //     history.push('/admin/clients');\n      // }, 3000);\n  } catch (error) {\n      console.error('Erreur lors de l\\'opération sur le client:', error);\n      toast.error(`Erreur lors de l'opération sur le client: ${error.message}`);\n  }\n};\n\n\n\n\n\n\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setClient({ ...client, [name]: value });\n    // Clear errors\n    if (!!errors[name]) setErrors({ ...errors, [name]: null });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      saveClient(client);\n    }\n  };\n  const handleSubmitAudiogramme = async (e) => {\n    e.preventDefault();\n    const audiogrammeData = {\n      ...client,\n      audiogramme: client.audiogramme\n    };\n  \n    const url = client._id ? `https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/${client._id}` : 'https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/add';\n    const method = client._id ? 'PUT' : 'POST';\n  \n    try {\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token')\n        },\n        body: JSON.stringify(audiogrammeData)\n      });\n  \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP status ${response.status}: ${errorText}`);\n      }\n  \n      const data = await response.json();\n      console.log('Opération réussie:', data);\n      setAudiogrammeSuccessMessage(\"Le bilan auditif a été enregistré avec succès.\");\n      setTimeout(() => {\n        setAudiogrammeSuccessMessage(\"\");\n        history.push('/admin/clients'); // Redirection après l'affichage du message de succès\n      }, 3000); // Affichage du message pendant 3 secondes\n  \n    } catch (error) {\n      console.error(\"Erreur lors de l'enregistrement du bilan auditif:\", error);\n      setErrors({ form: \"Erreur lors de l'opération sur le bilan auditif.\" });\n    }\n  };\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  return (\n      //  <div style={{ paddingTop: '50px', background: 'linear-gradient(87deg, #11cdef 0, #1171ef 100%)' }}>\n      <div style={{ paddingTop: '50px', background: 'linear-gradient(87deg, #003D33 0, #007D70 100%)' }}>\n    <Container className=\"mt-5\">\n      <Card>\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />          \n          {/* <CardHeader className=\"bg-white text-white\">\n          <Button color=\"link\" onClick={handleBack} style={{ marginRight: '20px', color: 'black' }}>\n              <FaArrowLeft />\n            </Button>\n  <h4 className=\"mb-0\">{client._id ? \"Modifier Client\" : \"Ajouter Nouveau Client\"}</h4>\n  <div style={{ float: 'right' }}>\n    {client._id && !isEditable && (\n      <>\n        <Button color=\"info\" onClick={() => setIsEditable(true)} disabled={isEditable}>Modifier</Button>\n        <Button color=\"primary\" onClick={() => {\n          if (validateForm()) {\n            saveClient(client);\n            setIsEditable(false); // Désactiver les champs après la sauvegarde\n          }\n        }} disabled={!isEditable} style={{ marginLeft: '10px' }}>Enregistrer Modifications</Button>\n      </>\n    )}\n  </div>\n</CardHeader> */}\n<CardHeader className=\"bg-white text-white\">\n  <Button color=\"link\" onClick={handleBack} style={{ marginRight: '20px', color: 'black' }}>\n    <FaArrowLeft />\n  </Button>\n  <h4 className=\"mb-0\">{client._id ? \"Modifier Client\" : \"Ajouter Nouveau Client\"}</h4>\n  <div style={{ float: 'right' }}>\n    {client._id && (\n      <>\n        <Button color=\"info\" onClick={() => setIsEditable(true)} disabled={isEditable}>Modifier</Button>\n        <Button color=\"primary\" onClick={() => {\n          if (validateForm()) {\n            saveClient(client);\n          }\n        }} disabled={!isEditable} style={{ marginLeft: '10px' }}>Enregistrer Modifications</Button>\n      </>\n    )}\n  </div>\n</CardHeader>\n\n\n          <CardBody>\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '1' })}\n                  onClick={() => { toggleTab('1'); }}\n                  style={{ cursor: 'pointer' }}\n                >\n                  Informations Générales\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '2' })}\n                  onClick={() => { toggleTab('2'); }}\n                  style={{ cursor: 'pointer' }}\n                >\n                  Bilan Auditif\n                </NavLink>\n              </NavItem>\n            </Nav>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              {/* Votre formulaire existant ici */}\n              {successMessage && (\n                <UncontrolledAlert color=\"success\" className=\"fixed-alert\" style={{ position: 'fixed', top: 0, left: 0, right: 0, zIndex: 1050 }} fade={false}>\n                  <span className=\"alert-inner--icon\">\n                    <i className=\"ni ni-like-2\" />\n                  </span>\n                  <span className=\"alert-inner--text\">\n                    <strong>Succès!</strong> {successMessage}\n                  </span>\n                </UncontrolledAlert>\n              )}\n              <Form onSubmit={handleSubmit}>\n              <Row form style={{ paddingTop: '50px' }}>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"nom\">Nom</Label>\n                    <Input type=\"text\" name=\"nom\" id=\"nom\" value={client.nom} onChange={handleInputChange} required disabled={!isEditable}/>\n                    {errors.nom && <p style={{ color: 'red' }}>{errors.nom}</p>}\n                  </FormGroup>\n                </Col>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"prenom\">Prénom</Label>\n                    <Input type=\"text\" name=\"prenom\" id=\"prenom\" value={client.prenom} onChange={handleInputChange} disabled={!isEditable}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row form>\n                <Col md={4}>\n                <FormGroup>\n                    <Label for=\"dateNaissance\">Date de Naissance</Label>\n                    <Input type=\"date\" name=\"dateNaissance\" id=\"dateNaissance\" value={client.dateNaissance || ''} onChange={handleInputChange} disabled={!isEditable} />\n                  </FormGroup>\n                </Col>\n                <Col md={4}>\n                  <FormGroup>\n                    <Label for=\"mutuelle\">Mutuelle</Label>\n                    <Input type=\"text\" name=\"mutuelle\" id=\"mutuelle\" value={client.mutuelle} onChange={handleInputChange} disabled={!isEditable}/>\n                  </FormGroup>\n                </Col>\n                <Col md={4}>\n                  <FormGroup>\n                    <Label for=\"numeroSecu\">Numéro de Sécurité Sociale</Label>\n                    <Input type=\"text\" name=\"numeroSecu\" id=\"numeroSecu\" value={client.numeroSecu} onChange={handleInputChange} disabled={!isEditable} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row form>\n              <Col md={4}>\n              <FormGroup>\n  <Label for=\"statut\">Statut</Label>\n  <Input type=\"select\" name=\"statut\" id=\"statut\" value={client.statut} onChange={handleInputChange} disabled={!isEditable}>\n    <option value=\"\">Sélectionner un statut</option>\n    <option value=\"Rdv fixé\">Rdv fixé</option>\n    <option value=\"Rdv Annulé\">Rdv Annulé</option>\n    <option value=\"Appareillé\">Appareillé</option>\n    <option value=\"Période d'essai\">Période d'essai</option>\n    <option value=\"Facturé\">Facturé</option>\n  </Input>\n</FormGroup>\n</Col>\n</Row>\n              <Row form>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"telephoneFixe\">Téléphone Fixe</Label>\n                    <Input type=\"text\" name=\"telephoneFixe\" id=\"telephoneFixe\" value={client.telephoneFixe} onChange={handleInputChange} disabled={!isEditable}/>\n                  </FormGroup>\n                </Col>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"telephonePortable\">Téléphone Portable</Label>\n                    <Input type=\"text\" name=\"telephonePortable\" id=\"telephonePortable\" value={client.telephonePortable} onChange={handleInputChange} disabled={!isEditable}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <FormGroup>\n                <Label for=\"adresse\">Adresse</Label>\n                <Input type=\"text\" name=\"adresse\" id=\"adresse\" value={client.adresse} onChange={handleInputChange} disabled={!isEditable} />\n              </FormGroup>\n              <Row form>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"codePostal\">Code Postal</Label>\n                    <Input type=\"text\" name=\"codePostal\" id=\"codePostal\" value={client.codePostal} onChange={handleInputChange} disabled={!isEditable} />\n                  </FormGroup>\n                </Col>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label for=\"ville\">Ville</Label>\n                    <Input type=\"text\" name=\"ville\" id=\"ville\" value={client.ville} onChange={handleInputChange} disabled={!isEditable} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input type=\"email\" name=\"email\" id=\"email\" value={client.email} onChange={handleInputChange} required disabled={!isEditable} />\n                {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"note\">Note</Label>\n                <Input type=\"textarea\" name=\"note\" id=\"note\" value={client.note} onChange={handleInputChange} disabled={!isEditable} style={{ minHeight: '100px', maxHeight: '300px' }}/>\n              </FormGroup>\n                <Button type=\"submit\" color=\"primary\" disabled={!isEditable}>Enregistrer</Button>\n                <Button type=\"button\" color=\"secondary\" onClick={() => history.push('/admin/clients')}>Annuler</Button>\n              </Form>\n            </TabPane>\n            <TabPane tabId=\"2\">\n  {audiogrammeSuccessMessage && (\n    <UncontrolledAlert color=\"success\" className=\"fixed-alert\" fade={false}>\n      <span className=\"alert-inner--icon\"><i className=\"ni ni-like-2\" /></span>\n      <span className=\"alert-inner--text\"><strong>Succès!</strong> {audiogrammeSuccessMessage}</span>\n    </UncontrolledAlert>\n  )}\n  <Form onSubmit={handleSubmitAudiogramme} style={{ paddingTop: '50px' }}>\n    <FormGroup>\n      <Label for=\"audiogramme\">Audiogramme</Label>\n      <Input type=\"text\" name=\"audiogramme\" id=\"audiogramme\" value={client.audiogramme} onChange={handleInputChange} />\n    </FormGroup>\n    {/* Ajoutez plus de champs selon vos besoins ici */}\n    <Button type=\"submit\" color=\"primary\">Enregistrer Bilan</Button>\n  </Form>\n</TabPane>\n\n          </TabContent>\n        </CardBody>\n      </Card>\n      \n    </Container>\n    \n    </div>\n  );\n}\n  \n\nexport default NouveauClient;\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport frLocale from '@fullcalendar/core/locales/fr';\r\n// JavaScript library that creates a callendar with events\r\nimport { Calendar } from \"@fullcalendar/core\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interaction from \"@fullcalendar/interaction\";\r\n// react component used to create sweet alerts\r\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nimport { events } from \"variables/general.js\";\r\n\r\nlet calendar;\r\n\r\nclass Fullcalendar extends React.Component {\r\n  state = {\r\n    events: events,\r\n    alert: null\r\n  };\r\n  componentDidMount() {\r\n    this.createCalendar();\r\n  }\r\n  createCalendar = () => {\r\n    calendar = new Calendar(this.refs.calendar, {\r\n      plugins: [interaction, dayGridPlugin],\r\n      defaultView: \"dayGridMonth\",\r\n      locale: frLocale,\r\n      selectable: true,\r\n      selectHelper: true,\r\n      editable: true,\r\n      events: this.state.events,\r\n      // Add new event\r\n      select: info => {\r\n        this.setState({\r\n          modalAdd: true,\r\n          startDate: info.startStr,\r\n          endDate: info.endStr,\r\n          radios: \"bg-info\"\r\n        });\r\n      },\r\n      // Edit calendar event action\r\n      eventClick: ({ event }) => {\r\n        this.setState({\r\n          modalChange: true,\r\n          eventId: event.id,\r\n          eventTitle: event.title,\r\n          eventDescription: event.extendedProps.description,\r\n          radios: \"bg-info\",\r\n          event: event\r\n        });\r\n      }\r\n    });\r\n    calendar.render();\r\n    this.setState({\r\n      currentDate: calendar.view.title\r\n    });\r\n  };\r\n  changeView = newView => {\r\n    calendar.changeView(newView);\r\n    this.setState({\r\n      currentDate: calendar.view.title\r\n    });\r\n  };\r\n  addNewEvent = () => {\r\n    var newEvents = this.state.events;\r\n    newEvents.push({\r\n      title: this.state.eventTitle,\r\n      start: this.state.startDate,\r\n      end: this.state.endDate,\r\n      className: this.state.radios,\r\n      id: this.state.events[this.state.events.length - 1] + 1\r\n    });\r\n    calendar.addEvent({\r\n      title: this.state.eventTitle,\r\n      start: this.state.startDate,\r\n      end: this.state.endDate,\r\n      className: this.state.radios,\r\n      id: this.state.events[this.state.events.length - 1] + 1\r\n    });\r\n    this.setState({\r\n      modalAdd: false,\r\n      events: newEvents,\r\n      startDate: undefined,\r\n      endDate: undefined,\r\n      radios: \"bg-info\",\r\n      eventTitle: undefined\r\n    });\r\n  };\r\n  changeEvent = () => {\r\n    var newEvents = this.state.events.map((prop, key) => {\r\n      if (prop.id + \"\" === this.state.eventId + \"\") {\r\n        this.state.event.remove();\r\n        calendar.addEvent({\r\n          ...prop,\r\n          title: this.state.eventTitle,\r\n          className: this.state.radios,\r\n          description: this.state.eventDescription\r\n        });\r\n        return {\r\n          ...prop,\r\n          title: this.state.eventTitle,\r\n          className: this.state.radios,\r\n          description: this.state.eventDescription\r\n        };\r\n      } else {\r\n        return prop;\r\n      }\r\n    });\r\n    this.setState({\r\n      modalChange: false,\r\n      events: newEvents,\r\n      radios: \"bg-info\",\r\n      eventTitle: undefined,\r\n      eventDescription: undefined,\r\n      eventId: undefined,\r\n      event: undefined\r\n    });\r\n  };\r\n  deleteEventSweetAlert = () => {\r\n    this.setState({\r\n      alert: (\r\n        <ReactBSAlert\r\n          warning\r\n          style={{ display: \"block\", marginTop: \"-100px\" }}\r\n          title=\"Êtes-vous sûr?\"\r\n          onConfirm={() =>\r\n            this.setState({\r\n              alert: false,\r\n              radios: \"bg-info\",\r\n              eventTitle: undefined,\r\n              eventDescription: undefined,\r\n              eventId: undefined\r\n            })\r\n          }\r\n          onCancel={() => this.deleteEvent()}\r\n          confirmBtnCssClass=\"btn-secondary\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          confirmBtnText=\"Modifier\"\r\n          cancelBtnText=\"Oui, supprimer\"\r\n          showCancel\r\n          btnSize=\"\"\r\n        >\r\n          Vous ne pourrez pas revenir en arrière!\r\n        </ReactBSAlert>\r\n      )\r\n    });\r\n  };\r\n  deleteEvent = () => {\r\n    var newEvents = this.state.events.filter(\r\n      prop => prop.id + \"\" !== this.state.eventId\r\n    );\r\n    this.state.event.remove();\r\n    this.setState({\r\n      alert: (\r\n        <ReactBSAlert\r\n          success\r\n          style={{ display: \"block\", marginTop: \"-100px\" }}\r\n          title=\"Success\"\r\n          onConfirm={() => this.setState({ alert: null })}\r\n          onCancel={() => this.setState({ alert: null })}\r\n          confirmBtnBsStyle=\"primary\"\r\n          confirmBtnText=\"Ok\"\r\n          btnSize=\"\"\r\n        >\r\n          A few words about this sweet alert ...\r\n        </ReactBSAlert>\r\n      ),\r\n      modalChange: false,\r\n      events: newEvents,\r\n      radios: \"bg-info\",\r\n      eventTitle: undefined,\r\n      eventDescription: undefined,\r\n      eventId: undefined,\r\n      event: undefined\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.alert}\r\n        <Card className=\"card-calendar\">\r\n          <CardHeader className=\"bg-info\" style={{ background: 'linear-gradient(87deg, #11cdef 0, #1171ef 100%)'}}>\r\n            <Row style={{ marginTop: '40px'}} className=\"align-items-center py-4\">\r\n              <Col lg=\"6\"  >\r\n                <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0 mr-1\">\r\n                  {this.state.currentDate}\r\n                </h6>\r\n              </Col>\r\n              <Col className=\"mt-3 mt-lg-0 text-lg-right\" lg=\"6\">\r\n                <Button\r\n                  className=\"fullcalendar-btn-prev btn-neutral\"\r\n                  color=\"default\"\r\n                  onClick={() => {\r\n                    calendar.next();\r\n                  }}\r\n                  size=\"sm\"\r\n                >\r\n                  <i className=\"fas fa-angle-left\" />\r\n                </Button>\r\n                <Button\r\n                  className=\"fullcalendar-btn-next btn-neutral\"\r\n                  color=\"default\"\r\n                  onClick={() => {\r\n                    calendar.prev();\r\n                  }}\r\n                  size=\"sm\"\r\n                >\r\n                  <i className=\"fas fa-angle-right\" />\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-neutral\"\r\n                  color=\"default\"\r\n                  data-calendar-view=\"month\"\r\n                  onClick={() => this.changeView(\"dayGridMonth\")}\r\n                  size=\"sm\"\r\n                >\r\n                  Mois\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-neutral\"\r\n                  color=\"default\"\r\n                  data-calendar-view=\"basicWeek\"\r\n                  onClick={() => this.changeView(\"dayGridWeek\")}\r\n                  size=\"sm\"\r\n                >\r\n                  Semaine\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-neutral\"\r\n                  color=\"default\"\r\n                  data-calendar-view=\"basicDay\"\r\n                  onClick={() => this.changeView(\"dayGridDay\")}\r\n                  size=\"sm\"\r\n                >\r\n                  Jour\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody className=\"p-0\">\r\n            <div\r\n              className=\"calendar\"\r\n              ref=\"calendar\"\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n        <Modal\r\n          isOpen={this.state.modalAdd}\r\n          toggle={() => this.setState({ modalAdd: false })}\r\n          className=\"modal-dialog-centered modal-secondary\"\r\n        >\r\n          <div className=\"modal-body\">\r\n            <form className=\"new-event--form\">\r\n              <FormGroup>\r\n              <label className=\"form-control-label\">Titre de l'événement</label>\r\n                <Input\r\n                  className=\"form-control-alternative new-event--title\"\r\n                  placeholder=\"Titre de l'événement\"\r\n                  type=\"text\"\r\n                  onChange={e =>\r\n                    this.setState({ eventTitle: e.target.value })\r\n                  }\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"mb-0\">\r\n                <label className=\"form-control-label d-block mb-3\">\r\n                  Status color\r\n                </label>\r\n                <ButtonGroup\r\n                  className=\"btn-group-toggle btn-group-colors event-tag\"\r\n                  data-toggle=\"buttons\"\r\n                >\r\n                  <Button\r\n                    className={classnames(\"bg-info\", {\r\n                      active: this.state.radios === \"bg-info\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() => this.setState({ radios: \"bg-info\" })}\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-warning\", {\r\n                      active: this.state.radios === \"bg-warning\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      this.setState({ radios: \"bg-warning\" })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-danger\", {\r\n                      active: this.state.radios === \"bg-danger\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() => this.setState({ radios: \"bg-danger\" })}\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-success\", {\r\n                      active: this.state.radios === \"bg-success\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      this.setState({ radios: \"bg-success\" })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-default\", {\r\n                      active: this.state.radios === \"bg-default\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      this.setState({ radios: \"bg-default\" })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-primary\", {\r\n                      active: this.state.radios === \"bg-primary\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState({ radios: \"bg-primary\" });\r\n                    }}\r\n                  />\r\n                </ButtonGroup>\r\n              </FormGroup>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <Button\r\n              className=\"new-event--add\"\r\n              color=\"primary\"\r\n              type=\"button\"\r\n              onClick={this.addNewEvent}\r\n            >\r\n              Ajouter un événement\r\n            </Button>\r\n            <Button\r\n              className=\"ml-auto\"\r\n              color=\"link\"\r\n              type=\"button\"\r\n              onClick={() => this.setState({ modalAdd: false })}\r\n            >\r\n             Fermer\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.modalChange}\r\n          toggle={() => this.setState({ modalChange: false })}\r\n          className=\"modal-dialog-centered modal-secondary\"\r\n        >\r\n          <div className=\"modal-body\">\r\n            <Form className=\"edit-event--form\">\r\n              <FormGroup>\r\n                <label className=\"form-control-label\">Event title</label>\r\n                <Input\r\n                  className=\"form-control-alternative edit-event--title\"\r\n                  placeholder=\"Event Title\"\r\n                  type=\"text\"\r\n                  defaultValue={this.state.eventTitle}\r\n                  onChange={e =>\r\n                    this.setState({ eventTitle: e.target.value })\r\n                  }\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <label className=\"form-control-label d-block mb-3\">\r\n                Couleur du statut\r\n                </label>\r\n                <ButtonGroup\r\n                  className=\"btn-group-toggle btn-group-colors event-tag mb-0\"\r\n                  data-toggle=\"buttons\"\r\n                >\r\n                  <Button\r\n                    className={classnames(\"bg-info\", {\r\n                      active: this.state.radios === \"bg-info\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() => this.setState({ radios: \"bg-info\" })}\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-warning\", {\r\n                      active: this.state.radios === \"bg-warning\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      this.setState({ radios: \"bg-warning\" })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-danger\", {\r\n                      active: this.state.radios === \"bg-danger\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() => this.setState({ radios: \"bg-danger\" })}\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-success\", {\r\n                      active: this.state.radios === \"bg-success\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      this.setState({ radios: \"bg-success\" })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-default\", {\r\n                      active: this.state.radios === \"bg-default\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                      this.setState({ radios: \"bg-default\" })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    className={classnames(\"bg-primary\", {\r\n                      active: this.state.radios === \"bg-primary\"\r\n                    })}\r\n                    color=\"\"\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      this.setState({ radios: \"bg-primary\" });\r\n                    }}\r\n                  />\r\n                </ButtonGroup>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <label className=\"form-control-label\">Description</label>\r\n                <Input\r\n                  className=\"form-control-alternative edit-event--description textarea-autosize\"\r\n                  placeholder=\"Event Desctiption\"\r\n                  type=\"textarea\"\r\n                  defaultValue={this.state.eventDescription}\r\n                  onChange={e =>\r\n                    this.setState({ eventDescription: e.target.value })\r\n                  }\r\n                />\r\n                <i className=\"form-group--bar\" />\r\n              </FormGroup>\r\n              <input className=\"edit-event--id\" type=\"hidden\" />\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <Button color=\"primary\" onClick={this.changeEvent}>\r\n              Mettre a jour\r\n            </Button>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() =>\r\n                this.setState({ modalChange: false }, () =>\r\n                  this.deleteEventSweetAlert()\r\n                )\r\n              }\r\n            >\r\n              Supprimer\r\n            </Button>\r\n            <Button\r\n              className=\"ml-auto\"\r\n              color=\"link\"\r\n              onClick={() => this.setState({ modalChange: false })}\r\n            >\r\n              Fermer\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n      </>          \r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullcalendar;","import React, { useState, useEffect } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  Button,\n  CardBody,\n  Card,\n  CardHeader,\n  Container,\n  Row,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport Header from \"components/Headers/Header.js\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\n\nconst Corbeille = () => {\n  const [clients, setClients] = useState([]);\n  const [totalClients, setTotalClients] = useState(0);\n  const { SearchBar } = Search;\n  const [selected, setSelected] = useState([]);\n\n  const handleOnSelect = (row, isSelect) => {\n    console.log(`Select ${isSelect ? 'on' : 'off'} for row id ${row._id}`);\n    if (isSelect) {\n      setSelected(prevSelected => {\n        const newSelected = [...prevSelected, row._id];\n        console.log('New selected after add:', newSelected);\n        return newSelected;\n      });\n    } else {\n      setSelected(prevSelected => {\n        const newSelected = prevSelected.filter(x => x !== row._id);\n        console.log('New selected after remove:', newSelected);\n        return newSelected;\n      });\n    }\n  };\n  \n  const handleOnSelectAll = (isSelect, rows) => {\n    console.log(`Select all ${isSelect ? 'on' : 'off'}`);\n    if (isSelect) {\n      const idsToSelect = rows.map(r => r._id);\n      console.log('Selecting all ids:', idsToSelect);\n      setSelected(idsToSelect);\n    } else {\n      setSelected([]);\n    }\n  };\n  \n  \n  const selectAllRenderer = ({ mode, checked, indeterminate }) => (\n    <input\n      type={mode}\n      checked={checked}\n      ref={input => {\n        if (input) input.indeterminate = indeterminate;\n      }}\n      onChange={e => {\n        handleOnSelectAll(e.target.checked, clients);  // Appelez handleOnSelectAll avec le bon contexte\n      }}\n    />\n  );\n  \n  // const handleDeleteSelected = async () => {\n  //   if (window.confirm(\"Êtes-vous sûr de vouloir supprimer les clients sélectionnés ?\")) {\n  //     for (const clientId of selected) {\n  //       await fetch(`http://localhost:5100/api/clients/${clientId}`, {\n  //         method: 'DELETE',\n  //         headers: {\n  //           'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\n  //         }\n  //       })\n  //       .then(response => {\n  //         if (!response.ok) {\n  //           throw new Error(`Failed to delete client ${clientId}, status: ${response.status}`);\n  //         }\n  //         return response.json();\n  //       })\n  //       .then(data => {\n  //         if (!data.success) {\n  //           throw new Error(data.message);\n  //         }\n  //         setTotalClients(prevTotal => prevTotal - 1);\n  //         toast.success(`Client supprimé avec succès!`);\n  //       })\n  //       .catch(error => {\n  //         console.error('Error:', error);\n  //         toast.error(`Error deleting client ${clientId}: ${error.message}`);\n  //       });\n  //     }\n  //     // Mise à jour de l'état après la suppression de tous les clients sélectionnés\n  //     const newClients = clients.filter(client => !selected.includes(client._id));\n  //     setClients(newClients);\n  //     setSelected([]);\n  //   }\n  // };\n  \n  const handleDeleteSelected = async () => {\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer les clients sélectionnés définitivement ?\")) {\n      for (const clientId of selected) {\n        await deleteClient(clientId);  // Appelle la fonction deleteClient pour chaque ID\n      }\n      // Mise à jour de l'état après la suppression de tous les clients sélectionnés\n      const newClients = clients.filter(client => !selected.includes(client._id));\n      setClients(newClients);\n      setSelected([]);\n    }\n  };\n  \n  const deleteButton = selected.length > 0 ? (\n    <Button color=\"danger\" onClick={handleDeleteSelected} style={{ marginLeft: '10px' }}>\n      Supprimer la sélection\n    </Button>\n  ) : null;\n  \n  const selectRow = {\n    mode: 'checkbox',\n    clickToSelect: true,\n    selected: selected,\n    onSelect: handleOnSelect,\n    onSelectAll: handleOnSelectAll,\n    selectionHeaderRenderer: selectAllRenderer,\n    style: { backgroundColor: '#c8e6c9' }\n  };\n\n  useEffect(() => {\n    fetchDeletedClients();\n  }, []);\n\n  const fetchDeletedClients = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token not found in localStorage');\n      return;\n    }\n  \n    const cleanToken = token.trim();\n    const formattedToken = cleanToken.replace('JWT ', '');\n  \n    console.log(\"Formatted Token from localStorage:\", formattedToken);\n  \n    fetch('https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/deleted', {\n      headers: {\n         'Authorization': `Bearer ${formattedToken}`\n      }\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP status ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log('Deleted clients fetched:', data);\n      setClients(data); // Ceci met à jour l'état avec les données récupérées\n      setTotalClients(data.length);\n    })\n    .catch(err => {\n      console.error('Error fetching clients:', err.message);\n    });\n  };\n  \n  \n  \n\n  // Définition des colonnes du tableau\n  const columns = [\n    { dataField: \"_id\", text: \"ID\", hidden: true },\n    { dataField: \"nom\", text: \"Nom\", sort: true },\n    { dataField: \"prenom\", text: \"Prénom\", sort: true },\n    { dataField: \"email\", text: \"Email\", sort: true },\n    {\n      dataField: \"actions\",\n      text: \"Actions\",\n      formatter: (cellContent, row) => (\n        <div>\n          <Button color=\"success\" size=\"sm\" onClick={() => restoreClient(row._id)}>\n            Restaurer\n          </Button>\n          {' '}\n          <Button color=\"danger\" size=\"sm\" onClick={() => deleteClient(row._id)}>\n            <i className=\"fas fa-trash\"></i>\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n\n  const restoreClient = (clientId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token not found in localStorage');\n      return;\n    }\n  \n    const cleanToken = token.trim();\n    const formattedToken = cleanToken.replace('JWT ', '');\n  \n    fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/restore/${clientId}`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${formattedToken}`,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP status ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      if (data.success) {\n        setTotalClients(prevTotal => prevTotal - 1);\n        toast.success(\"Client restauré avec succés !\");\n        \n        setClients(currentClients => currentClients.filter(client => client._id !== clientId));\n      } else {\n        throw new Error(data.message);\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      toast.error(`Error: ${error.message}`);\n    });\n  };\n  \n  const deleteClient = async (clientId) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token not found in localStorage');\n      return;\n    }\n  \n    const cleanToken = token.trim();\n    const formattedToken = cleanToken.replace('JWT ', '');\n  \n    try {\n      const response = await fetch(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/deletedef/${clientId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${formattedToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(`HTTP status ${response.status}`);\n      }\n      if (data.success) {\n        toast.success(\"Client supprimé avec succès!\");\n        setTotalClients(prevTotal => prevTotal - 1);\n        setClients(currentClients => currentClients.filter(client => client._id !== clientId));\n      } else {\n        throw new Error(data.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      toast.error(`Error: ${error.message}`);\n    }\n  };\n  \n\n  return (\n    <>\n    <Header/> \n    <Container className=\"mt--7\" fluid>\n        <ToastContainer position=\"bottom-right\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\n      <Row>\n        <div className=\"col\">\n          <Card className=\"shadow\">\n            <CardHeader className=\"border-0\">\n              <h3 className=\"mb-0\">Corbeille (Total : {totalClients})</h3>\n            </CardHeader>\n            <CardBody>\n            <ToolkitProvider\n  keyField=\"_id\"\n  data={clients}\n  columns={columns}\n  search\n>\n\n                {\n                  props => (\n                    <div>\n                      {deleteButton}\n                      <SearchBar {...props.searchProps} />\n                      <BootstrapTable\n          {...props.baseProps}\n          bootstrap4\n          selectRow={selectRow}\n          pagination={paginationFactory()}\n          noDataIndication=\"Aucun client supprimé trouvé\"\n        />\n                    </div>\n                  )\n                }\n              </ToolkitProvider>\n            </CardBody>\n          </Card>\n        </div>\n      </Row>\n    </Container>\n    </>\n  );\n}\n\nexport default Corbeille;\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Container, Row, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min\";\r\nimport axios from 'axios';\r\nconst formatDate = (isoString) => {\r\n  if (!isoString) return '';\r\n  const date = new Date(isoString);\r\n  return date.toLocaleDateString('fr-FR');  // ou 'en-US' selon le format local que vous préférez\r\n}\r\nconst ClientStatusPage = () => {\r\n  const { status } = useParams(); // Récupérer le statut de l'URL\r\n  const [clients, setClients] = useState([]); // État pour stocker les clients\r\n  const history = useHistory();\r\n  const totalClients = clients.length; // Nombre total de clients affichés\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchClientsByStatus = async () => {\r\n      try {\r\n        const response = await axios.get(`https://ouieqare-crm-336f65ca3acc.herokuapp.com/api/clients/by-status/${status}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n          }\r\n        });\r\n        setClients(response.data);\r\n        console.log(\"Clients mis à jour avec le statut\", status, \":\", response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching clients:', err);\r\n      }\r\n    };\r\n\r\n    fetchClientsByStatus();\r\n  }, [status]);\r\n\r\n const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nom\", text: \"Nom\", sort: true },  // Permet le tri sur la colonne \"Nom\"\r\n    { dataField: \"prenom\", text: \"Prénom\", sort: true },  // Permet le tri sur la colonne \"Prénom\"\r\n    { dataField: \"email\", text: \"Email\", sort: true },  // Permet le tri sur la colonne \"Email\"\r\n    { dataField: \"telephonePortable\", text: \"Téléphone Portable\", sort: true },  // Permet le tri sur la colonne \"Téléphone Portable\"\r\n    { dataField: \"ville\", text: \"Ville\", sort: true },  // Permet le tri sur la colonne \"Ville\"\r\n    {\r\n      dataField: \"dateNaissance\",\r\n      text: \"Date de Naissance\",\r\n  formatter: (cellContent, row) => formatDate(row.dateNaissance),\r\n      sort: true  // Permet le tri sur la colonne \"Date de Naissance\"\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      text: 'Actions',\r\n      formatter: (cell, row) => (\r\n        <div>\r\n          {/* <Button color=\"primary\" size=\"sm\" onClick={() => handleEditClient(row)}>\r\n            <i className=\"fas fa-pencil-alt\" />\r\n          </Button> */}\r\n          {' '}\r\n          {/* <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteClient(row._id)}>\r\n            <i className=\"fas fa-trash\" />\r\n          </Button> */}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  const tablePagination = paginationFactory({\r\n    page: 1,\r\n    sizePerPage: 10,\r\n    lastPageText: '>>',\r\n    firstPageText: '<<',\r\n    nextPageText: '>',\r\n    prePageText: '<',\r\n    // showTotal: true,\r\n    alwaysShowAllBtns: true,\r\n    onPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    },\r\n    onSizePerPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Clients avec le statut: {status}</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\r\n                  {props => (\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      pagination={tablePagination}\r\n                      bordered={false}\r\n                    />\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientStatusPage;\r\n","// src/variables/general.js\nexport const dataTable = [\n    // Vos données de table ici\n    {  Prenom:\"John\", Name: \"Doe\", Date:\"01/01/2000\", email:\"johndoe@gmail.com\", position: \"07/07/2024\", phone: \"0123456789\", office: \"appareillé\" },\n    // Ajoutez d'autres entrées si nécessaire\n  ];\n  export const events = [\n    { id: 1, title: 'Event 1', start: '2020-09-05', end: '2020-09-07' },\n    { id: 2, title: 'Event 2', start: '2020-09-08', end: '2020-09-10' },\n    // Ajoutez d'autres événements selon vos besoins\n  ];","import Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport ConfirmEmail from \"./views/examples/ConfirmEmail\";\nimport EditProfile from \"./views/examples/EditProfile\";\nimport UsersTable from \"./views/examples/UsersTable\";\nimport ResetPassword from \"./views/examples/ResetPassword\";\nimport ConfirmPassword from \"./views/examples/ConfirmPassword\";\nimport ResetPasswordSuccess from \"./views/examples/ResetPasswordSuccess\";\nimport Clients from \"views/examples/Clients\";\nimport NouveauClient from \"views/examples/NouveauClient\";\nimport Corbeille from \"views/examples/Corbeille\";\nimport ClientStatusPage from \"views/examples/ClientStatusPage\";\nimport Agenda from \"views/examples/Agenda\";\nimport Factures from \"views/examples/Factures\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    api: false\n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\",\n  //   api: false\n  // },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Profil Utilisateur\",\n    icon: \"ni ni-circle-08 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n    api: true,\n    hidden: true\n  },\n  \n  {\n    path: \"/statutClient/:status\",\n    name: \"ClientStatusPage\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: ClientStatusPage,\n    layout: \"/admin\",\n    api: false,\n    hidden: true\n  },\n  {\n    path: \"/agenda\",\n    name: \"Agenda\",\n    icon: \"ni ni-calendar-grid-58\",\n    component: Agenda,\n    layout: \"/admin\",\n    api: false,\n  },\n  {\n    path: \"/clients\",\n    name: \"Clients \",\n    icon: \"ni ni-single-02\",\n    component: Clients,\n    layout: \"/admin\",\n    api: false,\n  },     \n      {\n        path: \"/corbeille\",\n        name: \"Corbeille\",\n        icon: \"ni ni-folder-17 text-red\",\n        component: Corbeille,\n        layout: \"/admin\",\n        api: false,\n      },\n      {\n        path: \"/tables\",\n        name: \"Statuts Clients\",\n        icon: \"ni ni-bullet-list-67 text-red\",\n        component: Tables,\n        layout: \"/admin\",\n        api: false\n      },\n      {\n        path: \"/factures\",\n        name: \"Factures\",\n        icon: \"ni ni-money-coins\",\n        component: Factures,\n        layout: \"/admin\",\n        api: false\n      },\n  {\n    path: \"/nouveauClient\",\n    name: \"Nouveau Client\",\n    icon: \"ni ni-fat-add\", // ou supprimez complètement l'icône\n    component: NouveauClient,\n    layout: \"/admin\",\n    api: false,\n    hidden: true // Ajouté pour cacher cette route dans le menu\n  },\n  {\n    path: \"/login\",\n    name: \"Connexion\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    api: true,\n    hidden: true\n  },\n  {\n    path: \"/register\",\n    name: \"Inscription\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    api: true,\n    hidden: true\n  },\n  {\n    path: \"/confirm-email/:id\",\n    name: \"Confirmer Email\",\n    icon: \"ni ni-check-bold text-green\",\n    component: ConfirmEmail,\n    layout: \"/auth\",\n    api: true,\n    hidden: true\n  },\n  {\n    path: \"/edit-profile\",\n    name: \"Modifier Profil\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n    api: true,\n    hidden: true\n  },\n  {\n    path: \"/users\",\n    name: \"Utilisateurs\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: UsersTable,\n    layout: \"/admin\",\n    api: true,\n    hidden: true\n  },\n  {\n    path: \"/reset-password\",\n    name: \"Réinitialiser le mot de passe\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPassword,\n    layout: \"/auth\",\n    api: true,\n    hidden: true\n  },\n  {\n    path: \"/confirm-password/:id\",\n    name: \"Confirmer le mot de passe\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ConfirmPassword,\n    layout: \"/auth\",\n    api: true,\n    hidden: true\n  },\n  {\n    path: \"/reset-success\",\n    name: \"Réinitialisation du mot de passe confirmée\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: ResetPasswordSuccess,\n    layout: \"/auth\",\n    api: false,\n    hidden: true\n  }\n];\nexport default routes;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  Modal, ModalHeader, ModalBody, ModalFooter,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nconst FacturesPDF = () => {\r\n  const history = useHistory();\r\n  const [factures, setFactures] = useState([]);\r\n  const [totalFactures, setTotalFactures] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  const fetchFactures = () => {\r\n    // Fetching logic here, update the setFactures state with response data\r\n    console.log(\"Fetching factures...\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFactures();\r\n  }, []);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      toast.warn(\"Please select a file to upload.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(\"your-upload-url\", { // Replace \"your-upload-url\" with your actual upload URL\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setFactures([...factures, data]);\r\n        toast.success(\"Facture uploaded successfully!\");\r\n        toggleModal();\r\n      } else {\r\n        throw new Error(data.message || \"Could not upload file\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      toast.error(`Upload failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nomClient\", text: \"Nom du Client\", sort: true },\r\n    { dataField: \"date\", text: \"Date\", sort: true },\r\n    { dataField: \"montant\", text: \"Montant\", sort: true },\r\n    {\r\n      dataField: \"pdf\",\r\n      text: \"PDF\",\r\n      formatter: (cellContent, row) => (\r\n        <a href={row.pdf} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Voir PDF\r\n        </a>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const { SearchBar } = Search;\r\n\r\n  return (\r\n    <>\r\n      <Header totalFactures={totalFactures} />\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\r\n                <h3 className=\"mb-0\">Factures PDF</h3>\r\n                <Button color=\"info\" onClick={toggleModal}>Importer Factures</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider keyField=\"id\" data={factures} columns={columns} search>\r\n                  {props => (\r\n                    <div>\r\n                      <div className=\"row mb-2\">\r\n                        <div className=\"col-6 text-left\">\r\n                          {/* Any additional buttons or info can go here */}\r\n                        </div>\r\n                        <div className=\"col-6 text-right\">\r\n                          <SearchBar {...props.searchProps} className=\"form-control-sm\" placeholder=\"Rechercher\" />\r\n                        </div>\r\n                      </div>\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bootstrap4\r\n                        pagination={paginationFactory()}\r\n                        bordered={false}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <Modal isOpen={modal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>Importer des Factures</ModalHeader>\r\n        <ModalBody>\r\n          <input type=\"file\" onChange={handleFileChange} accept=\"application/pdf\" />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleFileUpload}>Importer</Button>\r\n          <Button color=\"secondary\" onClick={toggleModal}>Fermer</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FacturesPDF;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/white.png\").default,\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img alt=\"...\" src={require(\"assets/img/brand/white.png\").default} />\n            </NavbarBrand>\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n              <div className=\"navbar-collapse-header d-md-none\">\n                <Row>\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    <Link to=\"/\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/brand/white.png\").default}\n                      />\n                    </Link>\n                  </Col>\n                  <Col className=\"collapse-close\" xs=\"6\">\n                    <button\n                      className=\"navbar-toggler\"\n                      id=\"navbar-collapse-main\"\n                    >\n                      <span />\n                      <span />\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                    <i className=\"ni ni-planet\" />\n                    <span className=\"nav-link-inner--text\">Menu</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/register\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-circle-08\" />\n                    <span className=\"nav-link-inner--text\">Inscription</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/login\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-key-25\" />\n                    <span className=\"nav-link-inner--text\">Connexion</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/admin/user-profile\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-single-02\" />\n                    <span className=\"nav-link-inner--text\">Profil</span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2018{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://www.ouieqare.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Vtalys\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.ouieqare.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                     Vtalys\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.ouieqare.com/presentation?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      A propos\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.ouieqare.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Bienvenue!</h1>\n                    {/* <p className=\"text-lead text-light\">\n                    Utilisez ces formulaires géniaux pour vous connecter ou créer un nouveau compte dans votre projet gratuitement.\n                    </p> */}\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        localStorage.getItem(\"token\") && localStorage.getItem(\"user\")\n            ? <Component {...props} />\n            : <Redirect to='/auth/login' />\n    )} />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nconst AuthRoutes = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        !(localStorage.getItem(\"token\") && localStorage.getItem(\"user\"))\n            ? <Component {...props} />\n            : <Redirect to='/admin/index' />\n    )} />\n);\n\nexport default AuthRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport AuthRoutes from \"./components/PrivateRoute/AuthRoutes\";\nimport { ClientsProvider } from './views/examples/ClientsContext';\n\nReactDOM.render(\n  <ClientsProvider>\n  <BrowserRouter>\n    <Switch>\n      <PrivateRoute path=\"/admin\" component={AdminLayout} />\n      <AuthRoutes path=\"/auth\" component={AuthLayout} />\n      <Redirect from=\"/\" to=\"/admin/index\" />\n    </Switch>\n  </BrowserRouter>\n  </ClientsProvider>,\n  document.getElementById(\"root\")\n);\n","const Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n"],"sourceRoot":""}